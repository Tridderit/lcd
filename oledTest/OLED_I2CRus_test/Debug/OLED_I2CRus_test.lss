
OLED_I2CRus_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018e  00800100  000032da  0000336e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000032da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000166  0080028e  0080028e  000034fe  2**3
                  ALLOC
  3 .comment      00000030  00000000  00000000  000034fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000352c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000840  00000000  00000000  0000356c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000f9c6  00000000  00000000  00003dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002c96  00000000  00000000  00013772  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004404  00000000  00000000  00016408  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000016c8  00000000  00000000  0001a80c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004dcf  00000000  00000000  0001bed4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00007afc  00000000  00000000  00020ca3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000007b8  00000000  00000000  0002879f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 32 01 	jmp	0x264	; 0x264 <__ctors_end>
       4:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
       8:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
       c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      10:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      14:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      18:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      1c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      20:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      24:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      28:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      2c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      30:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      34:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      38:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      3c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      40:	0c 94 e5 0b 	jmp	0x17ca	; 0x17ca <__vector_16>
      44:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      48:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      4c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      50:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      54:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      58:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      5c:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      60:	0c 94 b4 16 	jmp	0x2d68	; 0x2d68 <__vector_24>
      64:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__bad_interrupt>
      68:	87 0f       	add	r24, r23
      6a:	00 0f       	add	r16, r16
      6c:	8b 0f       	add	r24, r27
      6e:	03 0f       	add	r16, r19
      70:	06 0f       	add	r16, r22
      72:	0a 0f       	add	r16, r26
      74:	0d 0f       	add	r16, r29
      76:	10 0f       	add	r17, r16
      78:	85 0f       	add	r24, r21
      7a:	85 0f       	add	r24, r21
      7c:	13 0f       	add	r17, r19
      7e:	16 0f       	add	r17, r22
      80:	19 0f       	add	r17, r25
      82:	1c 0f       	add	r17, r28
      84:	1f 0f       	add	r17, r31
      86:	22 0f       	add	r18, r18
      88:	8f 0f       	add	r24, r31
      8a:	30 0f       	add	r19, r16
      8c:	33 0f       	add	r19, r19
      8e:	85 0f       	add	r24, r21
      90:	37 0f       	add	r19, r23
      92:	3b 0f       	add	r19, r27
      94:	3e 0f       	add	r19, r30
      96:	41 0f       	add	r20, r17
      98:	44 0f       	add	r20, r20
      9a:	85 0f       	add	r24, r21
      9c:	72 0f       	add	r23, r18
      9e:	47 0f       	add	r20, r23
      a0:	4a 0f       	add	r20, r26
      a2:	4d 0f       	add	r20, r29
      a4:	50 0f       	add	r21, r16
      a6:	53 0f       	add	r21, r19
      a8:	93 0f       	add	r25, r19
      aa:	61 0f       	add	r22, r17
      ac:	64 0f       	add	r22, r20
      ae:	68 0f       	add	r22, r24
      b0:	6b 0f       	add	r22, r27
      b2:	85 0f       	add	r24, r21
      b4:	6f 0f       	add	r22, r31
      b6:	72 0f       	add	r23, r18
      b8:	76 0f       	add	r23, r22
      ba:	7a 0f       	add	r23, r26
      bc:	7e 0f       	add	r23, r30
      be:	82 0f       	add	r24, r18
      c0:	df 13       	cpse	r29, r31
      c2:	45 14       	cp	r4, r5
      c4:	45 14       	cp	r4, r5
      c6:	45 14       	cp	r4, r5
      c8:	45 14       	cp	r4, r5
      ca:	45 14       	cp	r4, r5
      cc:	45 14       	cp	r4, r5
      ce:	45 14       	cp	r4, r5
      d0:	45 14       	cp	r4, r5
      d2:	45 14       	cp	r4, r5
      d4:	45 14       	cp	r4, r5
      d6:	45 14       	cp	r4, r5
      d8:	45 14       	cp	r4, r5
      da:	45 14       	cp	r4, r5
      dc:	45 14       	cp	r4, r5
      de:	45 14       	cp	r4, r5
      e0:	45 14       	cp	r4, r5
      e2:	45 14       	cp	r4, r5
      e4:	45 14       	cp	r4, r5
      e6:	45 14       	cp	r4, r5
      e8:	45 14       	cp	r4, r5
      ea:	45 14       	cp	r4, r5
      ec:	45 14       	cp	r4, r5
      ee:	45 14       	cp	r4, r5
      f0:	45 14       	cp	r4, r5
      f2:	45 14       	cp	r4, r5
      f4:	45 14       	cp	r4, r5
      f6:	45 14       	cp	r4, r5
      f8:	45 14       	cp	r4, r5
      fa:	45 14       	cp	r4, r5
      fc:	45 14       	cp	r4, r5
      fe:	45 14       	cp	r4, r5
     100:	45 14       	cp	r4, r5
     102:	45 14       	cp	r4, r5
     104:	45 14       	cp	r4, r5
     106:	45 14       	cp	r4, r5
     108:	45 14       	cp	r4, r5
     10a:	45 14       	cp	r4, r5
     10c:	45 14       	cp	r4, r5
     10e:	45 14       	cp	r4, r5
     110:	45 14       	cp	r4, r5
     112:	45 14       	cp	r4, r5
     114:	45 14       	cp	r4, r5
     116:	45 14       	cp	r4, r5
     118:	45 14       	cp	r4, r5
     11a:	45 14       	cp	r4, r5
     11c:	45 14       	cp	r4, r5
     11e:	45 14       	cp	r4, r5
     120:	45 14       	cp	r4, r5
     122:	45 14       	cp	r4, r5
     124:	45 14       	cp	r4, r5
     126:	45 14       	cp	r4, r5
     128:	45 14       	cp	r4, r5
     12a:	45 14       	cp	r4, r5
     12c:	45 14       	cp	r4, r5
     12e:	45 14       	cp	r4, r5
     130:	45 14       	cp	r4, r5
     132:	45 14       	cp	r4, r5
     134:	45 14       	cp	r4, r5
     136:	45 14       	cp	r4, r5
     138:	45 14       	cp	r4, r5
     13a:	45 14       	cp	r4, r5
     13c:	45 14       	cp	r4, r5
     13e:	45 14       	cp	r4, r5
     140:	45 14       	cp	r4, r5
     142:	45 14       	cp	r4, r5
     144:	45 14       	cp	r4, r5
     146:	45 14       	cp	r4, r5
     148:	45 14       	cp	r4, r5
     14a:	45 14       	cp	r4, r5
     14c:	45 14       	cp	r4, r5
     14e:	45 14       	cp	r4, r5
     150:	45 14       	cp	r4, r5
     152:	45 14       	cp	r4, r5
     154:	45 14       	cp	r4, r5
     156:	45 14       	cp	r4, r5
     158:	45 14       	cp	r4, r5
     15a:	45 14       	cp	r4, r5
     15c:	45 14       	cp	r4, r5
     15e:	45 14       	cp	r4, r5
     160:	85 13       	cpse	r24, r21
     162:	88 13       	cpse	r24, r24
     164:	8b 13       	cpse	r24, r27
     166:	8e 13       	cpse	r24, r30
     168:	91 13       	cpse	r25, r17
     16a:	94 13       	cpse	r25, r20
     16c:	97 13       	cpse	r25, r23
     16e:	9a 13       	cpse	r25, r26
     170:	9d 13       	cpse	r25, r29
     172:	a0 13       	cpse	r26, r16
     174:	a3 13       	cpse	r26, r19
     176:	a6 13       	cpse	r26, r22
     178:	a9 13       	cpse	r26, r25
     17a:	ac 13       	cpse	r26, r28
     17c:	af 13       	cpse	r26, r31
     17e:	b2 13       	cpse	r27, r18
     180:	b5 13       	cpse	r27, r21
     182:	b8 13       	cpse	r27, r24
     184:	bb 13       	cpse	r27, r27
     186:	be 13       	cpse	r27, r30
     188:	c1 13       	cpse	r28, r17
     18a:	c4 13       	cpse	r28, r20
     18c:	c7 13       	cpse	r28, r23
     18e:	ca 13       	cpse	r28, r26
     190:	cd 13       	cpse	r28, r29
     192:	d0 13       	cpse	r29, r16
     194:	d3 13       	cpse	r29, r19
     196:	d6 13       	cpse	r29, r22
     198:	d9 13       	cpse	r29, r25
     19a:	dc 13       	cpse	r29, r28
     19c:	df 13       	cpse	r29, r31
     19e:	e2 13       	cpse	r30, r18
     1a0:	e5 13       	cpse	r30, r21
     1a2:	e8 13       	cpse	r30, r24
     1a4:	eb 13       	cpse	r30, r27
     1a6:	ee 13       	cpse	r30, r30
     1a8:	f1 13       	cpse	r31, r17
     1aa:	f4 13       	cpse	r31, r20
     1ac:	f7 13       	cpse	r31, r23
     1ae:	fa 13       	cpse	r31, r26
     1b0:	fd 13       	cpse	r31, r29
     1b2:	00 14       	cp	r0, r0
     1b4:	03 14       	cp	r0, r3
     1b6:	06 14       	cp	r0, r6
     1b8:	09 14       	cp	r0, r9
     1ba:	0c 14       	cp	r0, r12
     1bc:	0f 14       	cp	r0, r15
     1be:	12 14       	cp	r1, r2
     1c0:	15 14       	cp	r1, r5
     1c2:	18 14       	cp	r1, r8
     1c4:	1b 14       	cp	r1, r11
     1c6:	1e 14       	cp	r1, r14
     1c8:	21 14       	cp	r2, r1
     1ca:	24 14       	cp	r2, r4
     1cc:	27 14       	cp	r2, r7
     1ce:	2a 14       	cp	r2, r10
     1d0:	2d 14       	cp	r2, r13
     1d2:	30 14       	cp	r3, r0
     1d4:	33 14       	cp	r3, r3
     1d6:	36 14       	cp	r3, r6
     1d8:	39 14       	cp	r3, r9
     1da:	3c 14       	cp	r3, r12
     1dc:	3f 14       	cp	r3, r15
     1de:	42 14       	cp	r4, r2
     1e0:	45 14       	cp	r4, r5
     1e2:	45 14       	cp	r4, r5
     1e4:	45 14       	cp	r4, r5
     1e6:	45 14       	cp	r4, r5
     1e8:	45 14       	cp	r4, r5
     1ea:	45 14       	cp	r4, r5
     1ec:	45 14       	cp	r4, r5
     1ee:	45 14       	cp	r4, r5
     1f0:	45 14       	cp	r4, r5
     1f2:	45 14       	cp	r4, r5
     1f4:	45 14       	cp	r4, r5
     1f6:	45 14       	cp	r4, r5
     1f8:	45 14       	cp	r4, r5
     1fa:	45 14       	cp	r4, r5
     1fc:	45 14       	cp	r4, r5
     1fe:	45 14       	cp	r4, r5
     200:	73 13       	cpse	r23, r19
     202:	73 13       	cpse	r23, r19

00000204 <__trampolines_end>:
     204:	00 00       	nop
     206:	00 08       	sbc	r0, r0
     208:	00 02       	muls	r16, r16
     20a:	01 00       	.word	0x0001	; ????
     20c:	00 03       	mulsu	r16, r16
     20e:	04 07       	cpc	r16, r20
	...

00000218 <digital_pin_to_bit_mask_PGM>:
     218:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     228:	04 08 10 20                                         ... 

0000022c <digital_pin_to_port_PGM>:
     22c:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     23c:	03 03 03 03                                         ....

00000240 <port_to_input_PGM>:
     240:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

0000024a <port_to_output_PGM>:
     24a:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

00000254 <port_to_mode_PGM>:
     254:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

0000025e <__ctors_start>:
     25e:	c6 03       	fmuls	r20, r22
     260:	de 0a       	sbc	r13, r30
     262:	f9 15       	cp	r31, r9

00000264 <__ctors_end>:
     264:	11 24       	eor	r1, r1
     266:	1f be       	out	0x3f, r1	; 63
     268:	cf ef       	ldi	r28, 0xFF	; 255
     26a:	d8 e0       	ldi	r29, 0x08	; 8
     26c:	de bf       	out	0x3e, r29	; 62
     26e:	cd bf       	out	0x3d, r28	; 61

00000270 <__do_copy_data>:
     270:	12 e0       	ldi	r17, 0x02	; 2
     272:	a0 e0       	ldi	r26, 0x00	; 0
     274:	b1 e0       	ldi	r27, 0x01	; 1
     276:	ea ed       	ldi	r30, 0xDA	; 218
     278:	f2 e3       	ldi	r31, 0x32	; 50
     27a:	02 c0       	rjmp	.+4      	; 0x280 <__do_copy_data+0x10>
     27c:	05 90       	lpm	r0, Z+
     27e:	0d 92       	st	X+, r0
     280:	ae 38       	cpi	r26, 0x8E	; 142
     282:	b1 07       	cpc	r27, r17
     284:	d9 f7       	brne	.-10     	; 0x27c <__do_copy_data+0xc>

00000286 <__do_clear_bss>:
     286:	23 e0       	ldi	r18, 0x03	; 3
     288:	ae e8       	ldi	r26, 0x8E	; 142
     28a:	b2 e0       	ldi	r27, 0x02	; 2
     28c:	01 c0       	rjmp	.+2      	; 0x290 <.do_clear_bss_start>

0000028e <.do_clear_bss_loop>:
     28e:	1d 92       	st	X+, r1

00000290 <.do_clear_bss_start>:
     290:	a4 3f       	cpi	r26, 0xF4	; 244
     292:	b2 07       	cpc	r27, r18
     294:	e1 f7       	brne	.-8      	; 0x28e <.do_clear_bss_loop>

00000296 <__do_global_ctors>:
     296:	11 e0       	ldi	r17, 0x01	; 1
     298:	c2 e3       	ldi	r28, 0x32	; 50
     29a:	d1 e0       	ldi	r29, 0x01	; 1
     29c:	04 c0       	rjmp	.+8      	; 0x2a6 <__do_global_ctors+0x10>
     29e:	21 97       	sbiw	r28, 0x01	; 1
     2a0:	fe 01       	movw	r30, r28
     2a2:	0e 94 17 18 	call	0x302e	; 0x302e <__tablejump2__>
     2a6:	cf 32       	cpi	r28, 0x2F	; 47
     2a8:	d1 07       	cpc	r29, r17
     2aa:	c9 f7       	brne	.-14     	; 0x29e <__do_global_ctors+0x8>
     2ac:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <main>
     2b0:	0c 94 6b 19 	jmp	0x32d6	; 0x32d6 <_exit>

000002b4 <__bad_interrupt>:
     2b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002b8 <_Z12buttons_initv>:
     2b8:	62 e0       	ldi	r22, 0x02	; 2
     2ba:	80 e1       	ldi	r24, 0x10	; 16
     2bc:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
     2c0:	62 e0       	ldi	r22, 0x02	; 2
     2c2:	81 e1       	ldi	r24, 0x11	; 17
     2c4:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
     2c8:	62 e0       	ldi	r22, 0x02	; 2
     2ca:	8f e0       	ldi	r24, 0x0F	; 15
     2cc:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
     2d0:	62 e0       	ldi	r22, 0x02	; 2
     2d2:	8e e0       	ldi	r24, 0x0E	; 14
     2d4:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
     2d8:	61 e0       	ldi	r22, 0x01	; 1
     2da:	87 e0       	ldi	r24, 0x07	; 7
     2dc:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
     2e0:	61 e0       	ldi	r22, 0x01	; 1
     2e2:	86 e0       	ldi	r24, 0x06	; 6
     2e4:	0c 94 0b 0d 	jmp	0x1a16	; 0x1a16 <pinMode>

000002e8 <_Z9get_value9lcdValues>:
{
	valLcd[param] = value;
}
int get_value(lcdValues param)
{
	return valLcd[param];
     2e8:	e8 2f       	mov	r30, r24
     2ea:	f0 e0       	ldi	r31, 0x00	; 0
     2ec:	ee 0f       	add	r30, r30
     2ee:	ff 1f       	adc	r31, r31
     2f0:	e0 57       	subi	r30, 0x70	; 112
     2f2:	fd 4f       	sbci	r31, 0xFD	; 253
}
     2f4:	80 81       	ld	r24, Z
     2f6:	91 81       	ldd	r25, Z+1	; 0x01
     2f8:	08 95       	ret

000002fa <_Z8can_initv>:

/*Initialize can*/
void can_init()
{
	SPI.begin();
     2fa:	0e 94 c3 14 	call	0x2986	; 0x2986 <_ZN8SPIClass5beginEv>
	pinMode(10, OUTPUT);
     2fe:	61 e0       	ldi	r22, 0x01	; 1
     300:	8a e0       	ldi	r24, 0x0A	; 10
     302:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
	digitalWrite(10, HIGH);
     306:	61 e0       	ldi	r22, 0x01	; 1
     308:	8a e0       	ldi	r24, 0x0A	; 10
     30a:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <digitalWrite>
	mcp2515.reset();
     30e:	88 ef       	ldi	r24, 0xF8	; 248
     310:	92 e0       	ldi	r25, 0x02	; 2
     312:	0e 94 7a 10 	call	0x20f4	; 0x20f4 <_ZN7MCP25155resetEv>
	mcp2515.setBitrate(CAN_250KBPS,MCP_16MHZ);
     316:	41 e0       	ldi	r20, 0x01	; 1
     318:	6d e0       	ldi	r22, 0x0D	; 13
     31a:	88 ef       	ldi	r24, 0xF8	; 248
     31c:	92 e0       	ldi	r25, 0x02	; 2
     31e:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK>
	mcp2515.setNormalMode();
     322:	88 ef       	ldi	r24, 0xF8	; 248
     324:	92 e0       	ldi	r25, 0x02	; 2
     326:	0c 94 e0 0e 	jmp	0x1dc0	; 0x1dc0 <_ZN7MCP251513setNormalModeEv>

0000032a <_Z20get_values_for_pagesv>:
}

/*Read can messages and save values for pages*/
void get_values_for_pages()
{
     32a:	cf 92       	push	r12
     32c:	df 92       	push	r13
     32e:	ef 92       	push	r14
     330:	ff 92       	push	r15
	mcp2515.readMessage(&canMsg);
     332:	68 ed       	ldi	r22, 0xD8	; 216
     334:	72 e0       	ldi	r23, 0x02	; 2
     336:	88 ef       	ldi	r24, 0xF8	; 248
     338:	92 e0       	ldi	r25, 0x02	; 2
     33a:	0e 94 7f 12 	call	0x24fe	; 0x24fe <_ZN7MCP251511readMessageEP9can_frame>
	index = canMsg.can_id;
     33e:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <canMsg>
     342:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <canMsg+0x1>
     346:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <__data_end+0x1>
     34a:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <__data_end>
	switch (index) {
     34e:	87 32       	cpi	r24, 0x27	; 39
     350:	91 05       	cpc	r25, r1
     352:	09 f4       	brne	.+2      	; 0x356 <_Z20get_values_for_pagesv+0x2c>
     354:	29 c1       	rjmp	.+594    	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
     356:	e4 f4       	brge	.+56     	; 0x390 <_Z20get_values_for_pagesv+0x66>
     358:	80 3e       	cpi	r24, 0xE0	; 224
     35a:	20 ee       	ldi	r18, 0xE0	; 224
     35c:	92 07       	cpc	r25, r18
     35e:	09 f4       	brne	.+2      	; 0x362 <_Z20get_values_for_pagesv+0x38>
     360:	07 c1       	rjmp	.+526    	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
     362:	80 3a       	cpi	r24, 0xA0	; 160
     364:	21 ee       	ldi	r18, 0xE1	; 225
     366:	92 07       	cpc	r25, r18
     368:	09 f4       	brne	.+2      	; 0x36c <_Z20get_values_for_pagesv+0x42>
     36a:	b2 c0       	rjmp	.+356    	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
     36c:	80 3a       	cpi	r24, 0xA0	; 160
     36e:	90 4e       	sbci	r25, 0xE0	; 224
     370:	09 f0       	breq	.+2      	; 0x374 <_Z20get_values_for_pagesv+0x4a>
     372:	4c c1       	rjmp	.+664    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     374:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <canMsg+0xb>
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	98 2f       	mov	r25, r24
     37c:	88 27       	eor	r24, r24
     37e:	20 91 e2 02 	lds	r18, 0x02E2	; 0x8002e2 <canMsg+0xa>
     382:	82 0f       	add	r24, r18
     384:	91 1d       	adc	r25, r1
     386:	90 93 b5 02 	sts	0x02B5, r25	; 0x8002b5 <valLcd+0x25>
     38a:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <valLcd+0x24>
				break;	
			case 0x18f3e0a0:
				set_values(canMsg.data[2] + (canMsg.data[3] << 8), dc_FaultCode);
				break;				
		}
}
     38e:	3e c1       	rjmp	.+636    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
/*Read can messages and save values for pages*/
void get_values_for_pages()
{
	mcp2515.readMessage(&canMsg);
	index = canMsg.can_id;
	switch (index) {
     390:	81 38       	cpi	r24, 0x81	; 129
     392:	22 e0       	ldi	r18, 0x02	; 2
     394:	92 07       	cpc	r25, r18
     396:	e9 f0       	breq	.+58     	; 0x3d2 <_Z20get_values_for_pagesv+0xa8>
     398:	94 f4       	brge	.+36     	; 0x3be <_Z20get_values_for_pagesv+0x94>
     39a:	81 38       	cpi	r24, 0x81	; 129
     39c:	91 40       	sbci	r25, 0x01	; 1
     39e:	09 f0       	breq	.+2      	; 0x3a2 <_Z20get_values_for_pagesv+0x78>
     3a0:	35 c1       	rjmp	.+618    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     3a2:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <canMsg+0xb>
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	98 2f       	mov	r25, r24
     3aa:	88 27       	eor	r24, r24
     3ac:	20 91 e2 02 	lds	r18, 0x02E2	; 0x8002e2 <canMsg+0xa>
     3b0:	82 0f       	add	r24, r18
     3b2:	91 1d       	adc	r25, r1
     3b4:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <valLcd+0x2f>
     3b8:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <valLcd+0x2e>
     3bc:	27 c1       	rjmp	.+590    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
/*Read can messages and save values for pages*/
void get_values_for_pages()
{
	mcp2515.readMessage(&canMsg);
	index = canMsg.can_id;
	switch (index) {
     3be:	81 38       	cpi	r24, 0x81	; 129
     3c0:	23 e0       	ldi	r18, 0x03	; 3
     3c2:	92 07       	cpc	r25, r18
     3c4:	09 f4       	brne	.+2      	; 0x3c8 <_Z20get_values_for_pagesv+0x9e>
     3c6:	5d c0       	rjmp	.+186    	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     3c8:	81 38       	cpi	r24, 0x81	; 129
     3ca:	94 40       	sbci	r25, 0x04	; 4
     3cc:	09 f4       	brne	.+2      	; 0x3d0 <_Z20get_values_for_pagesv+0xa6>
     3ce:	72 c0       	rjmp	.+228    	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
     3d0:	1d c1       	rjmp	.+570    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
			case 0x181:
				set_values(canMsg.data[2] + (canMsg.data[3] << 8), ac_dc_FaultCode);
				break;
			case 0x281: 
				set_values((canMsg.data[2] + (canMsg.data[3] << 8)) >> 4, gen_CurrentAC);
     3d2:	40 91 e3 02 	lds	r20, 0x02E3	; 0x8002e3 <canMsg+0xb>
     3d6:	50 e0       	ldi	r21, 0x00	; 0
     3d8:	54 2f       	mov	r21, r20
     3da:	44 27       	eor	r20, r20
     3dc:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <canMsg+0xa>
     3e0:	48 0f       	add	r20, r24
     3e2:	51 1d       	adc	r21, r1
     3e4:	f4 e0       	ldi	r31, 0x04	; 4
     3e6:	55 95       	asr	r21
     3e8:	47 95       	ror	r20
     3ea:	fa 95       	dec	r31
     3ec:	e1 f7       	brne	.-8      	; 0x3e6 <_Z20get_values_for_pagesv+0xbc>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     3ee:	50 93 93 02 	sts	0x0293, r21	; 0x800293 <valLcd+0x3>
     3f2:	40 93 92 02 	sts	0x0292, r20	; 0x800292 <valLcd+0x2>
			case 0x181:
				set_values(canMsg.data[2] + (canMsg.data[3] << 8), ac_dc_FaultCode);
				break;
			case 0x281: 
				set_values((canMsg.data[2] + (canMsg.data[3] << 8)) >> 4, gen_CurrentAC);
				set_values((canMsg.data[0] + (canMsg.data[1] << 8)) >> 4, gen_VoltageAC);
     3f6:	20 91 e1 02 	lds	r18, 0x02E1	; 0x8002e1 <canMsg+0x9>
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	32 2f       	mov	r19, r18
     3fe:	22 27       	eor	r18, r18
     400:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <canMsg+0x8>
     404:	28 0f       	add	r18, r24
     406:	31 1d       	adc	r19, r1
     408:	b4 e0       	ldi	r27, 0x04	; 4
     40a:	35 95       	asr	r19
     40c:	27 95       	ror	r18
     40e:	ba 95       	dec	r27
     410:	e1 f7       	brne	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     412:	30 93 95 02 	sts	0x0295, r19	; 0x800295 <valLcd+0x5>
     416:	20 93 94 02 	sts	0x0294, r18	; 0x800294 <valLcd+0x4>
     41a:	42 9f       	mul	r20, r18
     41c:	c0 01       	movw	r24, r0
     41e:	43 9f       	mul	r20, r19
     420:	90 0d       	add	r25, r0
     422:	52 9f       	mul	r21, r18
     424:	90 0d       	add	r25, r0
     426:	11 24       	eor	r1, r1
     428:	68 ee       	ldi	r22, 0xE8	; 232
     42a:	73 e0       	ldi	r23, 0x03	; 3
     42c:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__divmodhi4>
     430:	70 93 99 02 	sts	0x0299, r23	; 0x800299 <valLcd+0x9>
     434:	60 93 98 02 	sts	0x0298, r22	; 0x800298 <valLcd+0x8>
     438:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <canMsg+0xc>
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	98 2f       	mov	r25, r24
     440:	88 27       	eor	r24, r24
     442:	20 91 e5 02 	lds	r18, 0x02E5	; 0x8002e5 <canMsg+0xd>
     446:	82 0f       	add	r24, r18
     448:	91 1d       	adc	r25, r1
     44a:	34 e0       	ldi	r19, 0x04	; 4
     44c:	95 95       	asr	r25
     44e:	87 95       	ror	r24
     450:	3a 95       	dec	r19
     452:	e1 f7       	brne	.-8      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     454:	90 93 ab 02 	sts	0x02AB, r25	; 0x8002ab <valLcd+0x1b>
     458:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <valLcd+0x1a>
     45c:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <canMsg+0xe>
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	98 2f       	mov	r25, r24
     464:	88 27       	eor	r24, r24
     466:	20 91 e7 02 	lds	r18, 0x02E7	; 0x8002e7 <canMsg+0xf>
     46a:	82 0f       	add	r24, r18
     46c:	91 1d       	adc	r25, r1
     46e:	54 e0       	ldi	r21, 0x04	; 4
     470:	95 95       	asr	r25
     472:	87 95       	ror	r24
     474:	5a 95       	dec	r21
     476:	e1 f7       	brne	.-8      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
     478:	90 93 ad 02 	sts	0x02AD, r25	; 0x8002ad <valLcd+0x1d>
     47c:	80 93 ac 02 	sts	0x02AC, r24	; 0x8002ac <valLcd+0x1c>
     480:	c5 c0       	rjmp	.+394    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
     482:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <canMsg+0xe>
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <valLcd+0x1f>
     48c:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <valLcd+0x1e>
     490:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <canMsg+0xb>
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	98 2f       	mov	r25, r24
     498:	88 27       	eor	r24, r24
     49a:	20 91 e2 02 	lds	r18, 0x02E2	; 0x8002e2 <canMsg+0xa>
     49e:	82 0f       	add	r24, r18
     4a0:	91 1d       	adc	r25, r1
     4a2:	74 e0       	ldi	r23, 0x04	; 4
     4a4:	95 95       	asr	r25
     4a6:	87 95       	ror	r24
     4a8:	7a 95       	dec	r23
     4aa:	e1 f7       	brne	.-8      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     4ac:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <valLcd+0x7>
     4b0:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <valLcd+0x6>
     4b4:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <canMsg+0x9>
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	98 2f       	mov	r25, r24
     4bc:	88 27       	eor	r24, r24
     4be:	20 91 e0 02 	lds	r18, 0x02E0	; 0x8002e0 <canMsg+0x8>
     4c2:	82 0f       	add	r24, r18
     4c4:	91 1d       	adc	r25, r1
     4c6:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <valLcd+0x1>
     4ca:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <valLcd>
     4ce:	9e c0       	rjmp	.+316    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
				set_values((canMsg.data[2] + (canMsg.data[3] << 8)) >> 4, gen_Temperature);
			case 0x481: //Gen_Frequency
				set_values((canMsg.data[0] + (canMsg.data[1] << 8) + (canMsg.data[2] << 16) + (canMsg.data[3] << 24)), gen_Velocity);
				break;
			case 0x18f3e1a0: //DcDc_Out (dcControl_ActualValues)		
				set_values(0.1 * (canMsg.data[0] + (canMsg.data[1] << 8)), dc_VoltageDC);
     4d0:	60 91 e1 02 	lds	r22, 0x02E1	; 0x8002e1 <canMsg+0x9>
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	76 2f       	mov	r23, r22
     4d8:	66 27       	eor	r22, r22
     4da:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <canMsg+0x8>
     4de:	68 0f       	add	r22, r24
     4e0:	71 1d       	adc	r23, r1
     4e2:	07 2e       	mov	r0, r23
     4e4:	00 0c       	add	r0, r0
     4e6:	88 0b       	sbc	r24, r24
     4e8:	99 0b       	sbc	r25, r25
     4ea:	0e 94 69 18 	call	0x30d2	; 0x30d2 <__floatsisf>
     4ee:	2d ec       	ldi	r18, 0xCD	; 205
     4f0:	3c ec       	ldi	r19, 0xCC	; 204
     4f2:	4c ec       	ldi	r20, 0xCC	; 204
     4f4:	5d e3       	ldi	r21, 0x3D	; 61
     4f6:	0e 94 f5 18 	call	0x31ea	; 0x31ea <__mulsf3>
     4fa:	0e 94 31 18 	call	0x3062	; 0x3062 <__fixsfsi>
     4fe:	6b 01       	movw	r12, r22
     500:	7c 01       	movw	r14, r24
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     502:	70 93 a3 02 	sts	0x02A3, r23	; 0x8002a3 <valLcd+0x13>
     506:	60 93 a2 02 	sts	0x02A2, r22	; 0x8002a2 <valLcd+0x12>
			case 0x481: //Gen_Frequency
				set_values((canMsg.data[0] + (canMsg.data[1] << 8) + (canMsg.data[2] << 16) + (canMsg.data[3] << 24)), gen_Velocity);
				break;
			case 0x18f3e1a0: //DcDc_Out (dcControl_ActualValues)		
				set_values(0.1 * (canMsg.data[0] + (canMsg.data[1] << 8)), dc_VoltageDC);
				set_values(0.1 * (canMsg.data[2] + (canMsg.data[3] << 8)), dc_CurrentDC);
     50a:	60 91 e3 02 	lds	r22, 0x02E3	; 0x8002e3 <canMsg+0xb>
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	76 2f       	mov	r23, r22
     512:	66 27       	eor	r22, r22
     514:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <canMsg+0xa>
     518:	68 0f       	add	r22, r24
     51a:	71 1d       	adc	r23, r1
     51c:	07 2e       	mov	r0, r23
     51e:	00 0c       	add	r0, r0
     520:	88 0b       	sbc	r24, r24
     522:	99 0b       	sbc	r25, r25
     524:	0e 94 69 18 	call	0x30d2	; 0x30d2 <__floatsisf>
     528:	2d ec       	ldi	r18, 0xCD	; 205
     52a:	3c ec       	ldi	r19, 0xCC	; 204
     52c:	4c ec       	ldi	r20, 0xCC	; 204
     52e:	5d e3       	ldi	r21, 0x3D	; 61
     530:	0e 94 f5 18 	call	0x31ea	; 0x31ea <__mulsf3>
     534:	0e 94 31 18 	call	0x3062	; 0x3062 <__fixsfsi>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     538:	70 93 a5 02 	sts	0x02A5, r23	; 0x8002a5 <valLcd+0x15>
     53c:	60 93 a4 02 	sts	0x02A4, r22	; 0x8002a4 <valLcd+0x14>
     540:	6c 9d       	mul	r22, r12
     542:	90 01       	movw	r18, r0
     544:	6d 9d       	mul	r22, r13
     546:	30 0d       	add	r19, r0
     548:	7c 9d       	mul	r23, r12
     54a:	30 0d       	add	r19, r0
     54c:	11 24       	eor	r1, r1
     54e:	c9 01       	movw	r24, r18
     550:	68 ee       	ldi	r22, 0xE8	; 232
     552:	73 e0       	ldi	r23, 0x03	; 3
     554:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__divmodhi4>
     558:	70 93 a7 02 	sts	0x02A7, r23	; 0x8002a7 <valLcd+0x17>
     55c:	60 93 a6 02 	sts	0x02A6, r22	; 0x8002a6 <valLcd+0x16>
     560:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <canMsg+0xe>
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	90 93 a9 02 	sts	0x02A9, r25	; 0x8002a9 <valLcd+0x19>
     56a:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <valLcd+0x18>
     56e:	4e c0       	rjmp	.+156    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
				set_values(0.1 * (canMsg.data[2] + (canMsg.data[3] << 8)), dc_CurrentDC);
				set_values((get_value(dc_VoltageDC) * get_value(dc_CurrentDC))/1000, dc_PowerDC);
				set_values(canMsg.data[6], dc_HeatsingTemp);
				break;
			case 0x18f3e0e0: //DcAc_Out							
				set_values(canMsg.data[2], ac_VoltageAC);
     570:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <canMsg+0xa>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     574:	28 2f       	mov	r18, r24
     576:	30 e0       	ldi	r19, 0x00	; 0
     578:	30 93 9b 02 	sts	0x029B, r19	; 0x80029b <valLcd+0xb>
     57c:	20 93 9a 02 	sts	0x029A, r18	; 0x80029a <valLcd+0xa>
				set_values((get_value(dc_VoltageDC) * get_value(dc_CurrentDC))/1000, dc_PowerDC);
				set_values(canMsg.data[6], dc_HeatsingTemp);
				break;
			case 0x18f3e0e0: //DcAc_Out							
				set_values(canMsg.data[2], ac_VoltageAC);
				set_values(canMsg.data[3], ac_CurrentAC);
     580:	90 91 e3 02 	lds	r25, 0x02E3	; 0x8002e3 <canMsg+0xb>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     584:	29 2f       	mov	r18, r25
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	30 93 9d 02 	sts	0x029D, r19	; 0x80029d <valLcd+0xd>
     58c:	20 93 9c 02 	sts	0x029C, r18	; 0x80029c <valLcd+0xc>
     590:	89 9f       	mul	r24, r25
     592:	c0 01       	movw	r24, r0
     594:	11 24       	eor	r1, r1
     596:	68 ee       	ldi	r22, 0xE8	; 232
     598:	73 e0       	ldi	r23, 0x03	; 3
     59a:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__divmodhi4>
     59e:	70 93 9f 02 	sts	0x029F, r23	; 0x80029f <valLcd+0xf>
     5a2:	60 93 9e 02 	sts	0x029E, r22	; 0x80029e <valLcd+0xe>
     5a6:	32 c0       	rjmp	.+100    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
				set_values(canMsg.data[2], ac_VoltageAC);
				set_values(canMsg.data[3], ac_CurrentAC);
				set_values((get_value(ac_VoltageAC) * get_value(ac_CurrentAC))/1000, ac_PowerAC);
				break;
			case 0x18ff0027: //mcu_st  
				set_values((canMsg.data[7]>>0) & 1, mcu_st_ACDC_on);
     5a8:	80 91 e7 02 	lds	r24, 0x02E7	; 0x8002e7 <canMsg+0xf>
int index; //index of received/transmitted can messages

/*Set and get lcd values*/
int set_values(int value, lcdValues param)
{
	valLcd[param] = value;
     5ac:	98 2f       	mov	r25, r24
     5ae:	91 70       	andi	r25, 0x01	; 1
     5b0:	90 93 ba 02 	sts	0x02BA, r25	; 0x8002ba <valLcd+0x2a>
     5b4:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <valLcd+0x2b>
     5b8:	81 fb       	bst	r24, 1
     5ba:	99 27       	eor	r25, r25
     5bc:	90 f9       	bld	r25, 0
     5be:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <valLcd+0x2c>
     5c2:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <valLcd+0x2d>
     5c6:	82 fb       	bst	r24, 2
     5c8:	99 27       	eor	r25, r25
     5ca:	90 f9       	bld	r25, 0
     5cc:	90 93 b0 02 	sts	0x02B0, r25	; 0x8002b0 <valLcd+0x20>
     5d0:	10 92 b1 02 	sts	0x02B1, r1	; 0x8002b1 <valLcd+0x21>
     5d4:	83 fb       	bst	r24, 3
     5d6:	99 27       	eor	r25, r25
     5d8:	90 f9       	bld	r25, 0
     5da:	90 93 b2 02 	sts	0x02B2, r25	; 0x8002b2 <valLcd+0x22>
     5de:	10 92 b3 02 	sts	0x02B3, r1	; 0x8002b3 <valLcd+0x23>
     5e2:	84 fb       	bst	r24, 4
     5e4:	99 27       	eor	r25, r25
     5e6:	90 f9       	bld	r25, 0
     5e8:	90 93 b6 02 	sts	0x02B6, r25	; 0x8002b6 <valLcd+0x26>
     5ec:	10 92 b7 02 	sts	0x02B7, r1	; 0x8002b7 <valLcd+0x27>
     5f0:	85 fb       	bst	r24, 5
     5f2:	99 27       	eor	r25, r25
     5f4:	90 f9       	bld	r25, 0
     5f6:	90 93 b8 02 	sts	0x02B8, r25	; 0x8002b8 <valLcd+0x28>
     5fa:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <valLcd+0x29>
     5fe:	86 fb       	bst	r24, 6
     600:	88 27       	eor	r24, r24
     602:	80 f9       	bld	r24, 0
     604:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <valLcd+0x30>
     608:	10 92 c1 02 	sts	0x02C1, r1	; 0x8002c1 <valLcd+0x31>
				break;	
			case 0x18f3e0a0:
				set_values(canMsg.data[2] + (canMsg.data[3] << 8), dc_FaultCode);
				break;				
		}
}
     60c:	ff 90       	pop	r15
     60e:	ef 90       	pop	r14
     610:	df 90       	pop	r13
     612:	cf 90       	pop	r12
     614:	08 95       	ret

00000616 <_Z20send_control_messagev>:

/*Send control message to control unit*/
void send_control_message()
{
     616:	cf 92       	push	r12
     618:	df 92       	push	r13
     61a:	ef 92       	push	r14
     61c:	ff 92       	push	r15
     61e:	0f 93       	push	r16
     620:	1f 93       	push	r17
	canMsg1.can_id  = 0x18FF0028;
     622:	88 e2       	ldi	r24, 0x28	; 40
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	af ef       	ldi	r26, 0xFF	; 255
     628:	b8 e1       	ldi	r27, 0x18	; 24
     62a:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <canMsg1>
     62e:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <canMsg1+0x1>
     632:	a0 93 ea 02 	sts	0x02EA, r26	; 0x8002ea <canMsg1+0x2>
     636:	b0 93 eb 02 	sts	0x02EB, r27	; 0x8002eb <canMsg1+0x3>
	canMsg1.can_dlc = 8;
     63a:	88 e0       	ldi	r24, 0x08	; 8
     63c:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <canMsg1+0x4>
     640:	e1 ef       	ldi	r30, 0xF1	; 241
     642:	f2 e0       	ldi	r31, 0x02	; 2
	for (int j = 1; j < 8; j++) {
		canMsg1.data[j] = 0x00;
     644:	11 92       	st	Z+, r1
/*Send control message to control unit*/
void send_control_message()
{
	canMsg1.can_id  = 0x18FF0028;
	canMsg1.can_dlc = 8;
	for (int j = 1; j < 8; j++) {
     646:	42 e0       	ldi	r20, 0x02	; 2
     648:	e8 3f       	cpi	r30, 0xF8	; 248
     64a:	f4 07       	cpc	r31, r20
     64c:	d9 f7       	brne	.-10     	; 0x644 <_Z20send_control_messagev+0x2e>
		canMsg1.data[j] = 0x00;
	}
	stateOn = digitalRead(buttonStart);
     64e:	80 e1       	ldi	r24, 0x10	; 16
     650:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     654:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <stateOn+0x1>
     658:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <stateOn>
	stateOff = digitalRead(buttonStop);
     65c:	81 e1       	ldi	r24, 0x11	; 17
     65e:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     662:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     666:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	if (stateOn == 0 && stateOn_ == 1) {
     66a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <stateOn>
     66e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <stateOn+0x1>
     672:	23 2b       	or	r18, r19
     674:	51 f4       	brne	.+20     	; 0x68a <_Z20send_control_messagev+0x74>
     676:	20 91 d0 02 	lds	r18, 0x02D0	; 0x8002d0 <stateOn_>
     67a:	30 91 d1 02 	lds	r19, 0x02D1	; 0x8002d1 <stateOn_+0x1>
     67e:	21 30       	cpi	r18, 0x01	; 1
     680:	31 05       	cpc	r19, r1
     682:	19 f4       	brne	.+6      	; 0x68a <_Z20send_control_messagev+0x74>
		canMsg1.data[0] = 0x01;
     684:	21 e0       	ldi	r18, 0x01	; 1
     686:	20 93 f0 02 	sts	0x02F0, r18	; 0x8002f0 <canMsg1+0x8>
	}
	if (stateOff == 1 && stateOff_ == 0) {
     68a:	01 97       	sbiw	r24, 0x01	; 1
     68c:	41 f4       	brne	.+16     	; 0x69e <_Z20send_control_messagev+0x88>
     68e:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <stateOff_>
     692:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <stateOff_+0x1>
     696:	89 2b       	or	r24, r25
     698:	11 f4       	brne	.+4      	; 0x69e <_Z20send_control_messagev+0x88>
		canMsg1.data[0] = 0x00;
     69a:	10 92 f0 02 	sts	0x02F0, r1	; 0x8002f0 <canMsg1+0x8>
	}
	stateOff_ = digitalRead(buttonStop);
     69e:	81 e1       	ldi	r24, 0x11	; 17
     6a0:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     6a4:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <stateOff_+0x1>
     6a8:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <stateOff_>
	stateOn_ = digitalRead(buttonStart);
     6ac:	80 e1       	ldi	r24, 0x10	; 16
     6ae:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     6b2:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <stateOn_+0x1>
     6b6:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <stateOn_>
	currentMillis = millis();
     6ba:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     6be:	60 93 ca 02 	sts	0x02CA, r22	; 0x8002ca <currentMillis>
     6c2:	70 93 cb 02 	sts	0x02CB, r23	; 0x8002cb <currentMillis+0x1>
     6c6:	80 93 cc 02 	sts	0x02CC, r24	; 0x8002cc <currentMillis+0x2>
     6ca:	90 93 cd 02 	sts	0x02CD, r25	; 0x8002cd <currentMillis+0x3>
	if(currentMillis - previousMillis >= 500) {
     6ce:	00 91 c6 02 	lds	r16, 0x02C6	; 0x8002c6 <previousMillis>
     6d2:	10 91 c7 02 	lds	r17, 0x02C7	; 0x8002c7 <previousMillis+0x1>
     6d6:	20 91 c8 02 	lds	r18, 0x02C8	; 0x8002c8 <previousMillis+0x2>
     6da:	30 91 c9 02 	lds	r19, 0x02C9	; 0x8002c9 <previousMillis+0x3>
     6de:	6b 01       	movw	r12, r22
     6e0:	7c 01       	movw	r14, r24
     6e2:	c0 1a       	sub	r12, r16
     6e4:	d1 0a       	sbc	r13, r17
     6e6:	e2 0a       	sbc	r14, r18
     6e8:	f3 0a       	sbc	r15, r19
     6ea:	44 ef       	ldi	r20, 0xF4	; 244
     6ec:	c4 16       	cp	r12, r20
     6ee:	41 e0       	ldi	r20, 0x01	; 1
     6f0:	d4 06       	cpc	r13, r20
     6f2:	e1 04       	cpc	r14, r1
     6f4:	f1 04       	cpc	r15, r1
     6f6:	d0 f0       	brcs	.+52     	; 0x72c <_Z20send_control_messagev+0x116>
		previousMillis = currentMillis;
     6f8:	60 93 c6 02 	sts	0x02C6, r22	; 0x8002c6 <previousMillis>
     6fc:	70 93 c7 02 	sts	0x02C7, r23	; 0x8002c7 <previousMillis+0x1>
     700:	80 93 c8 02 	sts	0x02C8, r24	; 0x8002c8 <previousMillis+0x2>
     704:	90 93 c9 02 	sts	0x02C9, r25	; 0x8002c9 <previousMillis+0x3>
		delay(10);
     708:	6a e0       	ldi	r22, 0x0A	; 10
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	80 e0       	ldi	r24, 0x00	; 0
     70e:	90 e0       	ldi	r25, 0x00	; 0
     710:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <delay>
		mcp2515.sendMessage(&canMsg1);
     714:	68 ee       	ldi	r22, 0xE8	; 232
     716:	72 e0       	ldi	r23, 0x02	; 2
     718:	88 ef       	ldi	r24, 0xF8	; 248
     71a:	92 e0       	ldi	r25, 0x02	; 2
	}
}
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
	stateOn_ = digitalRead(buttonStart);
	currentMillis = millis();
	if(currentMillis - previousMillis >= 500) {
		previousMillis = currentMillis;
		delay(10);
		mcp2515.sendMessage(&canMsg1);
     728:	0c 94 8a 11 	jmp	0x2314	; 0x2314 <_ZN7MCP251511sendMessageEPK9can_frame>
	}
}
     72c:	1f 91       	pop	r17
     72e:	0f 91       	pop	r16
     730:	ff 90       	pop	r15
     732:	ef 90       	pop	r14
     734:	df 90       	pop	r13
     736:	cf 90       	pop	r12
     738:	08 95       	ret

0000073a <_Z20control_leds_messagev>:

/*Receive can message with flagLight and control leds*/
void control_leds_message()
{
	mcp2515.readMessage(&canMsg);
     73a:	68 ed       	ldi	r22, 0xD8	; 216
     73c:	72 e0       	ldi	r23, 0x02	; 2
     73e:	88 ef       	ldi	r24, 0xF8	; 248
     740:	92 e0       	ldi	r25, 0x02	; 2
     742:	0e 94 7f 12 	call	0x24fe	; 0x24fe <_ZN7MCP251511readMessageEP9can_frame>
	index = canMsg.can_id;
     746:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <canMsg>
     74a:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <canMsg+0x1>
     74e:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <__data_end+0x1>
     752:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <__data_end>
     756:	08 95       	ret

00000758 <_Z17can_change_page_7ii>:
	}		
}


void can_change_page_7(int v_can, int st_can) {
  canMsg.can_id  = 0x36;
     758:	e8 ed       	ldi	r30, 0xD8	; 216
     75a:	f2 e0       	ldi	r31, 0x02	; 2
     75c:	86 e3       	ldi	r24, 0x36	; 54
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	a0 e0       	ldi	r26, 0x00	; 0
     762:	b0 e0       	ldi	r27, 0x00	; 0
     764:	80 83       	st	Z, r24
     766:	91 83       	std	Z+1, r25	; 0x01
     768:	a2 83       	std	Z+2, r26	; 0x02
     76a:	b3 83       	std	Z+3, r27	; 0x03
  canMsg.can_dlc = 8;
     76c:	88 e0       	ldi	r24, 0x08	; 8
     76e:	84 83       	std	Z+4, r24	; 0x04
  canMsg.data[0] = 0x00;
     770:	10 86       	std	Z+8, r1	; 0x08
  canMsg.data[1] = 0x01;
     772:	81 e0       	ldi	r24, 0x01	; 1
     774:	81 87       	std	Z+9, r24	; 0x09
  canMsg.data[2] = 0x00;
     776:	12 86       	std	Z+10, r1	; 0x0a
  canMsg.data[3] = 0x00;
     778:	13 86       	std	Z+11, r1	; 0x0b
  canMsg.data[4] = 0x00;
     77a:	14 86       	std	Z+12, r1	; 0x0c
  canMsg.data[5] = 0x00;
     77c:	15 86       	std	Z+13, r1	; 0x0d
  canMsg.data[6] = 0x00;
     77e:	16 86       	std	Z+14, r1	; 0x0e
  canMsg.data[7] = 0x00;
     780:	17 86       	std	Z+15, r1	; 0x0f
  mcp2515.sendMessage(&canMsg);
     782:	bf 01       	movw	r22, r30
     784:	88 ef       	ldi	r24, 0xF8	; 248
     786:	92 e0       	ldi	r25, 0x02	; 2
     788:	0c 94 8a 11 	jmp	0x2314	; 0x2314 <_ZN7MCP251511sendMessageEPK9can_frame>

0000078c <_GLOBAL__sub_I_mcp2515>:
#include "canMessage.h"

MCP2515 mcp2515(10); //CS pin
     78c:	6a e0       	ldi	r22, 0x0A	; 10
     78e:	88 ef       	ldi	r24, 0xF8	; 248
     790:	92 e0       	ldi	r25, 0x02	; 2
     792:	0c 94 dc 0d 	jmp	0x1bb8	; 0x1bb8 <_ZN7MCP2515C1Eh>

00000796 <_Z24enter_mode_change_valuesv>:
int chooseVal = 0; //for a switch between values in "Change values" mode


/****************** MODIFY ****************/
void enter_mode_change_values()		/*Enter*/
{
     796:	0f 93       	push	r16
     798:	1f 93       	push	r17
	if ((stateF1 == 0) && (stateF2 == 0)) {					
     79a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <stateF1>
     79e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <stateF1+0x1>
     7a2:	89 2b       	or	r24, r25
     7a4:	81 f5       	brne	.+96     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7a6:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <stateF2>
     7aa:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <stateF2+0x1>
     7ae:	89 2b       	or	r24, r25
     7b0:	51 f5       	brne	.+84     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
		if(millis() - firstTimeF2 >= 2000)
     7b2:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     7b6:	00 91 05 03 	lds	r16, 0x0305	; 0x800305 <firstTimeF2>
     7ba:	10 91 06 03 	lds	r17, 0x0306	; 0x800306 <firstTimeF2+0x1>
     7be:	20 91 07 03 	lds	r18, 0x0307	; 0x800307 <firstTimeF2+0x2>
     7c2:	30 91 08 03 	lds	r19, 0x0308	; 0x800308 <firstTimeF2+0x3>
     7c6:	dc 01       	movw	r26, r24
     7c8:	cb 01       	movw	r24, r22
     7ca:	80 1b       	sub	r24, r16
     7cc:	91 0b       	sbc	r25, r17
     7ce:	a2 0b       	sbc	r26, r18
     7d0:	b3 0b       	sbc	r27, r19
     7d2:	80 3d       	cpi	r24, 0xD0	; 208
     7d4:	97 40       	sbci	r25, 0x07	; 7
     7d6:	a1 05       	cpc	r26, r1
     7d8:	b1 05       	cpc	r27, r1
     7da:	30 f0       	brcs	.+12     	; 0x7e8 <_Z24enter_mode_change_valuesv+0x52>
		currentMode = 1;
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <currentMode+0x1>
     7e4:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <currentMode>
		if (i == 0) {
     7e8:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <i>
     7ec:	90 91 00 03 	lds	r25, 0x0300	; 0x800300 <i+0x1>
     7f0:	89 2b       	or	r24, r25
     7f2:	99 f4       	brne	.+38     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
			page7();
     7f4:	0e 94 37 0a 	call	0x146e	; 0x146e <_Z5page7v>
			i = 1;	}
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	90 93 00 03 	sts	0x0300, r25	; 0x800300 <i+0x1>
     800:	80 93 ff 02 	sts	0x02FF, r24	; 0x8002ff <i>
     804:	0a c0       	rjmp	.+20     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
	}
	else
	firstTimeF2 = millis();
     806:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     80a:	60 93 05 03 	sts	0x0305, r22	; 0x800305 <firstTimeF2>
     80e:	70 93 06 03 	sts	0x0306, r23	; 0x800306 <firstTimeF2+0x1>
     812:	80 93 07 03 	sts	0x0307, r24	; 0x800307 <firstTimeF2+0x2>
     816:	90 93 08 03 	sts	0x0308, r25	; 0x800308 <firstTimeF2+0x3>
}
     81a:	1f 91       	pop	r17
     81c:	0f 91       	pop	r16
     81e:	08 95       	ret

00000820 <_Z13access_valuesv>:

void access_values()		/*Make possible to modify a desired changed value*/
{
	if (currentMode == 1) {													
     820:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <currentMode>
     824:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <currentMode+0x1>
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	b1 f4       	brne	.+44     	; 0x858 <_Z13access_valuesv+0x38>
		if ((stateStart == 0) && (stateStart_ == 1)) {
     82c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <stateStart>
     830:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <stateStart+0x1>
     834:	89 2b       	or	r24, r25
     836:	81 f4       	brne	.+32     	; 0x858 <_Z13access_valuesv+0x38>
     838:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <stateStart_>
     83c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <stateStart_+0x1>
     840:	01 97       	sbiw	r24, 0x01	; 1
     842:	51 f4       	brne	.+20     	; 0x858 <_Z13access_valuesv+0x38>
			currentMode = 2;
     844:	82 e0       	ldi	r24, 0x02	; 2
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <currentMode+0x1>
     84c:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <currentMode>
			stateStart_ = 0; 
     850:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <stateStart_+0x1>
     854:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <stateStart_>
     858:	08 95       	ret

0000085a <_Z12modify_valueii>:
		}
	}	
}

void modify_value(int v, int st)	/*Modify concrete value*/
{
     85a:	0f 93       	push	r16
     85c:	1f 93       	push	r17
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	ec 01       	movw	r28, r24
     864:	8b 01       	movw	r16, r22
	lcd_change_page_7(v, st);
     866:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_Z17lcd_change_page_7ii>
	can_change_page_7(v, st);
     86a:	b8 01       	movw	r22, r16
     86c:	ce 01       	movw	r24, r28
}
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	1f 91       	pop	r17
     874:	0f 91       	pop	r16
}

void modify_value(int v, int st)	/*Modify concrete value*/
{
	lcd_change_page_7(v, st);
	can_change_page_7(v, st);
     876:	0c 94 ac 03 	jmp	0x758	; 0x758 <_Z17can_change_page_7ii>

0000087a <_Z19modify_chosen_valuev>:
}

void modify_chosen_value()		/*Modify chosen value*/
{
	switch(currentMode_Under) {
     87a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <currentMode_Under>
     87e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <currentMode_Under+0x1>
     882:	00 97       	sbiw	r24, 0x00	; 0
     884:	19 f0       	breq	.+6      	; 0x88c <_Z19modify_chosen_valuev+0x12>
     886:	01 97       	sbiw	r24, 0x01	; 1
     888:	61 f1       	breq	.+88     	; 0x8e2 <_Z19modify_chosen_valuev+0x68>
     88a:	57 c0       	rjmp	.+174    	; 0x93a <__stack+0x3b>
		case 0: //val 0
				print_value_rus(16, 1, "_");
     88c:	49 e2       	ldi	r20, 0x29	; 41
     88e:	51 e0       	ldi	r21, 0x01	; 1
     890:	61 e0       	ldi	r22, 0x01	; 1
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	80 e1       	ldi	r24, 0x10	; 16
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
			if ((stateF1_ == 0) && (stateF1 == 1))
     89c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <stateF1_>
     8a0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <stateF1_+0x1>
     8a4:	89 2b       	or	r24, r25
     8a6:	61 f4       	brne	.+24     	; 0x8c0 <_Z19modify_chosen_valuev+0x46>
     8a8:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <stateF1>
     8ac:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <stateF1+0x1>
     8b0:	01 97       	sbiw	r24, 0x01	; 1
     8b2:	31 f4       	brne	.+12     	; 0x8c0 <_Z19modify_chosen_valuev+0x46>
				modify_value(1, 0);
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	0e 94 2d 04 	call	0x85a	; 0x85a <_Z12modify_valueii>
			if ((stateF2_ == 0) && (stateF2 == 1))
     8c0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <stateF2_>
     8c4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <stateF2_+0x1>
     8c8:	89 2b       	or	r24, r25
     8ca:	b9 f5       	brne	.+110    	; 0x93a <__stack+0x3b>
     8cc:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <stateF2>
     8d0:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <stateF2+0x1>
     8d4:	01 97       	sbiw	r24, 0x01	; 1
     8d6:	89 f5       	brne	.+98     	; 0x93a <__stack+0x3b>
				modify_value(1, 1);
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	70 e0       	ldi	r23, 0x00	; 0
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	2a c0       	rjmp	.+84     	; 0x936 <__stack+0x37>
			if ((stateStop == 0) && (stateStop_ == 1))
				currentMode_Under == 1;
			break;
		case 1: //val 1
				print_value_rus(16, 2, "_");
     8e2:	49 e2       	ldi	r20, 0x29	; 41
     8e4:	51 e0       	ldi	r21, 0x01	; 1
     8e6:	62 e0       	ldi	r22, 0x02	; 2
     8e8:	70 e0       	ldi	r23, 0x00	; 0
     8ea:	80 e1       	ldi	r24, 0x10	; 16
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
			if ((stateF1_ == 0) && (stateF1 == 1))
     8f2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <stateF1_>
     8f6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <stateF1_+0x1>
     8fa:	89 2b       	or	r24, r25
     8fc:	61 f4       	brne	.+24     	; 0x916 <__stack+0x17>
     8fe:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <stateF1>
     902:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <stateF1+0x1>
     906:	01 97       	sbiw	r24, 0x01	; 1
     908:	31 f4       	brne	.+12     	; 0x916 <__stack+0x17>
				modify_value(2, 0);
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	70 e0       	ldi	r23, 0x00	; 0
     90e:	82 e0       	ldi	r24, 0x02	; 2
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	0e 94 2d 04 	call	0x85a	; 0x85a <_Z12modify_valueii>
			if ((stateF2_ == 0) && (stateF2 == 1))
     916:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <stateF2_>
     91a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <stateF2_+0x1>
     91e:	89 2b       	or	r24, r25
     920:	61 f4       	brne	.+24     	; 0x93a <__stack+0x3b>
     922:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <stateF2>
     926:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <stateF2+0x1>
     92a:	01 97       	sbiw	r24, 0x01	; 1
     92c:	31 f4       	brne	.+12     	; 0x93a <__stack+0x3b>
				modify_value(2, 1);
     92e:	61 e0       	ldi	r22, 0x01	; 1
     930:	70 e0       	ldi	r23, 0x00	; 0
     932:	82 e0       	ldi	r24, 0x02	; 2
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 2d 04 	call	0x85a	; 0x85a <_Z12modify_valueii>
			if ((stateStop == 0) && (stateStop_ == 1))
				currentMode_Under == 0;
			break;
	}
	currentMode = 3;
     93a:	83 e0       	ldi	r24, 0x03	; 3
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <currentMode+0x1>
     942:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <currentMode>
     946:	08 95       	ret

00000948 <_Z20choose_changed_valuev>:
}

void choose_changed_value()		/*Choose a value to be modified*/
{
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	cf 93       	push	r28
     94e:	df 93       	push	r29
	switch (chooseVal) {
     950:	80 91 f9 02 	lds	r24, 0x02F9	; 0x8002f9 <chooseVal>
     954:	90 91 fa 02 	lds	r25, 0x02FA	; 0x8002fa <chooseVal+0x1>
     958:	00 97       	sbiw	r24, 0x00	; 0
     95a:	21 f0       	breq	.+8      	; 0x964 <_Z20choose_changed_valuev+0x1c>
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	09 f4       	brne	.+2      	; 0x962 <_Z20choose_changed_valuev+0x1a>
     960:	65 c0       	rjmp	.+202    	; 0xa2c <_Z20choose_changed_valuev+0xe4>
     962:	c4 c0       	rjmp	.+392    	; 0xaec <_Z20choose_changed_valuev+0x1a4>
		case 0:
			if ((millis() - blinkTime > blinkSpeed_ms) && (millis()  - blinkTime < blinkSpeed_ms * 2))
     964:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     968:	00 91 fb 02 	lds	r16, 0x02FB	; 0x8002fb <blinkTime>
     96c:	10 91 fc 02 	lds	r17, 0x02FC	; 0x8002fc <blinkTime+0x1>
     970:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <blinkTime+0x2>
     974:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <blinkTime+0x3>
     978:	dc 01       	movw	r26, r24
     97a:	cb 01       	movw	r24, r22
     97c:	80 1b       	sub	r24, r16
     97e:	91 0b       	sbc	r25, r17
     980:	a2 0b       	sbc	r26, r18
     982:	b3 0b       	sbc	r27, r19
     984:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <blinkSpeed_ms>
     988:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <blinkSpeed_ms+0x1>
     98c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <blinkSpeed_ms+0x2>
     990:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <blinkSpeed_ms+0x3>
     994:	08 17       	cp	r16, r24
     996:	19 07       	cpc	r17, r25
     998:	2a 07       	cpc	r18, r26
     99a:	3b 07       	cpc	r19, r27
     99c:	08 f0       	brcs	.+2      	; 0x9a0 <_Z20choose_changed_valuev+0x58>
     99e:	d5 c0       	rjmp	.+426    	; 0xb4a <_Z20choose_changed_valuev+0x202>
     9a0:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     9a4:	00 91 fb 02 	lds	r16, 0x02FB	; 0x8002fb <blinkTime>
     9a8:	10 91 fc 02 	lds	r17, 0x02FC	; 0x8002fc <blinkTime+0x1>
     9ac:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <blinkTime+0x2>
     9b0:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <blinkTime+0x3>
     9b4:	ab 01       	movw	r20, r22
     9b6:	bc 01       	movw	r22, r24
     9b8:	40 1b       	sub	r20, r16
     9ba:	51 0b       	sbc	r21, r17
     9bc:	62 0b       	sbc	r22, r18
     9be:	73 0b       	sbc	r23, r19
     9c0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <blinkSpeed_ms>
     9c4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <blinkSpeed_ms+0x1>
     9c8:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <blinkSpeed_ms+0x2>
     9cc:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <blinkSpeed_ms+0x3>
     9d0:	88 0f       	add	r24, r24
     9d2:	99 1f       	adc	r25, r25
     9d4:	aa 1f       	adc	r26, r26
     9d6:	bb 1f       	adc	r27, r27
     9d8:	48 17       	cp	r20, r24
     9da:	59 07       	cpc	r21, r25
     9dc:	6a 07       	cpc	r22, r26
     9de:	7b 07       	cpc	r23, r27
     9e0:	08 f0       	brcs	.+2      	; 0x9e4 <_Z20choose_changed_valuev+0x9c>
     9e2:	b3 c0       	rjmp	.+358    	; 0xb4a <_Z20choose_changed_valuev+0x202>
				print_value_rus(16, 1, "_");
     9e4:	49 e2       	ldi	r20, 0x29	; 41
     9e6:	51 e0       	ldi	r21, 0x01	; 1
			else if ((millis() - blinkTime > blinkSpeed_ms * 2))
				blinkTime = millis();
			else
				print_value_rus(16, 1, " ");
     9e8:	61 e0       	ldi	r22, 0x01	; 1
     9ea:	70 e0       	ldi	r23, 0x00	; 0
     9ec:	80 e1       	ldi	r24, 0x10	; 16
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
			if ((stateF1 == 0) && (stateF1_ == 1)) {
     9f4:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <stateF1>
     9f8:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <stateF1+0x1>
     9fc:	89 2b       	or	r24, r25
     9fe:	09 f0       	breq	.+2      	; 0xa02 <_Z20choose_changed_valuev+0xba>
     a00:	75 c0       	rjmp	.+234    	; 0xaec <_Z20choose_changed_valuev+0x1a4>
     a02:	c0 91 14 01 	lds	r28, 0x0114	; 0x800114 <stateF1_>
     a06:	d0 91 15 01 	lds	r29, 0x0115	; 0x800115 <stateF1_+0x1>
     a0a:	c1 30       	cpi	r28, 0x01	; 1
     a0c:	d1 05       	cpc	r29, r1
     a0e:	09 f0       	breq	.+2      	; 0xa12 <_Z20choose_changed_valuev+0xca>
     a10:	6d c0       	rjmp	.+218    	; 0xaec <_Z20choose_changed_valuev+0x1a4>
				print_value_rus(16, 1, " ");
     a12:	4b e2       	ldi	r20, 0x2B	; 43
     a14:	51 e0       	ldi	r21, 0x01	; 1
     a16:	61 e0       	ldi	r22, 0x01	; 1
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	80 e1       	ldi	r24, 0x10	; 16
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
				chooseVal = 1;	
     a22:	d0 93 fa 02 	sts	0x02FA, r29	; 0x8002fa <chooseVal+0x1>
     a26:	c0 93 f9 02 	sts	0x02F9, r28	; 0x8002f9 <chooseVal>
     a2a:	60 c0       	rjmp	.+192    	; 0xaec <_Z20choose_changed_valuev+0x1a4>
			}
			break;
		case 1:
			if ((millis() - blinkTime > blinkSpeed_ms) && (millis()  - blinkTime < blinkSpeed_ms * 2))
     a2c:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     a30:	00 91 fb 02 	lds	r16, 0x02FB	; 0x8002fb <blinkTime>
     a34:	10 91 fc 02 	lds	r17, 0x02FC	; 0x8002fc <blinkTime+0x1>
     a38:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <blinkTime+0x2>
     a3c:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <blinkTime+0x3>
     a40:	dc 01       	movw	r26, r24
     a42:	cb 01       	movw	r24, r22
     a44:	80 1b       	sub	r24, r16
     a46:	91 0b       	sbc	r25, r17
     a48:	a2 0b       	sbc	r26, r18
     a4a:	b3 0b       	sbc	r27, r19
     a4c:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <blinkSpeed_ms>
     a50:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <blinkSpeed_ms+0x1>
     a54:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <blinkSpeed_ms+0x2>
     a58:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <blinkSpeed_ms+0x3>
     a5c:	08 17       	cp	r16, r24
     a5e:	19 07       	cpc	r17, r25
     a60:	2a 07       	cpc	r18, r26
     a62:	3b 07       	cpc	r19, r27
     a64:	08 f0       	brcs	.+2      	; 0xa68 <_Z20choose_changed_valuev+0x120>
     a66:	a0 c0       	rjmp	.+320    	; 0xba8 <_Z20choose_changed_valuev+0x260>
     a68:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     a6c:	00 91 fb 02 	lds	r16, 0x02FB	; 0x8002fb <blinkTime>
     a70:	10 91 fc 02 	lds	r17, 0x02FC	; 0x8002fc <blinkTime+0x1>
     a74:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <blinkTime+0x2>
     a78:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <blinkTime+0x3>
     a7c:	ab 01       	movw	r20, r22
     a7e:	bc 01       	movw	r22, r24
     a80:	40 1b       	sub	r20, r16
     a82:	51 0b       	sbc	r21, r17
     a84:	62 0b       	sbc	r22, r18
     a86:	73 0b       	sbc	r23, r19
     a88:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <blinkSpeed_ms>
     a8c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <blinkSpeed_ms+0x1>
     a90:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <blinkSpeed_ms+0x2>
     a94:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <blinkSpeed_ms+0x3>
     a98:	88 0f       	add	r24, r24
     a9a:	99 1f       	adc	r25, r25
     a9c:	aa 1f       	adc	r26, r26
     a9e:	bb 1f       	adc	r27, r27
     aa0:	48 17       	cp	r20, r24
     aa2:	59 07       	cpc	r21, r25
     aa4:	6a 07       	cpc	r22, r26
     aa6:	7b 07       	cpc	r23, r27
     aa8:	08 f0       	brcs	.+2      	; 0xaac <_Z20choose_changed_valuev+0x164>
     aaa:	7e c0       	rjmp	.+252    	; 0xba8 <_Z20choose_changed_valuev+0x260>
				print_value_rus(16, 2, "_");
     aac:	49 e2       	ldi	r20, 0x29	; 41
     aae:	51 e0       	ldi	r21, 0x01	; 1
			else if ((millis() - blinkTime > blinkSpeed_ms * 2))
				blinkTime = millis();
			else
				print_value_rus(16, 2, " ");
     ab0:	62 e0       	ldi	r22, 0x02	; 2
     ab2:	70 e0       	ldi	r23, 0x00	; 0
     ab4:	80 e1       	ldi	r24, 0x10	; 16
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
			if ((stateF1 == 0) && (stateF1_ == 1)) {
     abc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <stateF1>
     ac0:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <stateF1+0x1>
     ac4:	89 2b       	or	r24, r25
     ac6:	91 f4       	brne	.+36     	; 0xaec <_Z20choose_changed_valuev+0x1a4>
     ac8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <stateF1_>
     acc:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <stateF1_+0x1>
     ad0:	01 97       	sbiw	r24, 0x01	; 1
     ad2:	61 f4       	brne	.+24     	; 0xaec <_Z20choose_changed_valuev+0x1a4>
				print_value_rus(16, 2, " ");
     ad4:	4b e2       	ldi	r20, 0x2B	; 43
     ad6:	51 e0       	ldi	r21, 0x01	; 1
     ad8:	62 e0       	ldi	r22, 0x02	; 2
     ada:	70 e0       	ldi	r23, 0x00	; 0
     adc:	80 e1       	ldi	r24, 0x10	; 16
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
				chooseVal = 0;	
     ae4:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <chooseVal+0x1>
     ae8:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <chooseVal>
			}
			break;
	}
	if ((stateStart == 0) && (stateStart_ == 1) && (chooseVal != 2)) {											    /*Verify your choice by pressing START*/
     aec:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <stateStart>
     af0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <stateStart+0x1>
     af4:	89 2b       	or	r24, r25
     af6:	09 f0       	breq	.+2      	; 0xafa <_Z20choose_changed_valuev+0x1b2>
     af8:	86 c0       	rjmp	.+268    	; 0xc06 <_Z20choose_changed_valuev+0x2be>
     afa:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <stateStart_>
     afe:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <stateStart_+0x1>
     b02:	01 97       	sbiw	r24, 0x01	; 1
     b04:	09 f0       	breq	.+2      	; 0xb08 <_Z20choose_changed_valuev+0x1c0>
     b06:	7f c0       	rjmp	.+254    	; 0xc06 <_Z20choose_changed_valuev+0x2be>
     b08:	80 91 f9 02 	lds	r24, 0x02F9	; 0x8002f9 <chooseVal>
     b0c:	90 91 fa 02 	lds	r25, 0x02FA	; 0x8002fa <chooseVal+0x1>
     b10:	82 30       	cpi	r24, 0x02	; 2
     b12:	91 05       	cpc	r25, r1
     b14:	09 f4       	brne	.+2      	; 0xb18 <_Z20choose_changed_valuev+0x1d0>
     b16:	77 c0       	rjmp	.+238    	; 0xc06 <_Z20choose_changed_valuev+0x2be>
		switch (chooseVal) {
     b18:	00 97       	sbiw	r24, 0x00	; 0
     b1a:	41 f0       	breq	.+16     	; 0xb2c <_Z20choose_changed_valuev+0x1e4>
     b1c:	81 30       	cpi	r24, 0x01	; 1
     b1e:	91 05       	cpc	r25, r1
     b20:	49 f4       	brne	.+18     	; 0xb34 <_Z20choose_changed_valuev+0x1ec>
			case 0:
				currentMode_Under = 0;
				break;
			case 1:
				currentMode_Under = 1;
     b22:	90 93 02 03 	sts	0x0302, r25	; 0x800302 <currentMode_Under+0x1>
     b26:	80 93 01 03 	sts	0x0301, r24	; 0x800301 <currentMode_Under>
				break;		}
     b2a:	04 c0       	rjmp	.+8      	; 0xb34 <_Z20choose_changed_valuev+0x1ec>
			break;
	}
	if ((stateStart == 0) && (stateStart_ == 1) && (chooseVal != 2)) {											    /*Verify your choice by pressing START*/
		switch (chooseVal) {
			case 0:
				currentMode_Under = 0;
     b2c:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <currentMode_Under+0x1>
     b30:	10 92 01 03 	sts	0x0301, r1	; 0x800301 <currentMode_Under>
				break;
			case 1:
				currentMode_Under = 1;
				break;		}
	stateStart_ = 0;
     b34:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <stateStart_+0x1>
     b38:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <stateStart_>
	currentMode = 3;
     b3c:	83 e0       	ldi	r24, 0x03	; 3
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <currentMode+0x1>
     b44:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <currentMode>
	}
}
     b48:	5e c0       	rjmp	.+188    	; 0xc06 <_Z20choose_changed_valuev+0x2be>
{
	switch (chooseVal) {
		case 0:
			if ((millis() - blinkTime > blinkSpeed_ms) && (millis()  - blinkTime < blinkSpeed_ms * 2))
				print_value_rus(16, 1, "_");
			else if ((millis() - blinkTime > blinkSpeed_ms * 2))
     b4a:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     b4e:	00 91 fb 02 	lds	r16, 0x02FB	; 0x8002fb <blinkTime>
     b52:	10 91 fc 02 	lds	r17, 0x02FC	; 0x8002fc <blinkTime+0x1>
     b56:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <blinkTime+0x2>
     b5a:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <blinkTime+0x3>
     b5e:	ab 01       	movw	r20, r22
     b60:	bc 01       	movw	r22, r24
     b62:	40 1b       	sub	r20, r16
     b64:	51 0b       	sbc	r21, r17
     b66:	62 0b       	sbc	r22, r18
     b68:	73 0b       	sbc	r23, r19
     b6a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <blinkSpeed_ms>
     b6e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <blinkSpeed_ms+0x1>
     b72:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <blinkSpeed_ms+0x2>
     b76:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <blinkSpeed_ms+0x3>
     b7a:	88 0f       	add	r24, r24
     b7c:	99 1f       	adc	r25, r25
     b7e:	aa 1f       	adc	r26, r26
     b80:	bb 1f       	adc	r27, r27
     b82:	84 17       	cp	r24, r20
     b84:	95 07       	cpc	r25, r21
     b86:	a6 07       	cpc	r26, r22
     b88:	b7 07       	cpc	r27, r23
     b8a:	58 f4       	brcc	.+22     	; 0xba2 <_Z20choose_changed_valuev+0x25a>
				blinkTime = millis();
     b8c:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     b90:	60 93 fb 02 	sts	0x02FB, r22	; 0x8002fb <blinkTime>
     b94:	70 93 fc 02 	sts	0x02FC, r23	; 0x8002fc <blinkTime+0x1>
     b98:	80 93 fd 02 	sts	0x02FD, r24	; 0x8002fd <blinkTime+0x2>
     b9c:	90 93 fe 02 	sts	0x02FE, r25	; 0x8002fe <blinkTime+0x3>
     ba0:	29 cf       	rjmp	.-430    	; 0x9f4 <_Z20choose_changed_valuev+0xac>
			else
				print_value_rus(16, 1, " ");
     ba2:	4b e2       	ldi	r20, 0x2B	; 43
     ba4:	51 e0       	ldi	r21, 0x01	; 1
     ba6:	20 cf       	rjmp	.-448    	; 0x9e8 <_Z20choose_changed_valuev+0xa0>
			}
			break;
		case 1:
			if ((millis() - blinkTime > blinkSpeed_ms) && (millis()  - blinkTime < blinkSpeed_ms * 2))
				print_value_rus(16, 2, "_");
			else if ((millis() - blinkTime > blinkSpeed_ms * 2))
     ba8:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     bac:	00 91 fb 02 	lds	r16, 0x02FB	; 0x8002fb <blinkTime>
     bb0:	10 91 fc 02 	lds	r17, 0x02FC	; 0x8002fc <blinkTime+0x1>
     bb4:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <blinkTime+0x2>
     bb8:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <blinkTime+0x3>
     bbc:	ab 01       	movw	r20, r22
     bbe:	bc 01       	movw	r22, r24
     bc0:	40 1b       	sub	r20, r16
     bc2:	51 0b       	sbc	r21, r17
     bc4:	62 0b       	sbc	r22, r18
     bc6:	73 0b       	sbc	r23, r19
     bc8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <blinkSpeed_ms>
     bcc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <blinkSpeed_ms+0x1>
     bd0:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <blinkSpeed_ms+0x2>
     bd4:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <blinkSpeed_ms+0x3>
     bd8:	88 0f       	add	r24, r24
     bda:	99 1f       	adc	r25, r25
     bdc:	aa 1f       	adc	r26, r26
     bde:	bb 1f       	adc	r27, r27
     be0:	84 17       	cp	r24, r20
     be2:	95 07       	cpc	r25, r21
     be4:	a6 07       	cpc	r26, r22
     be6:	b7 07       	cpc	r27, r23
     be8:	58 f4       	brcc	.+22     	; 0xc00 <_Z20choose_changed_valuev+0x2b8>
				blinkTime = millis();
     bea:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
     bee:	60 93 fb 02 	sts	0x02FB, r22	; 0x8002fb <blinkTime>
     bf2:	70 93 fc 02 	sts	0x02FC, r23	; 0x8002fc <blinkTime+0x1>
     bf6:	80 93 fd 02 	sts	0x02FD, r24	; 0x8002fd <blinkTime+0x2>
     bfa:	90 93 fe 02 	sts	0x02FE, r25	; 0x8002fe <blinkTime+0x3>
     bfe:	5e cf       	rjmp	.-324    	; 0xabc <_Z20choose_changed_valuev+0x174>
			else
				print_value_rus(16, 2, " ");
     c00:	4b e2       	ldi	r20, 0x2B	; 43
     c02:	51 e0       	ldi	r21, 0x01	; 1
     c04:	55 cf       	rjmp	.-342    	; 0xab0 <_Z20choose_changed_valuev+0x168>
				currentMode_Under = 1;
				break;		}
	stateStart_ = 0;
	currentMode = 3;
	}
}
     c06:	df 91       	pop	r29
     c08:	cf 91       	pop	r28
     c0a:	1f 91       	pop	r17
     c0c:	0f 91       	pop	r16
     c0e:	08 95       	ret

00000c10 <_Z23exit_mode_change_valuesv>:

void exit_mode_change_values()		/*Exit*/
{
	if (stateStop == 0 && stateStop_ == 1) {
     c10:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <stateStop>
     c14:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <stateStop+0x1>
     c18:	89 2b       	or	r24, r25
     c1a:	81 f4       	brne	.+32     	; 0xc3c <_Z23exit_mode_change_valuesv+0x2c>
     c1c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <stateStop_>
     c20:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <stateStop_+0x1>
     c24:	01 97       	sbiw	r24, 0x01	; 1
     c26:	51 f4       	brne	.+20     	; 0xc3c <_Z23exit_mode_change_valuesv+0x2c>
		currentMode = 0;
     c28:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <currentMode+0x1>
     c2c:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <currentMode>
		page1();
     c30:	0e 94 b1 08 	call	0x1162	; 0x1162 <_Z5page1v>
		i = 0;
     c34:	10 92 00 03 	sts	0x0300, r1	; 0x800300 <i+0x1>
     c38:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <i>
     c3c:	08 95       	ret

00000c3e <_Z22enter_mode_show_valuesv>:
	}
}

/****************** SHOW ******************/
void enter_mode_show_values()		/*Show a current screen and renewed values for it*/
{
     c3e:	cf 93       	push	r28
	get_values_for_pages(); //can
     c40:	0e 94 95 01 	call	0x32a	; 0x32a <_Z20get_values_for_pagesv>
     c44:	c0 e0       	ldi	r28, 0x00	; 0
	for (int y = 0; y < 33; y++)
		set_values_(get_value((lcdValues)y), (lcdValues_)y);
     c46:	8c 2f       	mov	r24, r28
     c48:	0e 94 74 01 	call	0x2e8	; 0x2e8 <_Z9get_value9lcdValues>
     c4c:	6c 2f       	mov	r22, r28
     c4e:	0e 94 a1 06 	call	0xd42	; 0xd42 <_Z11set_values_i10lcdValues_>
     c52:	cf 5f       	subi	r28, 0xFF	; 255

/****************** SHOW ******************/
void enter_mode_show_values()		/*Show a current screen and renewed values for it*/
{
	get_values_for_pages(); //can
	for (int y = 0; y < 33; y++)
     c54:	c1 32       	cpi	r28, 0x21	; 33
     c56:	b9 f7       	brne	.-18     	; 0xc46 <_Z22enter_mode_show_valuesv+0x8>
		set_values_(get_value((lcdValues)y), (lcdValues_)y);
	show_current_values();
}	
     c58:	cf 91       	pop	r28
void enter_mode_show_values()		/*Show a current screen and renewed values for it*/
{
	get_values_for_pages(); //can
	for (int y = 0; y < 33; y++)
		set_values_(get_value((lcdValues)y), (lcdValues_)y);
	show_current_values();
     c5a:	0c 94 86 0a 	jmp	0x150c	; 0x150c <_Z19show_current_valuesv>

00000c5e <_Z14mode_show_pagev>:
}	

void mode_show_page()
{
	if (currentMode == 0) {									
     c5e:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <currentMode>
     c62:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <currentMode+0x1>
     c66:	89 2b       	or	r24, r25
     c68:	81 f4       	brne	.+32     	; 0xc8a <_Z14mode_show_pagev+0x2c>
		enter_mode_show_values();
     c6a:	0e 94 1f 06 	call	0xc3e	; 0xc3e <_Z22enter_mode_show_valuesv>
		if (stateF2 == 0 && stateF2_ == 1)
     c6e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <stateF2>
     c72:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <stateF2+0x1>
     c76:	89 2b       	or	r24, r25
     c78:	41 f4       	brne	.+16     	; 0xc8a <_Z14mode_show_pagev+0x2c>
     c7a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <stateF2_>
     c7e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <stateF2_+0x1>
     c82:	01 97       	sbiw	r24, 0x01	; 1
     c84:	11 f4       	brne	.+4      	; 0xc8a <_Z14mode_show_pagev+0x2c>
		switch_page();
     c86:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <_Z11switch_pagev>
     c8a:	08 95       	ret

00000c8c <_Z23modify_and_show_displayv>:
}


void modify_and_show_display() 
{
stateF2 = digitalRead(buttonF2);
     c8c:	8e e0       	ldi	r24, 0x0E	; 14
     c8e:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     c92:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <stateF2+0x1>
     c96:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <stateF2>
stateF1 = digitalRead(buttonF1);
     c9a:	8f e0       	ldi	r24, 0x0F	; 15
     c9c:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     ca0:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <stateF1+0x1>
     ca4:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <stateF1>
stateStart = digitalRead(buttonStart);
     ca8:	80 e1       	ldi	r24, 0x10	; 16
     caa:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     cae:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <stateStart+0x1>
     cb2:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <stateStart>
stateStop = digitalRead(buttonStop);
     cb6:	81 e1       	ldi	r24, 0x11	; 17
     cb8:	0e 94 76 0d 	call	0x1aec	; 0x1aec <digitalRead>
     cbc:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <stateStop+0x1>
     cc0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <stateStop>
delay(10);	
     cc4:	6a e0       	ldi	r22, 0x0A	; 10
     cc6:	70 e0       	ldi	r23, 0x00	; 0
     cc8:	80 e0       	ldi	r24, 0x00	; 0
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <delay>

enter_mode_change_values();		/****			Main mode 'MODIFY VALUES'			****/
     cd0:	0e 94 cb 03 	call	0x796	; 0x796 <_Z24enter_mode_change_valuesv>
access_values();
     cd4:	0e 94 10 04 	call	0x820	; 0x820 <_Z13access_valuesv>
if (currentMode == 2) 
     cd8:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <currentMode>
     cdc:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <currentMode+0x1>
     ce0:	02 97       	sbiw	r24, 0x02	; 2
     ce2:	11 f4       	brne	.+4      	; 0xce8 <_Z23modify_and_show_displayv+0x5c>
	choose_changed_value();		//Choose a value and
     ce4:	0e 94 a4 04 	call	0x948	; 0x948 <_Z20choose_changed_valuev>
if (currentMode == 3)
     ce8:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <currentMode>
     cec:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <currentMode+0x1>
     cf0:	03 97       	sbiw	r24, 0x03	; 3
     cf2:	11 f4       	brne	.+4      	; 0xcf8 <_Z23modify_and_show_displayv+0x6c>
	modify_chosen_value();		//modify it
     cf4:	0e 94 3d 04 	call	0x87a	; 0x87a <_Z19modify_chosen_valuev>
exit_mode_change_values();
     cf8:	0e 94 08 06 	call	0xc10	; 0xc10 <_Z23exit_mode_change_valuesv>
mode_show_page();				/****			Main mode 'SHOW VALUES'				****/
     cfc:	0e 94 2f 06 	call	0xc5e	; 0xc5e <_Z14mode_show_pagev>

stateF2_ = stateF2;
     d00:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <stateF2>
     d04:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <stateF2+0x1>
     d08:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <stateF2_+0x1>
     d0c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <stateF2_>
stateF1_ = stateF1;
     d10:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <stateF1>
     d14:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <stateF1+0x1>
     d18:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <stateF1_+0x1>
     d1c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <stateF1_>
stateStart_ = stateStart;
     d20:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <stateStart>
     d24:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <stateStart+0x1>
     d28:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <stateStart_+0x1>
     d2c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <stateStart_>
stateStop_ = stateStop;
     d30:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <stateStop>
     d34:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <stateStop+0x1>
     d38:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <stateStop_+0x1>
     d3c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <stateStop_>
     d40:	08 95       	ret

00000d42 <_Z11set_values_i10lcdValues_>:
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
}
int get_value_(lcdValues_ param) {	//get saved value
	return valLcd_[param];
}
     d42:	e6 2f       	mov	r30, r22
     d44:	f0 e0       	ldi	r31, 0x00	; 0
     d46:	ee 0f       	add	r30, r30
     d48:	ff 1f       	adc	r31, r31
     d4a:	e9 5e       	subi	r30, 0xE9	; 233
     d4c:	fc 4f       	sbci	r31, 0xFC	; 252
     d4e:	91 83       	std	Z+1, r25	; 0x01
     d50:	80 83       	st	Z, r24
     d52:	08 95       	ret

00000d54 <_Z14print_value_eniiPc>:

/*Simplify arduino print functions*/
void print_value_en(int col, int row, char a[66])
{//english
     d54:	cf 93       	push	r28
     d56:	df 93       	push	r29
     d58:	ea 01       	movw	r28, r20
	OLED1.setCursor(col, row);
     d5a:	46 2f       	mov	r20, r22
     d5c:	68 2f       	mov	r22, r24
     d5e:	89 e0       	ldi	r24, 0x09	; 9
     d60:	93 e0       	ldi	r25, 0x03	; 3
     d62:	0e 94 31 13 	call	0x2662	; 0x2662 <_ZN17LiquidCrystal_I2C9setCursorEhh>
	OLED1.print(a);
     d66:	be 01       	movw	r22, r28
     d68:	89 e0       	ldi	r24, 0x09	; 9
     d6a:	93 e0       	ldi	r25, 0x03	; 3
}
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28

/*Simplify arduino print functions*/
void print_value_en(int col, int row, char a[66])
{//english
	OLED1.setCursor(col, row);
	OLED1.print(a);
     d70:	0c 94 44 0b 	jmp	0x1688	; 0x1688 <_ZN5Print5printEPKc>

00000d74 <_Z15print_value_rusiiPc>:
}
void print_value_rus(int col, int row, char a[66])
{//russian
     d74:	cf 93       	push	r28
     d76:	df 93       	push	r29
     d78:	ea 01       	movw	r28, r20
	OLED1.setCursor(col, row);
     d7a:	46 2f       	mov	r20, r22
     d7c:	68 2f       	mov	r22, r24
     d7e:	89 e0       	ldi	r24, 0x09	; 9
     d80:	93 e0       	ldi	r25, 0x03	; 3
     d82:	0e 94 31 13 	call	0x2662	; 0x2662 <_ZN17LiquidCrystal_I2C9setCursorEhh>
	OLED1.outStr(a);
     d86:	be 01       	movw	r22, r28
     d88:	89 e0       	ldi	r24, 0x09	; 9
     d8a:	93 e0       	ldi	r25, 0x03	; 3
}
     d8c:	df 91       	pop	r29
     d8e:	cf 91       	pop	r28
	OLED1.print(a);
}
void print_value_rus(int col, int row, char a[66])
{//russian
	OLED1.setCursor(col, row);
	OLED1.outStr(a);
     d90:	0c 94 6d 13 	jmp	0x26da	; 0x26da <_ZN17LiquidCrystal_I2C6outStrEPc>

00000d94 <_Z11print_valueiii>:
}
void print_value(int col, int row, int b)
{//value
     d94:	cf 93       	push	r28
     d96:	df 93       	push	r29
     d98:	ea 01       	movw	r28, r20
	OLED1.setCursor(col, row);
     d9a:	46 2f       	mov	r20, r22
     d9c:	68 2f       	mov	r22, r24
     d9e:	89 e0       	ldi	r24, 0x09	; 9
     da0:	93 e0       	ldi	r25, 0x03	; 3
     da2:	0e 94 31 13 	call	0x2662	; 0x2662 <_ZN17LiquidCrystal_I2C9setCursorEhh>
	OLED1.print(b);
     da6:	4a e0       	ldi	r20, 0x0A	; 10
     da8:	50 e0       	ldi	r21, 0x00	; 0
     daa:	be 01       	movw	r22, r28
     dac:	89 e0       	ldi	r24, 0x09	; 9
     dae:	93 e0       	ldi	r25, 0x03	; 3
}
     db0:	df 91       	pop	r29
     db2:	cf 91       	pop	r28
	OLED1.outStr(a);
}
void print_value(int col, int row, int b)
{//value
	OLED1.setCursor(col, row);
	OLED1.print(b);
     db4:	0c 94 de 0b 	jmp	0x17bc	; 0x17bc <_ZN5Print5printEii>

00000db8 <_Z21print_values_straightiii>:
}
void print_values_straight(int v, int unit, int row) { //for straight display of values when they change 
     db8:	0f 93       	push	r16
     dba:	1f 93       	push	r17
     dbc:	cf 93       	push	r28
     dbe:	df 93       	push	r29
     dc0:	9c 01       	movw	r18, r24
     dc2:	eb 01       	movw	r28, r22
     dc4:	fa 01       	movw	r30, r20
	int tens = unit - 1;
	int hundreds = unit - 2;
     dc6:	8b 01       	movw	r16, r22
     dc8:	02 50       	subi	r16, 0x02	; 2
     dca:	11 09       	sbc	r17, r1
	if ((v % 10 == 0) && (v % 100 == 0))
     dcc:	6a e0       	ldi	r22, 0x0A	; 10
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__divmodhi4>
     dd4:	89 2b       	or	r24, r25
     dd6:	59 f4       	brne	.+22     	; 0xdee <_Z21print_values_straightiii+0x36>
     dd8:	c9 01       	movw	r24, r18
     dda:	64 e6       	ldi	r22, 0x64	; 100
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__divmodhi4>
     de2:	89 2b       	or	r24, r25
     de4:	81 f4       	brne	.+32     	; 0xe06 <_Z21print_values_straightiii+0x4e>
		print_value(unit, row, v);
     de6:	a9 01       	movw	r20, r18
     de8:	bf 01       	movw	r22, r30
     dea:	ce 01       	movw	r24, r28
     dec:	0f c0       	rjmp	.+30     	; 0xe0c <_Z21print_values_straightiii+0x54>
	else if ((v % 10 != 0) && (v % 100 == 0))
     dee:	c9 01       	movw	r24, r18
     df0:	64 e6       	ldi	r22, 0x64	; 100
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__divmodhi4>
     df8:	89 2b       	or	r24, r25
     dfa:	29 f4       	brne	.+10     	; 0xe06 <_Z21print_values_straightiii+0x4e>
		print_value(tens, row, v);		
     dfc:	a9 01       	movw	r20, r18
     dfe:	bf 01       	movw	r22, r30
     e00:	ce 01       	movw	r24, r28
     e02:	01 97       	sbiw	r24, 0x01	; 1
     e04:	03 c0       	rjmp	.+6      	; 0xe0c <_Z21print_values_straightiii+0x54>
	else
		print_value(hundreds, row, v);	
     e06:	a9 01       	movw	r20, r18
     e08:	bf 01       	movw	r22, r30
     e0a:	c8 01       	movw	r24, r16
}
     e0c:	df 91       	pop	r29
     e0e:	cf 91       	pop	r28
     e10:	1f 91       	pop	r17
     e12:	0f 91       	pop	r16
	if ((v % 10 == 0) && (v % 100 == 0))
		print_value(unit, row, v);
	else if ((v % 10 != 0) && (v % 100 == 0))
		print_value(tens, row, v);		
	else
		print_value(hundreds, row, v);	
     e14:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <_Z11print_valueiii>

00000e18 <_Z13values_page_1v>:
}

/*Show text and values for pages*/
void values_page_1() {
     e18:	cf 93       	push	r28
     e1a:	df 93       	push	r29
/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
}
int get_value_(lcdValues_ param) {	//get saved value
	return valLcd_[param];
     e1c:	c7 e1       	ldi	r28, 0x17	; 23
     e1e:	d3 e0       	ldi	r29, 0x03	; 3
		print_value(hundreds, row, v);	
}

/*Show text and values for pages*/
void values_page_1() {
	print_values_straight(get_value_(ac_VoltageAC_), 6, 0);
     e20:	40 e0       	ldi	r20, 0x00	; 0
     e22:	50 e0       	ldi	r21, 0x00	; 0
     e24:	66 e0       	ldi	r22, 0x06	; 6
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	8a 85       	ldd	r24, Y+10	; 0x0a
     e2a:	9b 85       	ldd	r25, Y+11	; 0x0b
     e2c:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(ac_PowerAC_), 16, 0);
     e30:	40 e0       	ldi	r20, 0x00	; 0
     e32:	50 e0       	ldi	r21, 0x00	; 0
     e34:	60 e1       	ldi	r22, 0x10	; 16
     e36:	70 e0       	ldi	r23, 0x00	; 0
     e38:	8e 85       	ldd	r24, Y+14	; 0x0e
     e3a:	9f 85       	ldd	r25, Y+15	; 0x0f
     e3c:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(dc_VoltageDC_), 9, 1);
     e40:	41 e0       	ldi	r20, 0x01	; 1
     e42:	50 e0       	ldi	r21, 0x00	; 0
     e44:	69 e0       	ldi	r22, 0x09	; 9
     e46:	70 e0       	ldi	r23, 0x00	; 0
     e48:	8a 89       	ldd	r24, Y+18	; 0x12
     e4a:	9b 89       	ldd	r25, Y+19	; 0x13
     e4c:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>

	print_value(4, 1, get_value_(dc_VoltageDC_));	
     e50:	4a 89       	ldd	r20, Y+18	; 0x12
     e52:	5b 89       	ldd	r21, Y+19	; 0x13
     e54:	61 e0       	ldi	r22, 0x01	; 1
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	84 e0       	ldi	r24, 0x04	; 4
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
	print_value(14, 1, get_value_(dc_PowerDC_));
     e60:	4e 89       	ldd	r20, Y+22	; 0x16
     e62:	5f 89       	ldd	r21, Y+23	; 0x17
     e64:	61 e0       	ldi	r22, 0x01	; 1
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	8e e0       	ldi	r24, 0x0E	; 14
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
	print_value(14, 2, get_value_(gen_PowerAC_));
     e70:	48 85       	ldd	r20, Y+8	; 0x08
     e72:	59 85       	ldd	r21, Y+9	; 0x09
     e74:	62 e0       	ldi	r22, 0x02	; 2
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	8e e0       	ldi	r24, 0x0E	; 14
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
	print_value(4, 2, get_value_(gen_Velocity_));
     e80:	48 81       	ld	r20, Y
     e82:	59 81       	ldd	r21, Y+1	; 0x01
     e84:	62 e0       	ldi	r22, 0x02	; 2
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	84 e0       	ldi	r24, 0x04	; 4
     e8a:	90 e0       	ldi	r25, 0x00	; 0
}
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
	print_values_straight(get_value_(dc_VoltageDC_), 9, 1);

	print_value(4, 1, get_value_(dc_VoltageDC_));	
	print_value(14, 1, get_value_(dc_PowerDC_));
	print_value(14, 2, get_value_(gen_PowerAC_));
	print_value(4, 2, get_value_(gen_Velocity_));
     e90:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <_Z11print_valueiii>

00000e94 <_Z13values_page_2v>:
}

void values_page_2() {
     e94:	cf 93       	push	r28
     e96:	df 93       	push	r29
/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
}
int get_value_(lcdValues_ param) {	//get saved value
	return valLcd_[param];
     e98:	c7 e1       	ldi	r28, 0x17	; 23
     e9a:	d3 e0       	ldi	r29, 0x03	; 3
	print_value(14, 2, get_value_(gen_PowerAC_));
	print_value(4, 2, get_value_(gen_Velocity_));
}

void values_page_2() {
	print_values_straight(get_value_(dc_VoltageDC_), 9, 1);
     e9c:	41 e0       	ldi	r20, 0x01	; 1
     e9e:	50 e0       	ldi	r21, 0x00	; 0
     ea0:	69 e0       	ldi	r22, 0x09	; 9
     ea2:	70 e0       	ldi	r23, 0x00	; 0
     ea4:	8a 89       	ldd	r24, Y+18	; 0x12
     ea6:	9b 89       	ldd	r25, Y+19	; 0x13
     ea8:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(dc_CurrentDC_), 9, 2);
     eac:	42 e0       	ldi	r20, 0x02	; 2
     eae:	50 e0       	ldi	r21, 0x00	; 0
     eb0:	69 e0       	ldi	r22, 0x09	; 9
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	8c 89       	ldd	r24, Y+20	; 0x14
     eb6:	9d 89       	ldd	r25, Y+21	; 0x15
     eb8:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(dc_HeatsingTemp_), 9, 3);
     ebc:	43 e0       	ldi	r20, 0x03	; 3
     ebe:	50 e0       	ldi	r21, 0x00	; 0
     ec0:	69 e0       	ldi	r22, 0x09	; 9
     ec2:	70 e0       	ldi	r23, 0x00	; 0
     ec4:	88 8d       	ldd	r24, Y+24	; 0x18
     ec6:	99 8d       	ldd	r25, Y+25	; 0x19
}
     ec8:	df 91       	pop	r29
     eca:	cf 91       	pop	r28
}

void values_page_2() {
	print_values_straight(get_value_(dc_VoltageDC_), 9, 1);
	print_values_straight(get_value_(dc_CurrentDC_), 9, 2);
	print_values_straight(get_value_(dc_HeatsingTemp_), 9, 3);
     ecc:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <_Z21print_values_straightiii>

00000ed0 <_Z13values_page_3v>:
}

void values_page_3() { 
     ed0:	cf 93       	push	r28
     ed2:	df 93       	push	r29
/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
}
int get_value_(lcdValues_ param) {	//get saved value
	return valLcd_[param];
     ed4:	c7 e1       	ldi	r28, 0x17	; 23
     ed6:	d3 e0       	ldi	r29, 0x03	; 3
	print_values_straight(get_value_(dc_CurrentDC_), 9, 2);
	print_values_straight(get_value_(dc_HeatsingTemp_), 9, 3);
}

void values_page_3() { 
	print_values_straight(get_value_(ac_VoltageAC_), 9, 1);
     ed8:	41 e0       	ldi	r20, 0x01	; 1
     eda:	50 e0       	ldi	r21, 0x00	; 0
     edc:	69 e0       	ldi	r22, 0x09	; 9
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	8a 85       	ldd	r24, Y+10	; 0x0a
     ee2:	9b 85       	ldd	r25, Y+11	; 0x0b
     ee4:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(ac_CurrentAC_), 9, 2);
     ee8:	42 e0       	ldi	r20, 0x02	; 2
     eea:	50 e0       	ldi	r21, 0x00	; 0
     eec:	69 e0       	ldi	r22, 0x09	; 9
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	8c 85       	ldd	r24, Y+12	; 0x0c
     ef2:	9d 85       	ldd	r25, Y+13	; 0x0d
     ef4:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(ac_HeastingTemp_), 9, 3);
     ef8:	43 e0       	ldi	r20, 0x03	; 3
     efa:	50 e0       	ldi	r21, 0x00	; 0
     efc:	69 e0       	ldi	r22, 0x09	; 9
     efe:	70 e0       	ldi	r23, 0x00	; 0
     f00:	88 89       	ldd	r24, Y+16	; 0x10
     f02:	99 89       	ldd	r25, Y+17	; 0x11
}
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
}

void values_page_3() { 
	print_values_straight(get_value_(ac_VoltageAC_), 9, 1);
	print_values_straight(get_value_(ac_CurrentAC_), 9, 2);
	print_values_straight(get_value_(ac_HeastingTemp_), 9, 3);
     f08:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <_Z21print_values_straightiii>

00000f0c <_Z13values_page_4v>:
}

void values_page_4() {
     f0c:	cf 93       	push	r28
     f0e:	df 93       	push	r29
/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
}
int get_value_(lcdValues_ param) {	//get saved value
	return valLcd_[param];
     f10:	c7 e1       	ldi	r28, 0x17	; 23
     f12:	d3 e0       	ldi	r29, 0x03	; 3
	print_values_straight(get_value_(ac_CurrentAC_), 9, 2);
	print_values_straight(get_value_(ac_HeastingTemp_), 9, 3);
}

void values_page_4() {
	print_values_straight(get_value_(ac_dc_TempratureDC_), 9, 1);
     f14:	41 e0       	ldi	r20, 0x01	; 1
     f16:	50 e0       	ldi	r21, 0x00	; 0
     f18:	69 e0       	ldi	r22, 0x09	; 9
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f1e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     f20:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(ac_dc_VoltageDC_), 9, 2);
     f24:	42 e0       	ldi	r20, 0x02	; 2
     f26:	50 e0       	ldi	r21, 0x00	; 0
     f28:	69 e0       	ldi	r22, 0x09	; 9
     f2a:	70 e0       	ldi	r23, 0x00	; 0
     f2c:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f2e:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f30:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(ac_dc_CurrentDC_), 9, 3);
     f34:	43 e0       	ldi	r20, 0x03	; 3
     f36:	50 e0       	ldi	r21, 0x00	; 0
     f38:	69 e0       	ldi	r22, 0x09	; 9
     f3a:	70 e0       	ldi	r23, 0x00	; 0
     f3c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f3e:	9b 8d       	ldd	r25, Y+27	; 0x1b
}
     f40:	df 91       	pop	r29
     f42:	cf 91       	pop	r28
}

void values_page_4() {
	print_values_straight(get_value_(ac_dc_TempratureDC_), 9, 1);
	print_values_straight(get_value_(ac_dc_VoltageDC_), 9, 2);
	print_values_straight(get_value_(ac_dc_CurrentDC_), 9, 3);
     f44:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <_Z21print_values_straightiii>

00000f48 <_Z13values_page_5v>:
}

void values_page_5() {
     f48:	cf 93       	push	r28
     f4a:	df 93       	push	r29
/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
}
int get_value_(lcdValues_ param) {	//get saved value
	return valLcd_[param];
     f4c:	c7 e1       	ldi	r28, 0x17	; 23
     f4e:	d3 e0       	ldi	r29, 0x03	; 3
	print_values_straight(get_value_(ac_dc_VoltageDC_), 9, 2);
	print_values_straight(get_value_(ac_dc_CurrentDC_), 9, 3);
}

void values_page_5() {
	print_values_straight(get_value_(gen_Temperature_), 9, 1);
     f50:	41 e0       	ldi	r20, 0x01	; 1
     f52:	50 e0       	ldi	r21, 0x00	; 0
     f54:	69 e0       	ldi	r22, 0x09	; 9
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	8e 81       	ldd	r24, Y+6	; 0x06
     f5a:	9f 81       	ldd	r25, Y+7	; 0x07
     f5c:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(gen_VoltageAC_), 9, 2);
     f60:	42 e0       	ldi	r20, 0x02	; 2
     f62:	50 e0       	ldi	r21, 0x00	; 0
     f64:	69 e0       	ldi	r22, 0x09	; 9
     f66:	70 e0       	ldi	r23, 0x00	; 0
     f68:	8c 81       	ldd	r24, Y+4	; 0x04
     f6a:	9d 81       	ldd	r25, Y+5	; 0x05
     f6c:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_Z21print_values_straightiii>
	print_values_straight(get_value_(gen_CurrentAC_), 9, 3);
     f70:	43 e0       	ldi	r20, 0x03	; 3
     f72:	50 e0       	ldi	r21, 0x00	; 0
     f74:	69 e0       	ldi	r22, 0x09	; 9
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	8a 81       	ldd	r24, Y+2	; 0x02
     f7a:	9b 81       	ldd	r25, Y+3	; 0x03
}
     f7c:	df 91       	pop	r29
     f7e:	cf 91       	pop	r28
}

void values_page_5() {
	print_values_straight(get_value_(gen_Temperature_), 9, 1);
	print_values_straight(get_value_(gen_VoltageAC_), 9, 2);
	print_values_straight(get_value_(gen_CurrentAC_), 9, 3);
     f80:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <_Z21print_values_straightiii>

00000f84 <_Z13values_page_6v>:
}

void values_page_6() 
{
	switch (get_value_(mcu_st_DCDC_on_)) {	/*DC DC = 27B*/
     f84:	80 91 37 03 	lds	r24, 0x0337	; 0x800337 <Wire+0x7>
     f88:	90 91 38 03 	lds	r25, 0x0338	; 0x800338 <Wire+0x8>
     f8c:	00 97       	sbiw	r24, 0x00	; 0
     f8e:	29 f0       	breq	.+10     	; 0xf9a <_Z13values_page_6v+0x16>
     f90:	01 97       	sbiw	r24, 0x01	; 1
     f92:	59 f4       	brne	.+22     	; 0xfaa <_Z13values_page_6v+0x26>
		case 0x00:
		print_value_en(5, 0, "-");
		break;
		case 0x01:
		print_value_en(5, 0, "+");
     f94:	4f e2       	ldi	r20, 0x2F	; 47
     f96:	51 e0       	ldi	r21, 0x01	; 1
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <_Z13values_page_6v+0x1a>

void values_page_6() 
{
	switch (get_value_(mcu_st_DCDC_on_)) {	/*DC DC = 27B*/
		case 0x00:
		print_value_en(5, 0, "-");
     f9a:	4d e2       	ldi	r20, 0x2D	; 45
     f9c:	51 e0       	ldi	r21, 0x01	; 1
		break;
		case 0x01:
		print_value_en(5, 0, "+");
     f9e:	60 e0       	ldi	r22, 0x00	; 0
     fa0:	70 e0       	ldi	r23, 0x00	; 0
     fa2:	85 e0       	ldi	r24, 0x05	; 5
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
		break;
	}
	switch (get_value_(mcu_st_DCDC_fault_)) { //27В fault
     faa:	80 91 39 03 	lds	r24, 0x0339	; 0x800339 <Wire+0x9>
     fae:	90 91 3a 03 	lds	r25, 0x033A	; 0x80033a <Wire+0xa>
     fb2:	00 97       	sbiw	r24, 0x00	; 0
     fb4:	29 f0       	breq	.+10     	; 0xfc0 <_Z13values_page_6v+0x3c>
     fb6:	01 97       	sbiw	r24, 0x01	; 1
     fb8:	59 f4       	brne	.+22     	; 0xfd0 <_Z13values_page_6v+0x4c>
		case 0x00:
		print_value_en(6, 0, " ");
		break;
		case 0x01:
		print_value_en(6, 0, "!");
     fba:	41 e3       	ldi	r20, 0x31	; 49
     fbc:	51 e0       	ldi	r21, 0x01	; 1
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <_Z13values_page_6v+0x40>
		print_value_en(5, 0, "+");
		break;
	}
	switch (get_value_(mcu_st_DCDC_fault_)) { //27В fault
		case 0x00:
		print_value_en(6, 0, " ");
     fc0:	4b e2       	ldi	r20, 0x2B	; 43
     fc2:	51 e0       	ldi	r21, 0x01	; 1
		break;
		case 0x01:
		print_value_en(6, 0, "!");
     fc4:	60 e0       	ldi	r22, 0x00	; 0
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	86 e0       	ldi	r24, 0x06	; 6
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
		break;
	}
	print_value(8, 0, get_value_(dc_FaultCode_));	
     fd0:	40 91 3b 03 	lds	r20, 0x033B	; 0x80033b <Wire+0xb>
     fd4:	50 91 3c 03 	lds	r21, 0x033C	; 0x80033c <_ZN7TwoWire14user_onReceiveE>
     fd8:	60 e0       	ldi	r22, 0x00	; 0
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	88 e0       	ldi	r24, 0x08	; 8
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
	
	switch (get_value_(mcu_st_DCAC_on_)) {	/*DC AC = 220B*/
     fe4:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <_ZN7TwoWire14user_onReceiveE+0x1>
     fe8:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <_ZN7TwoWire14user_onRequestE>
     fec:	00 97       	sbiw	r24, 0x00	; 0
     fee:	29 f0       	breq	.+10     	; 0xffa <_Z13values_page_6v+0x76>
     ff0:	01 97       	sbiw	r24, 0x01	; 1
     ff2:	59 f4       	brne	.+22     	; 0x100a <_Z13values_page_6v+0x86>
		case 0x00:
		print_value_en(5, 1, "-");
		break;
		case 0x01:
		print_value_en(5, 1, "+");
     ff4:	4f e2       	ldi	r20, 0x2F	; 47
     ff6:	51 e0       	ldi	r21, 0x01	; 1
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <_Z13values_page_6v+0x7a>
	}
	print_value(8, 0, get_value_(dc_FaultCode_));	
	
	switch (get_value_(mcu_st_DCAC_on_)) {	/*DC AC = 220B*/
		case 0x00:
		print_value_en(5, 1, "-");
     ffa:	4d e2       	ldi	r20, 0x2D	; 45
     ffc:	51 e0       	ldi	r21, 0x01	; 1
		break;
		case 0x01:
		print_value_en(5, 1, "+");
     ffe:	61 e0       	ldi	r22, 0x01	; 1
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	85 e0       	ldi	r24, 0x05	; 5
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
		break;
	}
	switch (get_value_(mcu_st_DCAC_fault_)) { //220В fault 
    100a:	80 91 3f 03 	lds	r24, 0x033F	; 0x80033f <_ZN7TwoWire14user_onRequestE+0x1>
    100e:	90 91 40 03 	lds	r25, 0x0340	; 0x800340 <_ZN7TwoWire12transmittingE>
    1012:	00 97       	sbiw	r24, 0x00	; 0
    1014:	29 f0       	breq	.+10     	; 0x1020 <_Z13values_page_6v+0x9c>
    1016:	01 97       	sbiw	r24, 0x01	; 1
    1018:	59 f4       	brne	.+22     	; 0x1030 <_Z13values_page_6v+0xac>
		case 0x00:
		print_value_en(6, 1, " ");
		break;
		case 0x01:
		print_value_en(6, 1, "!");
    101a:	41 e3       	ldi	r20, 0x31	; 49
    101c:	51 e0       	ldi	r21, 0x01	; 1
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <_Z13values_page_6v+0xa0>
		print_value_en(5, 1, "+");
		break;
	}
	switch (get_value_(mcu_st_DCAC_fault_)) { //220В fault 
		case 0x00:
		print_value_en(6, 1, " ");
    1020:	4b e2       	ldi	r20, 0x2B	; 43
    1022:	51 e0       	ldi	r21, 0x01	; 1
		break;
		case 0x01:
		print_value_en(6, 1, "!");
    1024:	61 e0       	ldi	r22, 0x01	; 1
    1026:	70 e0       	ldi	r23, 0x00	; 0
    1028:	86 e0       	ldi	r24, 0x06	; 6
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
		break;
	}
	print_value(8, 0, get_value_(dc_FaultCode_));
    1030:	40 91 3b 03 	lds	r20, 0x033B	; 0x80033b <Wire+0xb>
    1034:	50 91 3c 03 	lds	r21, 0x033C	; 0x80033c <_ZN7TwoWire14user_onReceiveE>
    1038:	60 e0       	ldi	r22, 0x00	; 0
    103a:	70 e0       	ldi	r23, 0x00	; 0
    103c:	88 e0       	ldi	r24, 0x08	; 8
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
	
	switch (get_value_(mcu_st_ACDC_on_)) {	/*AC DC 400B*/
    1044:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    1048:	90 91 42 03 	lds	r25, 0x0342	; 0x800342 <_ZN7TwoWire13txBufferIndexE>
    104c:	00 97       	sbiw	r24, 0x00	; 0
    104e:	29 f0       	breq	.+10     	; 0x105a <_Z13values_page_6v+0xd6>
    1050:	01 97       	sbiw	r24, 0x01	; 1
    1052:	59 f4       	brne	.+22     	; 0x106a <_Z13values_page_6v+0xe6>
		case 0:
		print_value_en(5, 2, "-");
		break;
		case 1:
		print_value_en(5, 2, "+");
    1054:	4f e2       	ldi	r20, 0x2F	; 47
    1056:	51 e0       	ldi	r21, 0x01	; 1
    1058:	02 c0       	rjmp	.+4      	; 0x105e <_Z13values_page_6v+0xda>
	}
	print_value(8, 0, get_value_(dc_FaultCode_));
	
	switch (get_value_(mcu_st_ACDC_on_)) {	/*AC DC 400B*/
		case 0:
		print_value_en(5, 2, "-");
    105a:	4d e2       	ldi	r20, 0x2D	; 45
    105c:	51 e0       	ldi	r21, 0x01	; 1
		break;
		case 1:
		print_value_en(5, 2, "+");
    105e:	62 e0       	ldi	r22, 0x02	; 2
    1060:	70 e0       	ldi	r23, 0x00	; 0
    1062:	85 e0       	ldi	r24, 0x05	; 5
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
		break; 
	}
	switch (get_value_(mcu_st_ACDC_fault_)) { //400В fault 
    106a:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <_ZN7TwoWire8txBufferE>
    106e:	90 91 44 03 	lds	r25, 0x0344	; 0x800344 <_ZN7TwoWire8txBufferE+0x1>
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	29 f0       	breq	.+10     	; 0x1080 <_Z13values_page_6v+0xfc>
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	59 f4       	brne	.+22     	; 0x1090 <_Z13values_page_6v+0x10c>
		case 0:
		print_value_en(6, 2, " ");
		break;
		case 1:
		print_value_en(6, 2, "!");
    107a:	41 e3       	ldi	r20, 0x31	; 49
    107c:	51 e0       	ldi	r21, 0x01	; 1
    107e:	02 c0       	rjmp	.+4      	; 0x1084 <_Z13values_page_6v+0x100>
		print_value_en(5, 2, "+");
		break; 
	}
	switch (get_value_(mcu_st_ACDC_fault_)) { //400В fault 
		case 0:
		print_value_en(6, 2, " ");
    1080:	4b e2       	ldi	r20, 0x2B	; 43
    1082:	51 e0       	ldi	r21, 0x01	; 1
		break;
		case 1:
		print_value_en(6, 2, "!");
    1084:	62 e0       	ldi	r22, 0x02	; 2
    1086:	70 e0       	ldi	r23, 0x00	; 0
    1088:	86 e0       	ldi	r24, 0x06	; 6
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
		break;
	}
	print_value(8, 2, get_value_(ac_dc_FaultCode_));	
    1090:	40 91 45 03 	lds	r20, 0x0345	; 0x800345 <_ZN7TwoWire8txBufferE+0x2>
    1094:	50 91 46 03 	lds	r21, 0x0346	; 0x800346 <_ZN7TwoWire8txBufferE+0x3>
    1098:	62 e0       	ldi	r22, 0x02	; 2
    109a:	70 e0       	ldi	r23, 0x00	; 0
    109c:	88 e0       	ldi	r24, 0x08	; 8
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <_Z11print_valueiii>

000010a4 <_Z13values_page_7v>:
}

void values_page_7() { 
    10a4:	cf 93       	push	r28
    10a6:	df 93       	push	r29
/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
}
int get_value_(lcdValues_ param) {	//get saved value
	return valLcd_[param];
    10a8:	c7 e1       	ldi	r28, 0x17	; 23
    10aa:	d3 e0       	ldi	r29, 0x03	; 3
	}
	print_value(8, 2, get_value_(ac_dc_FaultCode_));	
}

void values_page_7() { 
	print_value(17, 2, get_value_(current_DC_change));
    10ac:	4a 85       	ldd	r20, Y+10	; 0x0a
    10ae:	5b 85       	ldd	r21, Y+11	; 0x0b
    10b0:	62 e0       	ldi	r22, 0x02	; 2
    10b2:	70 e0       	ldi	r23, 0x00	; 0
    10b4:	81 e1       	ldi	r24, 0x11	; 17
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
	print_value(17, 1, get_value_(gen_moment));
    10bc:	4a 85       	ldd	r20, Y+10	; 0x0a
    10be:	5b 85       	ldd	r21, Y+11	; 0x0b
    10c0:	61 e0       	ldi	r22, 0x01	; 1
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	81 e1       	ldi	r24, 0x11	; 17
    10c6:	90 e0       	ldi	r25, 0x00	; 0
}
    10c8:	df 91       	pop	r29
    10ca:	cf 91       	pop	r28
	print_value(8, 2, get_value_(ac_dc_FaultCode_));	
}

void values_page_7() { 
	print_value(17, 2, get_value_(current_DC_change));
	print_value(17, 1, get_value_(gen_moment));
    10cc:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <_Z11print_valueiii>

000010d0 <_Z17lcd_change_page_7ii>:
}

void lcd_change_page_7(int v_lcd, int st_lcd) { //st_lcd: 0 - minus, 1 - plus || v_lcd: number of value on screen 7
	if (v_lcd == 1) {
    10d0:	81 30       	cpi	r24, 0x01	; 1
    10d2:	91 05       	cpc	r25, r1
    10d4:	01 f5       	brne	.+64     	; 0x1116 <_Z17lcd_change_page_7ii+0x46>
		switch (st_lcd) {
    10d6:	61 15       	cp	r22, r1
    10d8:	71 05       	cpc	r23, r1
    10da:	21 f0       	breq	.+8      	; 0x10e4 <_Z17lcd_change_page_7ii+0x14>
    10dc:	61 30       	cpi	r22, 0x01	; 1
    10de:	71 05       	cpc	r23, r1
    10e0:	79 f0       	breq	.+30     	; 0x1100 <_Z17lcd_change_page_7ii+0x30>
    10e2:	08 95       	ret
/*Initialize lcd; address, cols, rows*/
LiquidCrystal_I2C OLED1(0x3F,20,4); 

/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
    10e4:	86 e0       	ldi	r24, 0x06	; 6
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <valLcd_+0xb>
    10ec:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <valLcd_+0xa>
void lcd_change_page_7(int v_lcd, int st_lcd) { //st_lcd: 0 - minus, 1 - plus || v_lcd: number of value on screen 7
	if (v_lcd == 1) {
		switch (st_lcd) {
			case 0:
			set_values_(current_DC_change + 1, current_DC_change);
			print_value(17, 2, get_value_(current_DC_change));
    10f0:	46 e0       	ldi	r20, 0x06	; 6
    10f2:	50 e0       	ldi	r21, 0x00	; 0
    10f4:	62 e0       	ldi	r22, 0x02	; 2
    10f6:	70 e0       	ldi	r23, 0x00	; 0
    10f8:	81 e1       	ldi	r24, 0x11	; 17
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
/*Initialize lcd; address, cols, rows*/
LiquidCrystal_I2C OLED1(0x3F,20,4); 

/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
    1100:	84 e0       	ldi	r24, 0x04	; 4
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <valLcd_+0xb>
    1108:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <valLcd_+0xa>
			case 0:
			set_values_(current_DC_change + 1, current_DC_change);
			print_value(17, 2, get_value_(current_DC_change));
			case 1:
			set_values_(current_DC_change - 1, current_DC_change);
			print_value(17, 2, get_value_(current_DC_change)); }	}
    110c:	44 e0       	ldi	r20, 0x04	; 4
    110e:	50 e0       	ldi	r21, 0x00	; 0
    1110:	62 e0       	ldi	r22, 0x02	; 2
    1112:	70 e0       	ldi	r23, 0x00	; 0
    1114:	21 c0       	rjmp	.+66     	; 0x1158 <_Z17lcd_change_page_7ii+0x88>
	if (v_lcd == 2) {
    1116:	02 97       	sbiw	r24, 0x02	; 2
    1118:	19 f5       	brne	.+70     	; 0x1160 <_Z17lcd_change_page_7ii+0x90>
		switch (st_lcd) {
    111a:	61 15       	cp	r22, r1
    111c:	71 05       	cpc	r23, r1
    111e:	21 f0       	breq	.+8      	; 0x1128 <_Z17lcd_change_page_7ii+0x58>
    1120:	61 30       	cpi	r22, 0x01	; 1
    1122:	71 05       	cpc	r23, r1
    1124:	79 f0       	breq	.+30     	; 0x1144 <_Z17lcd_change_page_7ii+0x74>
    1126:	08 95       	ret
/*Initialize lcd; address, cols, rows*/
LiquidCrystal_I2C OLED1(0x3F,20,4); 

/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
    1128:	86 e0       	ldi	r24, 0x06	; 6
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <valLcd_+0xb>
    1130:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <valLcd_+0xa>
			print_value(17, 2, get_value_(current_DC_change)); }	}
	if (v_lcd == 2) {
		switch (st_lcd) {
			case 0:
			set_values_(gen_moment + 1, gen_moment);
			print_value(17, 1, get_value_(gen_moment));
    1134:	46 e0       	ldi	r20, 0x06	; 6
    1136:	50 e0       	ldi	r21, 0x00	; 0
    1138:	61 e0       	ldi	r22, 0x01	; 1
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	81 e1       	ldi	r24, 0x11	; 17
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	0e 94 ca 06 	call	0xd94	; 0xd94 <_Z11print_valueiii>
/*Initialize lcd; address, cols, rows*/
LiquidCrystal_I2C OLED1(0x3F,20,4); 

/*Set and get lcd values*/
int set_values_(int value, lcdValues_ param) {	//save value
	valLcd_[param] = value;
    1144:	84 e0       	ldi	r24, 0x04	; 4
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	90 93 22 03 	sts	0x0322, r25	; 0x800322 <valLcd_+0xb>
    114c:	80 93 21 03 	sts	0x0321, r24	; 0x800321 <valLcd_+0xa>
			case 0:
			set_values_(gen_moment + 1, gen_moment);
			print_value(17, 1, get_value_(gen_moment));
			case 1:
			set_values_(gen_moment -1, gen_moment);
			print_value(17, 1, get_value_(gen_moment)); }	}		
    1150:	44 e0       	ldi	r20, 0x04	; 4
    1152:	50 e0       	ldi	r21, 0x00	; 0
    1154:	61 e0       	ldi	r22, 0x01	; 1
    1156:	70 e0       	ldi	r23, 0x00	; 0
    1158:	81 e1       	ldi	r24, 0x11	; 17
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <_Z11print_valueiii>
    1160:	08 95       	ret

00001162 <_Z5page1v>:
}

void page1() {
	currentScreen = 1;
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <currentScreen+0x1>
    116a:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <currentScreen>
	OLED1.clear();
    116e:	89 e0       	ldi	r24, 0x09	; 9
    1170:	93 e0       	ldi	r25, 0x03	; 3
    1172:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_en(0, 0, "AC");
    1176:	46 e9       	ldi	r20, 0x96	; 150
    1178:	51 e0       	ldi	r21, 0x01	; 1
    117a:	60 e0       	ldi	r22, 0x00	; 0
    117c:	70 e0       	ldi	r23, 0x00	; 0
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
	print_value_rus(9, 0, "В");								
    1186:	42 e6       	ldi	r20, 0x62	; 98
    1188:	51 e0       	ldi	r21, 0x01	; 1
    118a:	60 e0       	ldi	r22, 0x00	; 0
    118c:	70 e0       	ldi	r23, 0x00	; 0
    118e:	89 e0       	ldi	r24, 0x09	; 9
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(17, 0, "кВт");
    1196:	4a e4       	ldi	r20, 0x4A	; 74
    1198:	51 e0       	ldi	r21, 0x01	; 1
    119a:	60 e0       	ldi	r22, 0x00	; 0
    119c:	70 e0       	ldi	r23, 0x00	; 0
    119e:	81 e1       	ldi	r24, 0x11	; 17
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_en(0, 1, "DC");
    11a6:	48 e6       	ldi	r20, 0x68	; 104
    11a8:	51 e0       	ldi	r21, 0x01	; 1
    11aa:	61 e0       	ldi	r22, 0x01	; 1
    11ac:	70 e0       	ldi	r23, 0x00	; 0
    11ae:	80 e0       	ldi	r24, 0x00	; 0
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	0e 94 aa 06 	call	0xd54	; 0xd54 <_Z14print_value_eniiPc>
	print_value_rus(9, 1, "В");
    11b6:	42 e6       	ldi	r20, 0x62	; 98
    11b8:	51 e0       	ldi	r21, 0x01	; 1
    11ba:	61 e0       	ldi	r22, 0x01	; 1
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	89 e0       	ldi	r24, 0x09	; 9
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(17, 1, "кВт");
    11c6:	4a e4       	ldi	r20, 0x4A	; 74
    11c8:	51 e0       	ldi	r21, 0x01	; 1
    11ca:	61 e0       	ldi	r22, 0x01	; 1
    11cc:	70 e0       	ldi	r23, 0x00	; 0
    11ce:	81 e1       	ldi	r24, 0x11	; 17
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 2, "Ген      об/м    кВт");
    11d6:	43 e3       	ldi	r20, 0x33	; 51
    11d8:	51 e0       	ldi	r21, 0x01	; 1
    11da:	62 e0       	ldi	r22, 0x02	; 2
    11dc:	70 e0       	ldi	r23, 0x00	; 0
    11de:	80 e0       	ldi	r24, 0x00	; 0
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 3, "УКИ 6000 ом/В");
    11e6:	41 e5       	ldi	r20, 0x51	; 81
    11e8:	51 e0       	ldi	r21, 0x01	; 1
    11ea:	63 e0       	ldi	r22, 0x03	; 3
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	80 e0       	ldi	r24, 0x00	; 0
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	values_page_1();
    11f6:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <_Z13values_page_1v>

000011fa <_Z5page2v>:
}

void page2() {  //dc/dc
	OLED1.clear();
    11fa:	89 e0       	ldi	r24, 0x09	; 9
    11fc:	93 e0       	ldi	r25, 0x03	; 3
    11fe:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_rus(8, 0, "DC/DC");
    1202:	45 e6       	ldi	r20, 0x65	; 101
    1204:	51 e0       	ldi	r21, 0x01	; 1
    1206:	60 e0       	ldi	r22, 0x00	; 0
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	88 e0       	ldi	r24, 0x08	; 8
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 1, "Напр:");
    1212:	4b e6       	ldi	r20, 0x6B	; 107
    1214:	51 e0       	ldi	r21, 0x01	; 1
    1216:	61 e0       	ldi	r22, 0x01	; 1
    1218:	70 e0       	ldi	r23, 0x00	; 0
    121a:	80 e0       	ldi	r24, 0x00	; 0
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 1, "В");
    1222:	42 e6       	ldi	r20, 0x62	; 98
    1224:	51 e0       	ldi	r21, 0x01	; 1
    1226:	61 e0       	ldi	r22, 0x01	; 1
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	8b e0       	ldi	r24, 0x0B	; 11
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 2, "Ток:");
    1232:	45 e7       	ldi	r20, 0x75	; 117
    1234:	51 e0       	ldi	r21, 0x01	; 1
    1236:	62 e0       	ldi	r22, 0x02	; 2
    1238:	70 e0       	ldi	r23, 0x00	; 0
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 2, "А");	
    1242:	4d e7       	ldi	r20, 0x7D	; 125
    1244:	51 e0       	ldi	r21, 0x01	; 1
    1246:	62 e0       	ldi	r22, 0x02	; 2
    1248:	70 e0       	ldi	r23, 0x00	; 0
    124a:	8b e0       	ldi	r24, 0x0B	; 11
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 3, "Темп:");
    1252:	40 e8       	ldi	r20, 0x80	; 128
    1254:	51 e0       	ldi	r21, 0x01	; 1
    1256:	63 e0       	ldi	r22, 0x03	; 3
    1258:	70 e0       	ldi	r23, 0x00	; 0
    125a:	80 e0       	ldi	r24, 0x00	; 0
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 3, "град");
    1262:	4a e8       	ldi	r20, 0x8A	; 138
    1264:	51 e0       	ldi	r21, 0x01	; 1
    1266:	63 e0       	ldi	r22, 0x03	; 3
    1268:	70 e0       	ldi	r23, 0x00	; 0
    126a:	8b e0       	ldi	r24, 0x0B	; 11
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <_Z15print_value_rusiiPc>

00001272 <_Z5page3v>:
}

void page3() {  //dc/ac
	OLED1.clear();
    1272:	89 e0       	ldi	r24, 0x09	; 9
    1274:	93 e0       	ldi	r25, 0x03	; 3
    1276:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_rus(8, 0, "DC/AC");
    127a:	43 e9       	ldi	r20, 0x93	; 147
    127c:	51 e0       	ldi	r21, 0x01	; 1
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	88 e0       	ldi	r24, 0x08	; 8
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 1, "Напр:");
    128a:	4b e6       	ldi	r20, 0x6B	; 107
    128c:	51 e0       	ldi	r21, 0x01	; 1
    128e:	61 e0       	ldi	r22, 0x01	; 1
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 1, "В");
    129a:	42 e6       	ldi	r20, 0x62	; 98
    129c:	51 e0       	ldi	r21, 0x01	; 1
    129e:	61 e0       	ldi	r22, 0x01	; 1
    12a0:	70 e0       	ldi	r23, 0x00	; 0
    12a2:	8b e0       	ldi	r24, 0x0B	; 11
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 2, "Ток:");
    12aa:	45 e7       	ldi	r20, 0x75	; 117
    12ac:	51 e0       	ldi	r21, 0x01	; 1
    12ae:	62 e0       	ldi	r22, 0x02	; 2
    12b0:	70 e0       	ldi	r23, 0x00	; 0
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 2, "А");
    12ba:	4d e7       	ldi	r20, 0x7D	; 125
    12bc:	51 e0       	ldi	r21, 0x01	; 1
    12be:	62 e0       	ldi	r22, 0x02	; 2
    12c0:	70 e0       	ldi	r23, 0x00	; 0
    12c2:	8b e0       	ldi	r24, 0x0B	; 11
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 3, "Темп:");
    12ca:	40 e8       	ldi	r20, 0x80	; 128
    12cc:	51 e0       	ldi	r21, 0x01	; 1
    12ce:	63 e0       	ldi	r22, 0x03	; 3
    12d0:	70 e0       	ldi	r23, 0x00	; 0
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 3, "град");
    12da:	4a e8       	ldi	r20, 0x8A	; 138
    12dc:	51 e0       	ldi	r21, 0x01	; 1
    12de:	63 e0       	ldi	r22, 0x03	; 3
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	8b e0       	ldi	r24, 0x0B	; 11
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <_Z15print_value_rusiiPc>

000012ea <_Z5page4v>:
}

void page4() {  //invertor
	OLED1.clear();
    12ea:	89 e0       	ldi	r24, 0x09	; 9
    12ec:	93 e0       	ldi	r25, 0x03	; 3
    12ee:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_rus(8, 0, "Инвертор");
    12f2:	49 e9       	ldi	r20, 0x99	; 153
    12f4:	51 e0       	ldi	r21, 0x01	; 1
    12f6:	60 e0       	ldi	r22, 0x00	; 0
    12f8:	70 e0       	ldi	r23, 0x00	; 0
    12fa:	88 e0       	ldi	r24, 0x08	; 8
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 1, "Напр:");
    1302:	4b e6       	ldi	r20, 0x6B	; 107
    1304:	51 e0       	ldi	r21, 0x01	; 1
    1306:	61 e0       	ldi	r22, 0x01	; 1
    1308:	70 e0       	ldi	r23, 0x00	; 0
    130a:	80 e0       	ldi	r24, 0x00	; 0
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 1, "В");
    1312:	42 e6       	ldi	r20, 0x62	; 98
    1314:	51 e0       	ldi	r21, 0x01	; 1
    1316:	61 e0       	ldi	r22, 0x01	; 1
    1318:	70 e0       	ldi	r23, 0x00	; 0
    131a:	8b e0       	ldi	r24, 0x0B	; 11
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 2, "Ток:");
    1322:	45 e7       	ldi	r20, 0x75	; 117
    1324:	51 e0       	ldi	r21, 0x01	; 1
    1326:	62 e0       	ldi	r22, 0x02	; 2
    1328:	70 e0       	ldi	r23, 0x00	; 0
    132a:	80 e0       	ldi	r24, 0x00	; 0
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 2, "А");
    1332:	4d e7       	ldi	r20, 0x7D	; 125
    1334:	51 e0       	ldi	r21, 0x01	; 1
    1336:	62 e0       	ldi	r22, 0x02	; 2
    1338:	70 e0       	ldi	r23, 0x00	; 0
    133a:	8b e0       	ldi	r24, 0x0B	; 11
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 3, "Темп:");
    1342:	40 e8       	ldi	r20, 0x80	; 128
    1344:	51 e0       	ldi	r21, 0x01	; 1
    1346:	63 e0       	ldi	r22, 0x03	; 3
    1348:	70 e0       	ldi	r23, 0x00	; 0
    134a:	80 e0       	ldi	r24, 0x00	; 0
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 3, "град");
    1352:	4a e8       	ldi	r20, 0x8A	; 138
    1354:	51 e0       	ldi	r21, 0x01	; 1
    1356:	63 e0       	ldi	r22, 0x03	; 3
    1358:	70 e0       	ldi	r23, 0x00	; 0
    135a:	8b e0       	ldi	r24, 0x0B	; 11
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <_Z15print_value_rusiiPc>

00001362 <_Z5page5v>:
}

void page5() {  //generator
	OLED1.clear();
    1362:	89 e0       	ldi	r24, 0x09	; 9
    1364:	93 e0       	ldi	r25, 0x03	; 3
    1366:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_rus(8, 0, "Генератор");
    136a:	4a ea       	ldi	r20, 0xAA	; 170
    136c:	51 e0       	ldi	r21, 0x01	; 1
    136e:	60 e0       	ldi	r22, 0x00	; 0
    1370:	70 e0       	ldi	r23, 0x00	; 0
    1372:	88 e0       	ldi	r24, 0x08	; 8
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 1, "Напр:");
    137a:	4b e6       	ldi	r20, 0x6B	; 107
    137c:	51 e0       	ldi	r21, 0x01	; 1
    137e:	61 e0       	ldi	r22, 0x01	; 1
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	80 e0       	ldi	r24, 0x00	; 0
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 1, "В");
    138a:	42 e6       	ldi	r20, 0x62	; 98
    138c:	51 e0       	ldi	r21, 0x01	; 1
    138e:	61 e0       	ldi	r22, 0x01	; 1
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	8b e0       	ldi	r24, 0x0B	; 11
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 2, "Ток:");
    139a:	45 e7       	ldi	r20, 0x75	; 117
    139c:	51 e0       	ldi	r21, 0x01	; 1
    139e:	62 e0       	ldi	r22, 0x02	; 2
    13a0:	70 e0       	ldi	r23, 0x00	; 0
    13a2:	80 e0       	ldi	r24, 0x00	; 0
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 2, "А");
    13aa:	4d e7       	ldi	r20, 0x7D	; 125
    13ac:	51 e0       	ldi	r21, 0x01	; 1
    13ae:	62 e0       	ldi	r22, 0x02	; 2
    13b0:	70 e0       	ldi	r23, 0x00	; 0
    13b2:	8b e0       	ldi	r24, 0x0B	; 11
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 3, "Темп:");
    13ba:	40 e8       	ldi	r20, 0x80	; 128
    13bc:	51 e0       	ldi	r21, 0x01	; 1
    13be:	63 e0       	ldi	r22, 0x03	; 3
    13c0:	70 e0       	ldi	r23, 0x00	; 0
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(11, 3, "град");
    13ca:	4a e8       	ldi	r20, 0x8A	; 138
    13cc:	51 e0       	ldi	r21, 0x01	; 1
    13ce:	63 e0       	ldi	r22, 0x03	; 3
    13d0:	70 e0       	ldi	r23, 0x00	; 0
    13d2:	8b e0       	ldi	r24, 0x0B	; 11
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <_Z15print_value_rusiiPc>

000013da <_Z5page6v>:
}

void page6() {  //flags of mistakes
	OLED1.clear();
    13da:	89 e0       	ldi	r24, 0x09	; 9
    13dc:	93 e0       	ldi	r25, 0x03	; 3
    13de:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_rus(0, 0, "27В");
    13e2:	4d eb       	ldi	r20, 0xBD	; 189
    13e4:	51 e0       	ldi	r21, 0x01	; 1
    13e6:	60 e0       	ldi	r22, 0x00	; 0
    13e8:	70 e0       	ldi	r23, 0x00	; 0
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 1, "220В");
    13f2:	42 ec       	ldi	r20, 0xC2	; 194
    13f4:	51 e0       	ldi	r21, 0x01	; 1
    13f6:	61 e0       	ldi	r22, 0x01	; 1
    13f8:	70 e0       	ldi	r23, 0x00	; 0
    13fa:	80 e0       	ldi	r24, 0x00	; 0
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 2, "400В");
    1402:	48 ec       	ldi	r20, 0xC8	; 200
    1404:	51 e0       	ldi	r21, 0x01	; 1
    1406:	62 e0       	ldi	r22, 0x02	; 2
    1408:	70 e0       	ldi	r23, 0x00	; 0
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 3, "УКИ");
    1412:	4e ec       	ldi	r20, 0xCE	; 206
    1414:	51 e0       	ldi	r21, 0x01	; 1
    1416:	63 e0       	ldi	r22, 0x03	; 3
    1418:	70 e0       	ldi	r23, 0x00	; 0
    141a:	80 e0       	ldi	r24, 0x00	; 0
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	values_page_6();
    1422:	0c 94 c2 07 	jmp	0xf84	; 0xf84 <_Z13values_page_6v>

00001426 <_Z5page0v>:
} 

void page0()//3s preface screen
{
	OLED1.clear();
    1426:	89 e0       	ldi	r24, 0x09	; 9
    1428:	93 e0       	ldi	r25, 0x03	; 3
    142a:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_rus(7, 0, "RUBRUKS");
    142e:	45 ed       	ldi	r20, 0xD5	; 213
    1430:	51 e0       	ldi	r21, 0x01	; 1
    1432:	60 e0       	ldi	r22, 0x00	; 0
    1434:	70 e0       	ldi	r23, 0x00	; 0
    1436:	87 e0       	ldi	r24, 0x07	; 7
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(7, 1, "Система");	
    143e:	4d ed       	ldi	r20, 0xDD	; 221
    1440:	51 e0       	ldi	r21, 0x01	; 1
    1442:	61 e0       	ldi	r22, 0x01	; 1
    1444:	70 e0       	ldi	r23, 0x00	; 0
    1446:	87 e0       	ldi	r24, 0x07	; 7
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(4, 2, "Энергопитания");
    144e:	4c ee       	ldi	r20, 0xEC	; 236
    1450:	51 e0       	ldi	r21, 0x01	; 1
    1452:	62 e0       	ldi	r22, 0x02	; 2
    1454:	70 e0       	ldi	r23, 0x00	; 0
    1456:	84 e0       	ldi	r24, 0x04	; 4
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 3, "v_0.01");
    145e:	47 e0       	ldi	r20, 0x07	; 7
    1460:	52 e0       	ldi	r21, 0x02	; 2
    1462:	63 e0       	ldi	r22, 0x03	; 3
    1464:	70 e0       	ldi	r23, 0x00	; 0
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <_Z15print_value_rusiiPc>

0000146e <_Z5page7v>:
}

void page7() {//page of change mode 
	OLED1.clear();
    146e:	89 e0       	ldi	r24, 0x09	; 9
    1470:	93 e0       	ldi	r25, 0x03	; 3
    1472:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	print_value_rus(2, 0, "Изменение настроек");
    1476:	4e e0       	ldi	r20, 0x0E	; 14
    1478:	52 e0       	ldi	r21, 0x02	; 2
    147a:	60 e0       	ldi	r22, 0x00	; 0
    147c:	70 e0       	ldi	r23, 0x00	; 0
    147e:	82 e0       	ldi	r24, 0x02	; 2
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 1, "Ток DC/DC:");
    1486:	42 e3       	ldi	r20, 0x32	; 50
    1488:	52 e0       	ldi	r21, 0x02	; 2
    148a:	61 e0       	ldi	r22, 0x01	; 1
    148c:	70 e0       	ldi	r23, 0x00	; 0
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(0, 2, "Макс.момент ген:");
    1496:	40 e4       	ldi	r20, 0x40	; 64
    1498:	52 e0       	ldi	r21, 0x02	; 2
    149a:	62 e0       	ldi	r22, 0x02	; 2
    149c:	70 e0       	ldi	r23, 0x00	; 0
    149e:	80 e0       	ldi	r24, 0x00	; 0
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	print_value_rus(19, 1, "А");
    14a6:	4d e7       	ldi	r20, 0x7D	; 125
    14a8:	51 e0       	ldi	r21, 0x01	; 1
    14aa:	61 e0       	ldi	r22, 0x01	; 1
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	83 e1       	ldi	r24, 0x13	; 19
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	0e 94 ba 06 	call	0xd74	; 0xd74 <_Z15print_value_rusiiPc>
	values_page_7();	
    14b6:	0e 94 52 08 	call	0x10a4	; 0x10a4 <_Z13values_page_7v>
	currentScreen = 7;
    14ba:	87 e0       	ldi	r24, 0x07	; 7
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <currentScreen+0x1>
    14c2:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <currentScreen>
    14c6:	08 95       	ret

000014c8 <_Z8lcd_initv>:
}

/*Initialize lcd*/
void lcd_init()
{
	OLED1.init();
    14c8:	89 e0       	ldi	r24, 0x09	; 9
    14ca:	93 e0       	ldi	r25, 0x03	; 3
    14cc:	0e 94 c1 14 	call	0x2982	; 0x2982 <_ZN17LiquidCrystal_I2C4initEv>
	OLED1.backlight();
    14d0:	89 e0       	ldi	r24, 0x09	; 9
    14d2:	93 e0       	ldi	r25, 0x03	; 3
    14d4:	0e 94 c0 12 	call	0x2580	; 0x2580 <_ZN17LiquidCrystal_I2C9backlightEv>
	delay(500); //according to datasheet ws0100
    14d8:	64 ef       	ldi	r22, 0xF4	; 244
    14da:	71 e0       	ldi	r23, 0x01	; 1
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <delay>
	OLED1.clear();
    14e4:	89 e0       	ldi	r24, 0x09	; 9
    14e6:	93 e0       	ldi	r25, 0x03	; 3
    14e8:	0e 94 06 13 	call	0x260c	; 0x260c <_ZN17LiquidCrystal_I2C5clearEv>
	page0();
    14ec:	0e 94 13 0a 	call	0x1426	; 0x1426 <_Z5page0v>
	currentScreen = 1;
    14f0:	81 e0       	ldi	r24, 0x01	; 1
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <currentScreen+0x1>
    14f8:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <currentScreen>
	delay(3000);
    14fc:	68 eb       	ldi	r22, 0xB8	; 184
    14fe:	7b e0       	ldi	r23, 0x0B	; 11
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <delay>
	page1();
    1508:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <_Z5page1v>

0000150c <_Z19show_current_valuesv>:
}

/*show current page on lcd screen with its renewed values*/
void show_current_values()
{                              
	switch (currentScreen) {
    150c:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <currentScreen>
    1510:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <currentScreen+0x1>
    1514:	83 30       	cpi	r24, 0x03	; 3
    1516:	91 05       	cpc	r25, r1
    1518:	91 f0       	breq	.+36     	; 0x153e <_Z19show_current_valuesv+0x32>
    151a:	34 f4       	brge	.+12     	; 0x1528 <_Z19show_current_valuesv+0x1c>
    151c:	81 30       	cpi	r24, 0x01	; 1
    151e:	91 05       	cpc	r25, r1
    1520:	51 f0       	breq	.+20     	; 0x1536 <_Z19show_current_valuesv+0x2a>
    1522:	02 97       	sbiw	r24, 0x02	; 2
    1524:	51 f0       	breq	.+20     	; 0x153a <_Z19show_current_valuesv+0x2e>
    1526:	08 95       	ret
    1528:	85 30       	cpi	r24, 0x05	; 5
    152a:	91 05       	cpc	r25, r1
    152c:	61 f0       	breq	.+24     	; 0x1546 <_Z19show_current_valuesv+0x3a>
    152e:	4c f0       	brlt	.+18     	; 0x1542 <_Z19show_current_valuesv+0x36>
    1530:	06 97       	sbiw	r24, 0x06	; 6
    1532:	59 f0       	breq	.+22     	; 0x154a <_Z19show_current_valuesv+0x3e>
    1534:	08 95       	ret
		case 1:
			values_page_1();
    1536:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <_Z13values_page_1v>
			break;
		case 2:
			values_page_2();
    153a:	0c 94 4a 07 	jmp	0xe94	; 0xe94 <_Z13values_page_2v>
			break;
		case 3:
			values_page_3();
    153e:	0c 94 68 07 	jmp	0xed0	; 0xed0 <_Z13values_page_3v>
			break;
		case 4:
			values_page_4();
    1542:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <_Z13values_page_4v>
			break;
		case 5:
			values_page_5();
    1546:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <_Z13values_page_5v>
			break;
		case 6:
			values_page_6();
    154a:	0c 94 c2 07 	jmp	0xf84	; 0xf84 <_Z13values_page_6v>

0000154e <_Z11switch_pagev>:
	}
}

/*switch pages*/
void switch_page() {
	switch (currentScreen) {
    154e:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <currentScreen>
    1552:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <currentScreen+0x1>
    1556:	83 30       	cpi	r24, 0x03	; 3
    1558:	91 05       	cpc	r25, r1
    155a:	c1 f0       	breq	.+48     	; 0x158c <_Z11switch_pagev+0x3e>
    155c:	34 f4       	brge	.+12     	; 0x156a <_Z11switch_pagev+0x1c>
    155e:	81 30       	cpi	r24, 0x01	; 1
    1560:	91 05       	cpc	r25, r1
    1562:	51 f0       	breq	.+20     	; 0x1578 <_Z11switch_pagev+0x2a>
    1564:	02 97       	sbiw	r24, 0x02	; 2
    1566:	69 f0       	breq	.+26     	; 0x1582 <_Z11switch_pagev+0x34>
    1568:	08 95       	ret
    156a:	85 30       	cpi	r24, 0x05	; 5
    156c:	91 05       	cpc	r25, r1
    156e:	c1 f0       	breq	.+48     	; 0x15a0 <_Z11switch_pagev+0x52>
    1570:	94 f0       	brlt	.+36     	; 0x1596 <_Z11switch_pagev+0x48>
    1572:	06 97       	sbiw	r24, 0x06	; 6
    1574:	d1 f0       	breq	.+52     	; 0x15aa <_Z11switch_pagev+0x5c>
    1576:	08 95       	ret
		case 1:
			page2();
    1578:	0e 94 fd 08 	call	0x11fa	; 0x11fa <_Z5page2v>
			currentScreen = 2;
    157c:	82 e0       	ldi	r24, 0x02	; 2
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	18 c0       	rjmp	.+48     	; 0x15b2 <_Z11switch_pagev+0x64>
			break;
		case 2:
			page3();
    1582:	0e 94 39 09 	call	0x1272	; 0x1272 <_Z5page3v>
			currentScreen = 3;
    1586:	83 e0       	ldi	r24, 0x03	; 3
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	13 c0       	rjmp	.+38     	; 0x15b2 <_Z11switch_pagev+0x64>
			break;
		case 3:
			page4();
    158c:	0e 94 75 09 	call	0x12ea	; 0x12ea <_Z5page4v>
			currentScreen = 4;
    1590:	84 e0       	ldi	r24, 0x04	; 4
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	0e c0       	rjmp	.+28     	; 0x15b2 <_Z11switch_pagev+0x64>
			break;
		case 4:
			page5();
    1596:	0e 94 b1 09 	call	0x1362	; 0x1362 <_Z5page5v>
			currentScreen = 5;
    159a:	85 e0       	ldi	r24, 0x05	; 5
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	09 c0       	rjmp	.+18     	; 0x15b2 <_Z11switch_pagev+0x64>
			break;
		case 5:
			page6();
    15a0:	0e 94 ed 09 	call	0x13da	; 0x13da <_Z5page6v>
			currentScreen = 6;
    15a4:	86 e0       	ldi	r24, 0x06	; 6
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	04 c0       	rjmp	.+8      	; 0x15b2 <_Z11switch_pagev+0x64>
			break;
		case 6:
			page1();
    15aa:	0e 94 b1 08 	call	0x1162	; 0x1162 <_Z5page1v>
			currentScreen = 1;
    15ae:	81 e0       	ldi	r24, 0x01	; 1
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <currentScreen+0x1>
    15b6:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <currentScreen>
    15ba:	08 95       	ret

000015bc <_GLOBAL__sub_I_values_>:
lcdValues_ values_[33];
int valLcd_[Last_];
int currentScreen = 0;

/*Initialize lcd; address, cols, rows*/
LiquidCrystal_I2C OLED1(0x3F,20,4); 
    15bc:	24 e0       	ldi	r18, 0x04	; 4
    15be:	44 e1       	ldi	r20, 0x14	; 20
    15c0:	6f e3       	ldi	r22, 0x3F	; 63
    15c2:	89 e0       	ldi	r24, 0x09	; 9
    15c4:	93 e0       	ldi	r25, 0x03	; 3
    15c6:	0c 94 9d 12 	jmp	0x253a	; 0x253a <_ZN17LiquidCrystal_I2CC1Ehhh>

000015ca <setup>:
    15ca:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <_Z12buttons_initv>
    15ce:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_Z8can_initv>
    15d2:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <_Z8lcd_initv>

000015d6 <loop>:
    15d6:	0e 94 0b 03 	call	0x616	; 0x616 <_Z20send_control_messagev>
    15da:	0e 94 9d 03 	call	0x73a	; 0x73a <_Z20control_leds_messagev>
    15de:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <_Z23modify_and_show_displayv>

000015e2 <initVariant>:
    15e2:	08 95       	ret

000015e4 <main>:
    15e4:	0e 94 a7 0c 	call	0x194e	; 0x194e <init>
    15e8:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <initVariant>
    15ec:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <setup>
    15f0:	c0 e0       	ldi	r28, 0x00	; 0
    15f2:	d0 e0       	ldi	r29, 0x00	; 0
    15f4:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <loop>
    15f8:	20 97       	sbiw	r28, 0x00	; 0
    15fa:	e1 f3       	breq	.-8      	; 0x15f4 <main+0x10>
    15fc:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    1600:	f9 cf       	rjmp	.-14     	; 0x15f4 <main+0x10>

00001602 <_ZN5Print17availableForWriteEv>:
    1602:	80 e0       	ldi	r24, 0x00	; 0
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	08 95       	ret

00001608 <_ZN5Print5flushEv>:
    1608:	08 95       	ret

0000160a <_ZN5Print5writeEPKhj>:
    160a:	cf 92       	push	r12
    160c:	df 92       	push	r13
    160e:	ef 92       	push	r14
    1610:	ff 92       	push	r15
    1612:	0f 93       	push	r16
    1614:	1f 93       	push	r17
    1616:	cf 93       	push	r28
    1618:	df 93       	push	r29
    161a:	6c 01       	movw	r12, r24
    161c:	7a 01       	movw	r14, r20
    161e:	8b 01       	movw	r16, r22
    1620:	c0 e0       	ldi	r28, 0x00	; 0
    1622:	d0 e0       	ldi	r29, 0x00	; 0
    1624:	ce 15       	cp	r28, r14
    1626:	df 05       	cpc	r29, r15
    1628:	81 f0       	breq	.+32     	; 0x164a <_ZN5Print5writeEPKhj+0x40>
    162a:	d8 01       	movw	r26, r16
    162c:	6d 91       	ld	r22, X+
    162e:	8d 01       	movw	r16, r26
    1630:	d6 01       	movw	r26, r12
    1632:	ed 91       	ld	r30, X+
    1634:	fc 91       	ld	r31, X
    1636:	01 90       	ld	r0, Z+
    1638:	f0 81       	ld	r31, Z
    163a:	e0 2d       	mov	r30, r0
    163c:	c6 01       	movw	r24, r12
    163e:	09 95       	icall
    1640:	89 2b       	or	r24, r25
    1642:	11 f0       	breq	.+4      	; 0x1648 <_ZN5Print5writeEPKhj+0x3e>
    1644:	21 96       	adiw	r28, 0x01	; 1
    1646:	ee cf       	rjmp	.-36     	; 0x1624 <_ZN5Print5writeEPKhj+0x1a>
    1648:	7e 01       	movw	r14, r28
    164a:	c7 01       	movw	r24, r14
    164c:	df 91       	pop	r29
    164e:	cf 91       	pop	r28
    1650:	1f 91       	pop	r17
    1652:	0f 91       	pop	r16
    1654:	ff 90       	pop	r15
    1656:	ef 90       	pop	r14
    1658:	df 90       	pop	r13
    165a:	cf 90       	pop	r12
    165c:	08 95       	ret

0000165e <_ZN5Print5writeEPKc>:
    165e:	61 15       	cp	r22, r1
    1660:	71 05       	cpc	r23, r1
    1662:	79 f0       	breq	.+30     	; 0x1682 <_ZN5Print5writeEPKc+0x24>
    1664:	fb 01       	movw	r30, r22
    1666:	01 90       	ld	r0, Z+
    1668:	00 20       	and	r0, r0
    166a:	e9 f7       	brne	.-6      	; 0x1666 <_ZN5Print5writeEPKc+0x8>
    166c:	31 97       	sbiw	r30, 0x01	; 1
    166e:	af 01       	movw	r20, r30
    1670:	46 1b       	sub	r20, r22
    1672:	57 0b       	sbc	r21, r23
    1674:	dc 01       	movw	r26, r24
    1676:	ed 91       	ld	r30, X+
    1678:	fc 91       	ld	r31, X
    167a:	02 80       	ldd	r0, Z+2	; 0x02
    167c:	f3 81       	ldd	r31, Z+3	; 0x03
    167e:	e0 2d       	mov	r30, r0
    1680:	09 94       	ijmp
    1682:	80 e0       	ldi	r24, 0x00	; 0
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	08 95       	ret

00001688 <_ZN5Print5printEPKc>:
    1688:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <_ZN5Print5writeEPKc>

0000168c <_ZN5Print5printEc>:
    168c:	dc 01       	movw	r26, r24
    168e:	ed 91       	ld	r30, X+
    1690:	fc 91       	ld	r31, X
    1692:	01 90       	ld	r0, Z+
    1694:	f0 81       	ld	r31, Z
    1696:	e0 2d       	mov	r30, r0
    1698:	09 94       	ijmp

0000169a <_ZN5Print11printNumberEmh>:
    169a:	8f 92       	push	r8
    169c:	9f 92       	push	r9
    169e:	af 92       	push	r10
    16a0:	bf 92       	push	r11
    16a2:	ef 92       	push	r14
    16a4:	ff 92       	push	r15
    16a6:	0f 93       	push	r16
    16a8:	1f 93       	push	r17
    16aa:	cf 93       	push	r28
    16ac:	df 93       	push	r29
    16ae:	cd b7       	in	r28, 0x3d	; 61
    16b0:	de b7       	in	r29, 0x3e	; 62
    16b2:	a1 97       	sbiw	r28, 0x21	; 33
    16b4:	0f b6       	in	r0, 0x3f	; 63
    16b6:	f8 94       	cli
    16b8:	de bf       	out	0x3e, r29	; 62
    16ba:	0f be       	out	0x3f, r0	; 63
    16bc:	cd bf       	out	0x3d, r28	; 61
    16be:	7c 01       	movw	r14, r24
    16c0:	fa 01       	movw	r30, r20
    16c2:	cb 01       	movw	r24, r22
    16c4:	19 a2       	std	Y+33, r1	; 0x21
    16c6:	22 30       	cpi	r18, 0x02	; 2
    16c8:	08 f4       	brcc	.+2      	; 0x16cc <_ZN5Print11printNumberEmh+0x32>
    16ca:	2a e0       	ldi	r18, 0x0A	; 10
    16cc:	8e 01       	movw	r16, r28
    16ce:	0f 5d       	subi	r16, 0xDF	; 223
    16d0:	1f 4f       	sbci	r17, 0xFF	; 255
    16d2:	82 2e       	mov	r8, r18
    16d4:	91 2c       	mov	r9, r1
    16d6:	a1 2c       	mov	r10, r1
    16d8:	b1 2c       	mov	r11, r1
    16da:	bf 01       	movw	r22, r30
    16dc:	a5 01       	movw	r20, r10
    16de:	94 01       	movw	r18, r8
    16e0:	0e 94 f5 17 	call	0x2fea	; 0x2fea <__udivmodsi4>
    16e4:	f9 01       	movw	r30, r18
    16e6:	ca 01       	movw	r24, r20
    16e8:	01 50       	subi	r16, 0x01	; 1
    16ea:	11 09       	sbc	r17, r1
    16ec:	6a 30       	cpi	r22, 0x0A	; 10
    16ee:	10 f4       	brcc	.+4      	; 0x16f4 <_ZN5Print11printNumberEmh+0x5a>
    16f0:	60 5d       	subi	r22, 0xD0	; 208
    16f2:	01 c0       	rjmp	.+2      	; 0x16f6 <_ZN5Print11printNumberEmh+0x5c>
    16f4:	69 5c       	subi	r22, 0xC9	; 201
    16f6:	d8 01       	movw	r26, r16
    16f8:	6c 93       	st	X, r22
    16fa:	23 2b       	or	r18, r19
    16fc:	24 2b       	or	r18, r20
    16fe:	25 2b       	or	r18, r21
    1700:	61 f7       	brne	.-40     	; 0x16da <_ZN5Print11printNumberEmh+0x40>
    1702:	b8 01       	movw	r22, r16
    1704:	c7 01       	movw	r24, r14
    1706:	0e 94 2f 0b 	call	0x165e	; 0x165e <_ZN5Print5writeEPKc>
    170a:	a1 96       	adiw	r28, 0x21	; 33
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	f8 94       	cli
    1710:	de bf       	out	0x3e, r29	; 62
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	cd bf       	out	0x3d, r28	; 61
    1716:	df 91       	pop	r29
    1718:	cf 91       	pop	r28
    171a:	1f 91       	pop	r17
    171c:	0f 91       	pop	r16
    171e:	ff 90       	pop	r15
    1720:	ef 90       	pop	r14
    1722:	bf 90       	pop	r11
    1724:	af 90       	pop	r10
    1726:	9f 90       	pop	r9
    1728:	8f 90       	pop	r8
    172a:	08 95       	ret

0000172c <_ZN5Print5printEli>:
    172c:	cf 92       	push	r12
    172e:	df 92       	push	r13
    1730:	ef 92       	push	r14
    1732:	ff 92       	push	r15
    1734:	0f 93       	push	r16
    1736:	1f 93       	push	r17
    1738:	cf 93       	push	r28
    173a:	df 93       	push	r29
    173c:	21 15       	cp	r18, r1
    173e:	31 05       	cpc	r19, r1
    1740:	81 f4       	brne	.+32     	; 0x1762 <_ZN5Print5printEli+0x36>
    1742:	dc 01       	movw	r26, r24
    1744:	ed 91       	ld	r30, X+
    1746:	fc 91       	ld	r31, X
    1748:	01 90       	ld	r0, Z+
    174a:	f0 81       	ld	r31, Z
    174c:	e0 2d       	mov	r30, r0
    174e:	64 2f       	mov	r22, r20
    1750:	df 91       	pop	r29
    1752:	cf 91       	pop	r28
    1754:	1f 91       	pop	r17
    1756:	0f 91       	pop	r16
    1758:	ff 90       	pop	r15
    175a:	ef 90       	pop	r14
    175c:	df 90       	pop	r13
    175e:	cf 90       	pop	r12
    1760:	09 94       	ijmp
    1762:	2a 30       	cpi	r18, 0x0A	; 10
    1764:	31 05       	cpc	r19, r1
    1766:	01 f5       	brne	.+64     	; 0x17a8 <_ZN5Print5printEli+0x7c>
    1768:	77 ff       	sbrs	r23, 7
    176a:	1d c0       	rjmp	.+58     	; 0x17a6 <_ZN5Print5printEli+0x7a>
    176c:	6a 01       	movw	r12, r20
    176e:	7b 01       	movw	r14, r22
    1770:	ec 01       	movw	r28, r24
    1772:	6d e2       	ldi	r22, 0x2D	; 45
    1774:	0e 94 46 0b 	call	0x168c	; 0x168c <_ZN5Print5printEc>
    1778:	8c 01       	movw	r16, r24
    177a:	44 27       	eor	r20, r20
    177c:	55 27       	eor	r21, r21
    177e:	ba 01       	movw	r22, r20
    1780:	4c 19       	sub	r20, r12
    1782:	5d 09       	sbc	r21, r13
    1784:	6e 09       	sbc	r22, r14
    1786:	7f 09       	sbc	r23, r15
    1788:	2a e0       	ldi	r18, 0x0A	; 10
    178a:	ce 01       	movw	r24, r28
    178c:	0e 94 4d 0b 	call	0x169a	; 0x169a <_ZN5Print11printNumberEmh>
    1790:	80 0f       	add	r24, r16
    1792:	91 1f       	adc	r25, r17
    1794:	df 91       	pop	r29
    1796:	cf 91       	pop	r28
    1798:	1f 91       	pop	r17
    179a:	0f 91       	pop	r16
    179c:	ff 90       	pop	r15
    179e:	ef 90       	pop	r14
    17a0:	df 90       	pop	r13
    17a2:	cf 90       	pop	r12
    17a4:	08 95       	ret
    17a6:	2a e0       	ldi	r18, 0x0A	; 10
    17a8:	df 91       	pop	r29
    17aa:	cf 91       	pop	r28
    17ac:	1f 91       	pop	r17
    17ae:	0f 91       	pop	r16
    17b0:	ff 90       	pop	r15
    17b2:	ef 90       	pop	r14
    17b4:	df 90       	pop	r13
    17b6:	cf 90       	pop	r12
    17b8:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <_ZN5Print11printNumberEmh>

000017bc <_ZN5Print5printEii>:
    17bc:	9a 01       	movw	r18, r20
    17be:	ab 01       	movw	r20, r22
    17c0:	77 0f       	add	r23, r23
    17c2:	66 0b       	sbc	r22, r22
    17c4:	77 0b       	sbc	r23, r23
    17c6:	0c 94 96 0b 	jmp	0x172c	; 0x172c <_ZN5Print5printEli>

000017ca <__vector_16>:
    17ca:	1f 92       	push	r1
    17cc:	0f 92       	push	r0
    17ce:	0f b6       	in	r0, 0x3f	; 63
    17d0:	0f 92       	push	r0
    17d2:	11 24       	eor	r1, r1
    17d4:	2f 93       	push	r18
    17d6:	3f 93       	push	r19
    17d8:	8f 93       	push	r24
    17da:	9f 93       	push	r25
    17dc:	af 93       	push	r26
    17de:	bf 93       	push	r27
    17e0:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <timer0_millis>
    17e4:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <timer0_millis+0x1>
    17e8:	a0 91 26 03 	lds	r26, 0x0326	; 0x800326 <timer0_millis+0x2>
    17ec:	b0 91 27 03 	lds	r27, 0x0327	; 0x800327 <timer0_millis+0x3>
    17f0:	30 91 23 03 	lds	r19, 0x0323	; 0x800323 <timer0_fract>
    17f4:	23 e0       	ldi	r18, 0x03	; 3
    17f6:	23 0f       	add	r18, r19
    17f8:	2d 37       	cpi	r18, 0x7D	; 125
    17fa:	20 f4       	brcc	.+8      	; 0x1804 <__vector_16+0x3a>
    17fc:	01 96       	adiw	r24, 0x01	; 1
    17fe:	a1 1d       	adc	r26, r1
    1800:	b1 1d       	adc	r27, r1
    1802:	05 c0       	rjmp	.+10     	; 0x180e <__vector_16+0x44>
    1804:	26 e8       	ldi	r18, 0x86	; 134
    1806:	23 0f       	add	r18, r19
    1808:	02 96       	adiw	r24, 0x02	; 2
    180a:	a1 1d       	adc	r26, r1
    180c:	b1 1d       	adc	r27, r1
    180e:	20 93 23 03 	sts	0x0323, r18	; 0x800323 <timer0_fract>
    1812:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <timer0_millis>
    1816:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <timer0_millis+0x1>
    181a:	a0 93 26 03 	sts	0x0326, r26	; 0x800326 <timer0_millis+0x2>
    181e:	b0 93 27 03 	sts	0x0327, r27	; 0x800327 <timer0_millis+0x3>
    1822:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <timer0_overflow_count>
    1826:	90 91 29 03 	lds	r25, 0x0329	; 0x800329 <timer0_overflow_count+0x1>
    182a:	a0 91 2a 03 	lds	r26, 0x032A	; 0x80032a <timer0_overflow_count+0x2>
    182e:	b0 91 2b 03 	lds	r27, 0x032B	; 0x80032b <timer0_overflow_count+0x3>
    1832:	01 96       	adiw	r24, 0x01	; 1
    1834:	a1 1d       	adc	r26, r1
    1836:	b1 1d       	adc	r27, r1
    1838:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <timer0_overflow_count>
    183c:	90 93 29 03 	sts	0x0329, r25	; 0x800329 <timer0_overflow_count+0x1>
    1840:	a0 93 2a 03 	sts	0x032A, r26	; 0x80032a <timer0_overflow_count+0x2>
    1844:	b0 93 2b 03 	sts	0x032B, r27	; 0x80032b <timer0_overflow_count+0x3>
    1848:	bf 91       	pop	r27
    184a:	af 91       	pop	r26
    184c:	9f 91       	pop	r25
    184e:	8f 91       	pop	r24
    1850:	3f 91       	pop	r19
    1852:	2f 91       	pop	r18
    1854:	0f 90       	pop	r0
    1856:	0f be       	out	0x3f, r0	; 63
    1858:	0f 90       	pop	r0
    185a:	1f 90       	pop	r1
    185c:	18 95       	reti

0000185e <millis>:
    185e:	2f b7       	in	r18, 0x3f	; 63
    1860:	f8 94       	cli
    1862:	60 91 24 03 	lds	r22, 0x0324	; 0x800324 <timer0_millis>
    1866:	70 91 25 03 	lds	r23, 0x0325	; 0x800325 <timer0_millis+0x1>
    186a:	80 91 26 03 	lds	r24, 0x0326	; 0x800326 <timer0_millis+0x2>
    186e:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <timer0_millis+0x3>
    1872:	2f bf       	out	0x3f, r18	; 63
    1874:	08 95       	ret

00001876 <micros>:
    1876:	3f b7       	in	r19, 0x3f	; 63
    1878:	f8 94       	cli
    187a:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <timer0_overflow_count>
    187e:	90 91 29 03 	lds	r25, 0x0329	; 0x800329 <timer0_overflow_count+0x1>
    1882:	a0 91 2a 03 	lds	r26, 0x032A	; 0x80032a <timer0_overflow_count+0x2>
    1886:	b0 91 2b 03 	lds	r27, 0x032B	; 0x80032b <timer0_overflow_count+0x3>
    188a:	26 b5       	in	r18, 0x26	; 38
    188c:	a8 9b       	sbis	0x15, 0	; 21
    188e:	05 c0       	rjmp	.+10     	; 0x189a <micros+0x24>
    1890:	2f 3f       	cpi	r18, 0xFF	; 255
    1892:	19 f0       	breq	.+6      	; 0x189a <micros+0x24>
    1894:	01 96       	adiw	r24, 0x01	; 1
    1896:	a1 1d       	adc	r26, r1
    1898:	b1 1d       	adc	r27, r1
    189a:	3f bf       	out	0x3f, r19	; 63
    189c:	ba 2f       	mov	r27, r26
    189e:	a9 2f       	mov	r26, r25
    18a0:	98 2f       	mov	r25, r24
    18a2:	88 27       	eor	r24, r24
    18a4:	82 0f       	add	r24, r18
    18a6:	91 1d       	adc	r25, r1
    18a8:	a1 1d       	adc	r26, r1
    18aa:	b1 1d       	adc	r27, r1
    18ac:	bc 01       	movw	r22, r24
    18ae:	cd 01       	movw	r24, r26
    18b0:	42 e0       	ldi	r20, 0x02	; 2
    18b2:	66 0f       	add	r22, r22
    18b4:	77 1f       	adc	r23, r23
    18b6:	88 1f       	adc	r24, r24
    18b8:	99 1f       	adc	r25, r25
    18ba:	4a 95       	dec	r20
    18bc:	d1 f7       	brne	.-12     	; 0x18b2 <micros+0x3c>
    18be:	08 95       	ret

000018c0 <delay>:
    18c0:	8f 92       	push	r8
    18c2:	9f 92       	push	r9
    18c4:	af 92       	push	r10
    18c6:	bf 92       	push	r11
    18c8:	cf 92       	push	r12
    18ca:	df 92       	push	r13
    18cc:	ef 92       	push	r14
    18ce:	ff 92       	push	r15
    18d0:	6b 01       	movw	r12, r22
    18d2:	7c 01       	movw	r14, r24
    18d4:	0e 94 3b 0c 	call	0x1876	; 0x1876 <micros>
    18d8:	4b 01       	movw	r8, r22
    18da:	5c 01       	movw	r10, r24
    18dc:	c1 14       	cp	r12, r1
    18de:	d1 04       	cpc	r13, r1
    18e0:	e1 04       	cpc	r14, r1
    18e2:	f1 04       	cpc	r15, r1
    18e4:	01 f1       	breq	.+64     	; 0x1926 <delay+0x66>
    18e6:	0e 94 fd 15 	call	0x2bfa	; 0x2bfa <yield>
    18ea:	0e 94 3b 0c 	call	0x1876	; 0x1876 <micros>
    18ee:	dc 01       	movw	r26, r24
    18f0:	cb 01       	movw	r24, r22
    18f2:	88 19       	sub	r24, r8
    18f4:	99 09       	sbc	r25, r9
    18f6:	aa 09       	sbc	r26, r10
    18f8:	bb 09       	sbc	r27, r11
    18fa:	88 3e       	cpi	r24, 0xE8	; 232
    18fc:	93 40       	sbci	r25, 0x03	; 3
    18fe:	a1 05       	cpc	r26, r1
    1900:	b1 05       	cpc	r27, r1
    1902:	60 f3       	brcs	.-40     	; 0x18dc <delay+0x1c>
    1904:	21 e0       	ldi	r18, 0x01	; 1
    1906:	c2 1a       	sub	r12, r18
    1908:	d1 08       	sbc	r13, r1
    190a:	e1 08       	sbc	r14, r1
    190c:	f1 08       	sbc	r15, r1
    190e:	88 ee       	ldi	r24, 0xE8	; 232
    1910:	88 0e       	add	r8, r24
    1912:	83 e0       	ldi	r24, 0x03	; 3
    1914:	98 1e       	adc	r9, r24
    1916:	a1 1c       	adc	r10, r1
    1918:	b1 1c       	adc	r11, r1
    191a:	c1 14       	cp	r12, r1
    191c:	d1 04       	cpc	r13, r1
    191e:	e1 04       	cpc	r14, r1
    1920:	f1 04       	cpc	r15, r1
    1922:	19 f7       	brne	.-58     	; 0x18ea <delay+0x2a>
    1924:	db cf       	rjmp	.-74     	; 0x18dc <delay+0x1c>
    1926:	ff 90       	pop	r15
    1928:	ef 90       	pop	r14
    192a:	df 90       	pop	r13
    192c:	cf 90       	pop	r12
    192e:	bf 90       	pop	r11
    1930:	af 90       	pop	r10
    1932:	9f 90       	pop	r9
    1934:	8f 90       	pop	r8
    1936:	08 95       	ret

00001938 <delayMicroseconds>:
    1938:	82 30       	cpi	r24, 0x02	; 2
    193a:	91 05       	cpc	r25, r1
    193c:	38 f0       	brcs	.+14     	; 0x194c <delayMicroseconds+0x14>
    193e:	88 0f       	add	r24, r24
    1940:	99 1f       	adc	r25, r25
    1942:	88 0f       	add	r24, r24
    1944:	99 1f       	adc	r25, r25
    1946:	05 97       	sbiw	r24, 0x05	; 5
    1948:	01 97       	sbiw	r24, 0x01	; 1
    194a:	f1 f7       	brne	.-4      	; 0x1948 <delayMicroseconds+0x10>
    194c:	08 95       	ret

0000194e <init>:
    194e:	78 94       	sei
    1950:	84 b5       	in	r24, 0x24	; 36
    1952:	82 60       	ori	r24, 0x02	; 2
    1954:	84 bd       	out	0x24, r24	; 36
    1956:	84 b5       	in	r24, 0x24	; 36
    1958:	81 60       	ori	r24, 0x01	; 1
    195a:	84 bd       	out	0x24, r24	; 36
    195c:	85 b5       	in	r24, 0x25	; 37
    195e:	82 60       	ori	r24, 0x02	; 2
    1960:	85 bd       	out	0x25, r24	; 37
    1962:	85 b5       	in	r24, 0x25	; 37
    1964:	81 60       	ori	r24, 0x01	; 1
    1966:	85 bd       	out	0x25, r24	; 37
    1968:	ee e6       	ldi	r30, 0x6E	; 110
    196a:	f0 e0       	ldi	r31, 0x00	; 0
    196c:	80 81       	ld	r24, Z
    196e:	81 60       	ori	r24, 0x01	; 1
    1970:	80 83       	st	Z, r24
    1972:	e1 e8       	ldi	r30, 0x81	; 129
    1974:	f0 e0       	ldi	r31, 0x00	; 0
    1976:	10 82       	st	Z, r1
    1978:	80 81       	ld	r24, Z
    197a:	82 60       	ori	r24, 0x02	; 2
    197c:	80 83       	st	Z, r24
    197e:	80 81       	ld	r24, Z
    1980:	81 60       	ori	r24, 0x01	; 1
    1982:	80 83       	st	Z, r24
    1984:	e0 e8       	ldi	r30, 0x80	; 128
    1986:	f0 e0       	ldi	r31, 0x00	; 0
    1988:	80 81       	ld	r24, Z
    198a:	81 60       	ori	r24, 0x01	; 1
    198c:	80 83       	st	Z, r24
    198e:	e1 eb       	ldi	r30, 0xB1	; 177
    1990:	f0 e0       	ldi	r31, 0x00	; 0
    1992:	80 81       	ld	r24, Z
    1994:	84 60       	ori	r24, 0x04	; 4
    1996:	80 83       	st	Z, r24
    1998:	e0 eb       	ldi	r30, 0xB0	; 176
    199a:	f0 e0       	ldi	r31, 0x00	; 0
    199c:	80 81       	ld	r24, Z
    199e:	81 60       	ori	r24, 0x01	; 1
    19a0:	80 83       	st	Z, r24
    19a2:	ea e7       	ldi	r30, 0x7A	; 122
    19a4:	f0 e0       	ldi	r31, 0x00	; 0
    19a6:	80 81       	ld	r24, Z
    19a8:	84 60       	ori	r24, 0x04	; 4
    19aa:	80 83       	st	Z, r24
    19ac:	80 81       	ld	r24, Z
    19ae:	82 60       	ori	r24, 0x02	; 2
    19b0:	80 83       	st	Z, r24
    19b2:	80 81       	ld	r24, Z
    19b4:	81 60       	ori	r24, 0x01	; 1
    19b6:	80 83       	st	Z, r24
    19b8:	80 81       	ld	r24, Z
    19ba:	80 68       	ori	r24, 0x80	; 128
    19bc:	80 83       	st	Z, r24
    19be:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    19c2:	08 95       	ret

000019c4 <turnOffPWM>:
    19c4:	83 30       	cpi	r24, 0x03	; 3
    19c6:	81 f0       	breq	.+32     	; 0x19e8 <turnOffPWM+0x24>
    19c8:	28 f4       	brcc	.+10     	; 0x19d4 <turnOffPWM+0x10>
    19ca:	81 30       	cpi	r24, 0x01	; 1
    19cc:	99 f0       	breq	.+38     	; 0x19f4 <turnOffPWM+0x30>
    19ce:	82 30       	cpi	r24, 0x02	; 2
    19d0:	a1 f0       	breq	.+40     	; 0x19fa <turnOffPWM+0x36>
    19d2:	08 95       	ret
    19d4:	87 30       	cpi	r24, 0x07	; 7
    19d6:	a9 f0       	breq	.+42     	; 0x1a02 <turnOffPWM+0x3e>
    19d8:	88 30       	cpi	r24, 0x08	; 8
    19da:	b9 f0       	breq	.+46     	; 0x1a0a <turnOffPWM+0x46>
    19dc:	84 30       	cpi	r24, 0x04	; 4
    19de:	d1 f4       	brne	.+52     	; 0x1a14 <turnOffPWM+0x50>
    19e0:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    19e4:	8f 7d       	andi	r24, 0xDF	; 223
    19e6:	03 c0       	rjmp	.+6      	; 0x19ee <turnOffPWM+0x2a>
    19e8:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    19ec:	8f 77       	andi	r24, 0x7F	; 127
    19ee:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    19f2:	08 95       	ret
    19f4:	84 b5       	in	r24, 0x24	; 36
    19f6:	8f 77       	andi	r24, 0x7F	; 127
    19f8:	02 c0       	rjmp	.+4      	; 0x19fe <turnOffPWM+0x3a>
    19fa:	84 b5       	in	r24, 0x24	; 36
    19fc:	8f 7d       	andi	r24, 0xDF	; 223
    19fe:	84 bd       	out	0x24, r24	; 36
    1a00:	08 95       	ret
    1a02:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1a06:	8f 77       	andi	r24, 0x7F	; 127
    1a08:	03 c0       	rjmp	.+6      	; 0x1a10 <turnOffPWM+0x4c>
    1a0a:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1a0e:	8f 7d       	andi	r24, 0xDF	; 223
    1a10:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1a14:	08 95       	ret

00001a16 <pinMode>:
    1a16:	cf 93       	push	r28
    1a18:	df 93       	push	r29
    1a1a:	90 e0       	ldi	r25, 0x00	; 0
    1a1c:	fc 01       	movw	r30, r24
    1a1e:	e8 5e       	subi	r30, 0xE8	; 232
    1a20:	fd 4f       	sbci	r31, 0xFD	; 253
    1a22:	24 91       	lpm	r18, Z
    1a24:	fc 01       	movw	r30, r24
    1a26:	e4 5d       	subi	r30, 0xD4	; 212
    1a28:	fd 4f       	sbci	r31, 0xFD	; 253
    1a2a:	84 91       	lpm	r24, Z
    1a2c:	88 23       	and	r24, r24
    1a2e:	61 f1       	breq	.+88     	; 0x1a88 <pinMode+0x72>
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	88 0f       	add	r24, r24
    1a34:	99 1f       	adc	r25, r25
    1a36:	fc 01       	movw	r30, r24
    1a38:	ec 5a       	subi	r30, 0xAC	; 172
    1a3a:	fd 4f       	sbci	r31, 0xFD	; 253
    1a3c:	c5 91       	lpm	r28, Z+
    1a3e:	d4 91       	lpm	r29, Z
    1a40:	fc 01       	movw	r30, r24
    1a42:	e6 5b       	subi	r30, 0xB6	; 182
    1a44:	fd 4f       	sbci	r31, 0xFD	; 253
    1a46:	a5 91       	lpm	r26, Z+
    1a48:	b4 91       	lpm	r27, Z
    1a4a:	61 11       	cpse	r22, r1
    1a4c:	09 c0       	rjmp	.+18     	; 0x1a60 <pinMode+0x4a>
    1a4e:	9f b7       	in	r25, 0x3f	; 63
    1a50:	f8 94       	cli
    1a52:	88 81       	ld	r24, Y
    1a54:	20 95       	com	r18
    1a56:	82 23       	and	r24, r18
    1a58:	88 83       	st	Y, r24
    1a5a:	ec 91       	ld	r30, X
    1a5c:	2e 23       	and	r18, r30
    1a5e:	0b c0       	rjmp	.+22     	; 0x1a76 <pinMode+0x60>
    1a60:	62 30       	cpi	r22, 0x02	; 2
    1a62:	61 f4       	brne	.+24     	; 0x1a7c <pinMode+0x66>
    1a64:	9f b7       	in	r25, 0x3f	; 63
    1a66:	f8 94       	cli
    1a68:	88 81       	ld	r24, Y
    1a6a:	32 2f       	mov	r19, r18
    1a6c:	30 95       	com	r19
    1a6e:	83 23       	and	r24, r19
    1a70:	88 83       	st	Y, r24
    1a72:	ec 91       	ld	r30, X
    1a74:	2e 2b       	or	r18, r30
    1a76:	2c 93       	st	X, r18
    1a78:	9f bf       	out	0x3f, r25	; 63
    1a7a:	06 c0       	rjmp	.+12     	; 0x1a88 <pinMode+0x72>
    1a7c:	8f b7       	in	r24, 0x3f	; 63
    1a7e:	f8 94       	cli
    1a80:	e8 81       	ld	r30, Y
    1a82:	2e 2b       	or	r18, r30
    1a84:	28 83       	st	Y, r18
    1a86:	8f bf       	out	0x3f, r24	; 63
    1a88:	df 91       	pop	r29
    1a8a:	cf 91       	pop	r28
    1a8c:	08 95       	ret

00001a8e <digitalWrite>:
    1a8e:	1f 93       	push	r17
    1a90:	cf 93       	push	r28
    1a92:	df 93       	push	r29
    1a94:	28 2f       	mov	r18, r24
    1a96:	30 e0       	ldi	r19, 0x00	; 0
    1a98:	f9 01       	movw	r30, r18
    1a9a:	ec 5f       	subi	r30, 0xFC	; 252
    1a9c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a9e:	84 91       	lpm	r24, Z
    1aa0:	f9 01       	movw	r30, r18
    1aa2:	e8 5e       	subi	r30, 0xE8	; 232
    1aa4:	fd 4f       	sbci	r31, 0xFD	; 253
    1aa6:	d4 91       	lpm	r29, Z
    1aa8:	f9 01       	movw	r30, r18
    1aaa:	e4 5d       	subi	r30, 0xD4	; 212
    1aac:	fd 4f       	sbci	r31, 0xFD	; 253
    1aae:	c4 91       	lpm	r28, Z
    1ab0:	cc 23       	and	r28, r28
    1ab2:	c1 f0       	breq	.+48     	; 0x1ae4 <digitalWrite+0x56>
    1ab4:	16 2f       	mov	r17, r22
    1ab6:	81 11       	cpse	r24, r1
    1ab8:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <turnOffPWM>
    1abc:	ec 2f       	mov	r30, r28
    1abe:	f0 e0       	ldi	r31, 0x00	; 0
    1ac0:	ee 0f       	add	r30, r30
    1ac2:	ff 1f       	adc	r31, r31
    1ac4:	e6 5b       	subi	r30, 0xB6	; 182
    1ac6:	fd 4f       	sbci	r31, 0xFD	; 253
    1ac8:	a5 91       	lpm	r26, Z+
    1aca:	b4 91       	lpm	r27, Z
    1acc:	9f b7       	in	r25, 0x3f	; 63
    1ace:	f8 94       	cli
    1ad0:	11 11       	cpse	r17, r1
    1ad2:	04 c0       	rjmp	.+8      	; 0x1adc <digitalWrite+0x4e>
    1ad4:	8c 91       	ld	r24, X
    1ad6:	d0 95       	com	r29
    1ad8:	d8 23       	and	r29, r24
    1ada:	02 c0       	rjmp	.+4      	; 0x1ae0 <digitalWrite+0x52>
    1adc:	ec 91       	ld	r30, X
    1ade:	de 2b       	or	r29, r30
    1ae0:	dc 93       	st	X, r29
    1ae2:	9f bf       	out	0x3f, r25	; 63
    1ae4:	df 91       	pop	r29
    1ae6:	cf 91       	pop	r28
    1ae8:	1f 91       	pop	r17
    1aea:	08 95       	ret

00001aec <digitalRead>:
    1aec:	cf 93       	push	r28
    1aee:	df 93       	push	r29
    1af0:	28 2f       	mov	r18, r24
    1af2:	30 e0       	ldi	r19, 0x00	; 0
    1af4:	f9 01       	movw	r30, r18
    1af6:	ec 5f       	subi	r30, 0xFC	; 252
    1af8:	fd 4f       	sbci	r31, 0xFD	; 253
    1afa:	84 91       	lpm	r24, Z
    1afc:	f9 01       	movw	r30, r18
    1afe:	e8 5e       	subi	r30, 0xE8	; 232
    1b00:	fd 4f       	sbci	r31, 0xFD	; 253
    1b02:	d4 91       	lpm	r29, Z
    1b04:	f9 01       	movw	r30, r18
    1b06:	e4 5d       	subi	r30, 0xD4	; 212
    1b08:	fd 4f       	sbci	r31, 0xFD	; 253
    1b0a:	c4 91       	lpm	r28, Z
    1b0c:	cc 23       	and	r28, r28
    1b0e:	91 f0       	breq	.+36     	; 0x1b34 <digitalRead+0x48>
    1b10:	81 11       	cpse	r24, r1
    1b12:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <turnOffPWM>
    1b16:	ec 2f       	mov	r30, r28
    1b18:	f0 e0       	ldi	r31, 0x00	; 0
    1b1a:	ee 0f       	add	r30, r30
    1b1c:	ff 1f       	adc	r31, r31
    1b1e:	e0 5c       	subi	r30, 0xC0	; 192
    1b20:	fd 4f       	sbci	r31, 0xFD	; 253
    1b22:	a5 91       	lpm	r26, Z+
    1b24:	b4 91       	lpm	r27, Z
    1b26:	ec 91       	ld	r30, X
    1b28:	ed 23       	and	r30, r29
    1b2a:	81 e0       	ldi	r24, 0x01	; 1
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	21 f4       	brne	.+8      	; 0x1b38 <digitalRead+0x4c>
    1b30:	80 e0       	ldi	r24, 0x00	; 0
    1b32:	02 c0       	rjmp	.+4      	; 0x1b38 <digitalRead+0x4c>
    1b34:	80 e0       	ldi	r24, 0x00	; 0
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	df 91       	pop	r29
    1b3a:	cf 91       	pop	r28
    1b3c:	08 95       	ret

00001b3e <_ZN8SPIClass8transferEh>:
    1b3e:	8e bd       	out	0x2e, r24	; 46
    1b40:	00 00       	nop
    1b42:	0d b4       	in	r0, 0x2d	; 45
    1b44:	07 fe       	sbrs	r0, 7
    1b46:	fd cf       	rjmp	.-6      	; 0x1b42 <_ZN8SPIClass8transferEh+0x4>
    1b48:	8e b5       	in	r24, 0x2e	; 46
    1b4a:	08 95       	ret

00001b4c <_ZN7MCP25158startSPIEv>:
    1b4c:	fc 01       	movw	r30, r24
    1b4e:	80 91 2e 03 	lds	r24, 0x032E	; 0x80032e <_ZN8SPIClass13interruptModeE>
    1b52:	88 23       	and	r24, r24
    1b54:	99 f0       	breq	.+38     	; 0x1b7c <_ZN7MCP25158startSPIEv+0x30>
    1b56:	3f b7       	in	r19, 0x3f	; 63
    1b58:	f8 94       	cli
    1b5a:	80 91 2e 03 	lds	r24, 0x032E	; 0x80032e <_ZN8SPIClass13interruptModeE>
    1b5e:	81 30       	cpi	r24, 0x01	; 1
    1b60:	59 f4       	brne	.+22     	; 0x1b78 <_ZN7MCP25158startSPIEv+0x2c>
    1b62:	8d b3       	in	r24, 0x1d	; 29
    1b64:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <_ZN8SPIClass13interruptSaveE>
    1b68:	2d b3       	in	r18, 0x1d	; 29
    1b6a:	90 91 2d 03 	lds	r25, 0x032D	; 0x80032d <_ZN8SPIClass13interruptMaskE>
    1b6e:	90 95       	com	r25
    1b70:	92 23       	and	r25, r18
    1b72:	9d bb       	out	0x1d, r25	; 29
    1b74:	3f bf       	out	0x3f, r19	; 63
    1b76:	02 c0       	rjmp	.+4      	; 0x1b7c <_ZN7MCP25158startSPIEv+0x30>
    1b78:	30 93 2c 03 	sts	0x032C, r19	; 0x80032c <_ZN8SPIClass13interruptSaveE>
    1b7c:	80 e5       	ldi	r24, 0x50	; 80
    1b7e:	8c bd       	out	0x2c, r24	; 44
    1b80:	81 e0       	ldi	r24, 0x01	; 1
    1b82:	8d bd       	out	0x2d, r24	; 45
    1b84:	60 e0       	ldi	r22, 0x00	; 0
    1b86:	80 81       	ld	r24, Z
    1b88:	0c 94 47 0d 	jmp	0x1a8e	; 0x1a8e <digitalWrite>

00001b8c <_ZN7MCP25156endSPIEv>:
    1b8c:	61 e0       	ldi	r22, 0x01	; 1
    1b8e:	fc 01       	movw	r30, r24
    1b90:	80 81       	ld	r24, Z
    1b92:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <digitalWrite>
    1b96:	80 91 2e 03 	lds	r24, 0x032E	; 0x80032e <_ZN8SPIClass13interruptModeE>
    1b9a:	88 23       	and	r24, r24
    1b9c:	61 f0       	breq	.+24     	; 0x1bb6 <_ZN7MCP25156endSPIEv+0x2a>
    1b9e:	9f b7       	in	r25, 0x3f	; 63
    1ba0:	f8 94       	cli
    1ba2:	20 91 2e 03 	lds	r18, 0x032E	; 0x80032e <_ZN8SPIClass13interruptModeE>
    1ba6:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <_ZN8SPIClass13interruptSaveE>
    1baa:	21 30       	cpi	r18, 0x01	; 1
    1bac:	19 f4       	brne	.+6      	; 0x1bb4 <_ZN7MCP25156endSPIEv+0x28>
    1bae:	8d bb       	out	0x1d, r24	; 29
    1bb0:	9f bf       	out	0x3f, r25	; 63
    1bb2:	08 95       	ret
    1bb4:	8f bf       	out	0x3f, r24	; 63
    1bb6:	08 95       	ret

00001bb8 <_ZN7MCP2515C1Eh>:
    1bb8:	1f 93       	push	r17
    1bba:	cf 93       	push	r28
    1bbc:	df 93       	push	r29
    1bbe:	ec 01       	movw	r28, r24
    1bc0:	16 2f       	mov	r17, r22
    1bc2:	0e 94 c3 14 	call	0x2986	; 0x2986 <_ZN8SPIClass5beginEv>
    1bc6:	18 83       	st	Y, r17
    1bc8:	61 e0       	ldi	r22, 0x01	; 1
    1bca:	81 2f       	mov	r24, r17
    1bcc:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
    1bd0:	ce 01       	movw	r24, r28
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	1f 91       	pop	r17
    1bd8:	0c 94 c6 0d 	jmp	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>

00001bdc <_ZN7MCP251512readRegisterENS_8REGISTERE>:
    1bdc:	1f 93       	push	r17
    1bde:	cf 93       	push	r28
    1be0:	df 93       	push	r29
    1be2:	ec 01       	movw	r28, r24
    1be4:	16 2f       	mov	r17, r22
    1be6:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <_ZN7MCP25158startSPIEv>
    1bea:	83 e0       	ldi	r24, 0x03	; 3
    1bec:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1bf0:	81 2f       	mov	r24, r17
    1bf2:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1bf6:	80 e0       	ldi	r24, 0x00	; 0
    1bf8:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1bfc:	18 2f       	mov	r17, r24
    1bfe:	ce 01       	movw	r24, r28
    1c00:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>
    1c04:	81 2f       	mov	r24, r17
    1c06:	df 91       	pop	r29
    1c08:	cf 91       	pop	r28
    1c0a:	1f 91       	pop	r17
    1c0c:	08 95       	ret

00001c0e <_ZN7MCP251513readRegistersENS_8REGISTEREPhh>:
    1c0e:	df 92       	push	r13
    1c10:	ef 92       	push	r14
    1c12:	ff 92       	push	r15
    1c14:	0f 93       	push	r16
    1c16:	1f 93       	push	r17
    1c18:	cf 93       	push	r28
    1c1a:	df 93       	push	r29
    1c1c:	8c 01       	movw	r16, r24
    1c1e:	c6 2f       	mov	r28, r22
    1c20:	d4 2e       	mov	r13, r20
    1c22:	e5 2e       	mov	r14, r21
    1c24:	f2 2e       	mov	r15, r18
    1c26:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <_ZN7MCP25158startSPIEv>
    1c2a:	83 e0       	ldi	r24, 0x03	; 3
    1c2c:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1c30:	8c 2f       	mov	r24, r28
    1c32:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1c36:	cd 2d       	mov	r28, r13
    1c38:	de 2d       	mov	r29, r14
    1c3a:	ce 01       	movw	r24, r28
    1c3c:	8f 0d       	add	r24, r15
    1c3e:	91 1d       	adc	r25, r1
    1c40:	7c 01       	movw	r14, r24
    1c42:	ce 15       	cp	r28, r14
    1c44:	df 05       	cpc	r29, r15
    1c46:	29 f0       	breq	.+10     	; 0x1c52 <_ZN7MCP251513readRegistersENS_8REGISTEREPhh+0x44>
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1c4e:	89 93       	st	Y+, r24
    1c50:	f8 cf       	rjmp	.-16     	; 0x1c42 <_ZN7MCP251513readRegistersENS_8REGISTEREPhh+0x34>
    1c52:	c8 01       	movw	r24, r16
    1c54:	df 91       	pop	r29
    1c56:	cf 91       	pop	r28
    1c58:	1f 91       	pop	r17
    1c5a:	0f 91       	pop	r16
    1c5c:	ff 90       	pop	r15
    1c5e:	ef 90       	pop	r14
    1c60:	df 90       	pop	r13
    1c62:	0c 94 c6 0d 	jmp	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>

00001c66 <_ZN7MCP251511setRegisterENS_8REGISTEREh>:
    1c66:	0f 93       	push	r16
    1c68:	1f 93       	push	r17
    1c6a:	cf 93       	push	r28
    1c6c:	df 93       	push	r29
    1c6e:	ec 01       	movw	r28, r24
    1c70:	06 2f       	mov	r16, r22
    1c72:	14 2f       	mov	r17, r20
    1c74:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <_ZN7MCP25158startSPIEv>
    1c78:	82 e0       	ldi	r24, 0x02	; 2
    1c7a:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1c7e:	80 2f       	mov	r24, r16
    1c80:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1c84:	81 2f       	mov	r24, r17
    1c86:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1c8a:	ce 01       	movw	r24, r28
    1c8c:	df 91       	pop	r29
    1c8e:	cf 91       	pop	r28
    1c90:	1f 91       	pop	r17
    1c92:	0f 91       	pop	r16
    1c94:	0c 94 c6 0d 	jmp	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>

00001c98 <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh>:
    1c98:	df 92       	push	r13
    1c9a:	ef 92       	push	r14
    1c9c:	ff 92       	push	r15
    1c9e:	0f 93       	push	r16
    1ca0:	1f 93       	push	r17
    1ca2:	cf 93       	push	r28
    1ca4:	df 93       	push	r29
    1ca6:	8c 01       	movw	r16, r24
    1ca8:	c6 2f       	mov	r28, r22
    1caa:	d4 2e       	mov	r13, r20
    1cac:	e5 2e       	mov	r14, r21
    1cae:	f2 2e       	mov	r15, r18
    1cb0:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <_ZN7MCP25158startSPIEv>
    1cb4:	82 e0       	ldi	r24, 0x02	; 2
    1cb6:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1cba:	8c 2f       	mov	r24, r28
    1cbc:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1cc0:	cd 2d       	mov	r28, r13
    1cc2:	de 2d       	mov	r29, r14
    1cc4:	ce 01       	movw	r24, r28
    1cc6:	8f 0d       	add	r24, r15
    1cc8:	91 1d       	adc	r25, r1
    1cca:	7c 01       	movw	r14, r24
    1ccc:	ce 15       	cp	r28, r14
    1cce:	df 05       	cpc	r29, r15
    1cd0:	21 f0       	breq	.+8      	; 0x1cda <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh+0x42>
    1cd2:	89 91       	ld	r24, Y+
    1cd4:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1cd8:	f9 cf       	rjmp	.-14     	; 0x1ccc <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh+0x34>
    1cda:	c8 01       	movw	r24, r16
    1cdc:	df 91       	pop	r29
    1cde:	cf 91       	pop	r28
    1ce0:	1f 91       	pop	r17
    1ce2:	0f 91       	pop	r16
    1ce4:	ff 90       	pop	r15
    1ce6:	ef 90       	pop	r14
    1ce8:	df 90       	pop	r13
    1cea:	0c 94 c6 0d 	jmp	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>

00001cee <_ZN7MCP251514modifyRegisterENS_8REGISTEREhh>:
    1cee:	ff 92       	push	r15
    1cf0:	0f 93       	push	r16
    1cf2:	1f 93       	push	r17
    1cf4:	cf 93       	push	r28
    1cf6:	df 93       	push	r29
    1cf8:	ec 01       	movw	r28, r24
    1cfa:	f6 2e       	mov	r15, r22
    1cfc:	04 2f       	mov	r16, r20
    1cfe:	12 2f       	mov	r17, r18
    1d00:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <_ZN7MCP25158startSPIEv>
    1d04:	85 e0       	ldi	r24, 0x05	; 5
    1d06:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1d0a:	8f 2d       	mov	r24, r15
    1d0c:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1d10:	80 2f       	mov	r24, r16
    1d12:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1d16:	81 2f       	mov	r24, r17
    1d18:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1d1c:	ce 01       	movw	r24, r28
    1d1e:	df 91       	pop	r29
    1d20:	cf 91       	pop	r28
    1d22:	1f 91       	pop	r17
    1d24:	0f 91       	pop	r16
    1d26:	ff 90       	pop	r15
    1d28:	0c 94 c6 0d 	jmp	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>

00001d2c <_ZN7MCP25159getStatusEv>:
    1d2c:	1f 93       	push	r17
    1d2e:	cf 93       	push	r28
    1d30:	df 93       	push	r29
    1d32:	ec 01       	movw	r28, r24
    1d34:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <_ZN7MCP25158startSPIEv>
    1d38:	80 ea       	ldi	r24, 0xA0	; 160
    1d3a:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1d3e:	80 e0       	ldi	r24, 0x00	; 0
    1d40:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    1d44:	18 2f       	mov	r17, r24
    1d46:	ce 01       	movw	r24, r28
    1d48:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>
    1d4c:	81 2f       	mov	r24, r17
    1d4e:	df 91       	pop	r29
    1d50:	cf 91       	pop	r28
    1d52:	1f 91       	pop	r17
    1d54:	08 95       	ret

00001d56 <_ZN7MCP25157setModeENS_18CANCTRL_REQOP_MODEE>:
    1d56:	cf 92       	push	r12
    1d58:	df 92       	push	r13
    1d5a:	ef 92       	push	r14
    1d5c:	ff 92       	push	r15
    1d5e:	1f 93       	push	r17
    1d60:	cf 93       	push	r28
    1d62:	df 93       	push	r29
    1d64:	ec 01       	movw	r28, r24
    1d66:	16 2f       	mov	r17, r22
    1d68:	26 2f       	mov	r18, r22
    1d6a:	40 ee       	ldi	r20, 0xE0	; 224
    1d6c:	6f e0       	ldi	r22, 0x0F	; 15
    1d6e:	0e 94 77 0e 	call	0x1cee	; 0x1cee <_ZN7MCP251514modifyRegisterENS_8REGISTEREhh>
    1d72:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
    1d76:	6b 01       	movw	r12, r22
    1d78:	7c 01       	movw	r14, r24
    1d7a:	2a e0       	ldi	r18, 0x0A	; 10
    1d7c:	c2 0e       	add	r12, r18
    1d7e:	d1 1c       	adc	r13, r1
    1d80:	e1 1c       	adc	r14, r1
    1d82:	f1 1c       	adc	r15, r1
    1d84:	0e 94 2f 0c 	call	0x185e	; 0x185e <millis>
    1d88:	6c 15       	cp	r22, r12
    1d8a:	7d 05       	cpc	r23, r13
    1d8c:	8e 05       	cpc	r24, r14
    1d8e:	9f 05       	cpc	r25, r15
    1d90:	48 f4       	brcc	.+18     	; 0x1da4 <_ZN7MCP25157setModeENS_18CANCTRL_REQOP_MODEE+0x4e>
    1d92:	6e e0       	ldi	r22, 0x0E	; 14
    1d94:	ce 01       	movw	r24, r28
    1d96:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN7MCP251512readRegisterENS_8REGISTERE>
    1d9a:	80 7e       	andi	r24, 0xE0	; 224
    1d9c:	18 13       	cpse	r17, r24
    1d9e:	f2 cf       	rjmp	.-28     	; 0x1d84 <_ZN7MCP25157setModeENS_18CANCTRL_REQOP_MODEE+0x2e>
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	01 c0       	rjmp	.+2      	; 0x1da6 <_ZN7MCP25157setModeENS_18CANCTRL_REQOP_MODEE+0x50>
    1da4:	80 e0       	ldi	r24, 0x00	; 0
    1da6:	91 e0       	ldi	r25, 0x01	; 1
    1da8:	89 27       	eor	r24, r25
    1daa:	df 91       	pop	r29
    1dac:	cf 91       	pop	r28
    1dae:	1f 91       	pop	r17
    1db0:	ff 90       	pop	r15
    1db2:	ef 90       	pop	r14
    1db4:	df 90       	pop	r13
    1db6:	cf 90       	pop	r12
    1db8:	08 95       	ret

00001dba <_ZN7MCP251513setConfigModeEv>:
    1dba:	60 e8       	ldi	r22, 0x80	; 128
    1dbc:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <_ZN7MCP25157setModeENS_18CANCTRL_REQOP_MODEE>

00001dc0 <_ZN7MCP251513setNormalModeEv>:
    1dc0:	60 e0       	ldi	r22, 0x00	; 0
    1dc2:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <_ZN7MCP25157setModeENS_18CANCTRL_REQOP_MODEE>

00001dc6 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK>:
    1dc6:	0f 93       	push	r16
    1dc8:	1f 93       	push	r17
    1dca:	cf 93       	push	r28
    1dcc:	df 93       	push	r29
    1dce:	8c 01       	movw	r16, r24
    1dd0:	c6 2f       	mov	r28, r22
    1dd2:	d4 2f       	mov	r29, r20
    1dd4:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <_ZN7MCP251513setConfigModeEv>
    1dd8:	81 11       	cpse	r24, r1
    1dda:	b7 c0       	rjmp	.+366    	; 0x1f4a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x184>
    1ddc:	d1 30       	cpi	r29, 0x01	; 1
    1dde:	a9 f1       	breq	.+106    	; 0x1e4a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x84>
    1de0:	08 f4       	brcc	.+2      	; 0x1de4 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x1e>
    1de2:	64 c0       	rjmp	.+200    	; 0x1eac <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0xe6>
    1de4:	d2 30       	cpi	r29, 0x02	; 2
    1de6:	09 f0       	breq	.+2      	; 0x1dea <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x24>
    1de8:	90 c0       	rjmp	.+288    	; 0x1f0a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x144>
    1dea:	8c 2f       	mov	r24, r28
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	80 31       	cpi	r24, 0x10	; 16
    1df0:	91 05       	cpc	r25, r1
    1df2:	08 f0       	brcs	.+2      	; 0x1df6 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x30>
    1df4:	8a c0       	rjmp	.+276    	; 0x1f0a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x144>
    1df6:	fc 01       	movw	r30, r24
    1df8:	ec 5c       	subi	r30, 0xCC	; 204
    1dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfc:	0c 94 17 18 	jmp	0x302e	; 0x302e <__tablejump2__>
    1e00:	c7 e8       	ldi	r28, 0x87	; 135
    1e02:	df eb       	ldi	r29, 0xBF	; 191
    1e04:	32 c0       	rjmp	.+100    	; 0x1e6a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0xa4>
    1e06:	c4 e8       	ldi	r28, 0x84	; 132
    1e08:	d4 ea       	ldi	r29, 0xA4	; 164
    1e0a:	87 c0       	rjmp	.+270    	; 0x1f1a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x154>
    1e0c:	c5 e8       	ldi	r28, 0x85	; 133
    1e0e:	d2 ee       	ldi	r29, 0xE2	; 226
    1e10:	47 e4       	ldi	r20, 0x47	; 71
    1e12:	8c c0       	rjmp	.+280    	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1e14:	c7 e8       	ldi	r28, 0x87	; 135
    1e16:	df eb       	ldi	r29, 0xBF	; 191
    1e18:	67 c0       	rjmp	.+206    	; 0x1ee8 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x122>
    1e1a:	c6 e8       	ldi	r28, 0x86	; 134
    1e1c:	d4 eb       	ldi	r29, 0xB4	; 180
    1e1e:	64 c0       	rjmp	.+200    	; 0x1ee8 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x122>
    1e20:	c7 e8       	ldi	r28, 0x87	; 135
    1e22:	df eb       	ldi	r29, 0xBF	; 191
    1e24:	65 c0       	rjmp	.+202    	; 0x1ef0 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x12a>
    1e26:	c6 e8       	ldi	r28, 0x86	; 134
    1e28:	d4 eb       	ldi	r29, 0xB4	; 180
    1e2a:	62 c0       	rjmp	.+196    	; 0x1ef0 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x12a>
    1e2c:	c5 e8       	ldi	r28, 0x85	; 133
    1e2e:	d1 eb       	ldi	r29, 0xB1	; 177
    1e30:	5f c0       	rjmp	.+190    	; 0x1ef0 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x12a>
    1e32:	c6 e8       	ldi	r28, 0x86	; 134
    1e34:	d4 eb       	ldi	r29, 0xB4	; 180
    1e36:	64 c0       	rjmp	.+200    	; 0x1f00 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x13a>
    1e38:	c5 e8       	ldi	r28, 0x85	; 133
    1e3a:	d1 eb       	ldi	r29, 0xB1	; 177
    1e3c:	61 c0       	rjmp	.+194    	; 0x1f00 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x13a>
    1e3e:	c2 e8       	ldi	r28, 0x82	; 130
    1e40:	d0 e9       	ldi	r29, 0x90	; 144
    1e42:	5e c0       	rjmp	.+188    	; 0x1f00 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x13a>
    1e44:	c0 e8       	ldi	r28, 0x80	; 128
    1e46:	d0 e8       	ldi	r29, 0x80	; 128
    1e48:	5b c0       	rjmp	.+182    	; 0x1f00 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x13a>
    1e4a:	8c 2f       	mov	r24, r28
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	80 31       	cpi	r24, 0x10	; 16
    1e50:	91 05       	cpc	r25, r1
    1e52:	08 f0       	brcs	.+2      	; 0x1e56 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x90>
    1e54:	5a c0       	rjmp	.+180    	; 0x1f0a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x144>
    1e56:	fc 01       	movw	r30, r24
    1e58:	ec 5b       	subi	r30, 0xBC	; 188
    1e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5c:	0c 94 17 18 	jmp	0x302e	; 0x302e <__tablejump2__>
    1e60:	c7 e8       	ldi	r28, 0x87	; 135
    1e62:	df ef       	ldi	r29, 0xFF	; 255
    1e64:	56 c0       	rjmp	.+172    	; 0x1f12 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x14c>
    1e66:	c7 e8       	ldi	r28, 0x87	; 135
    1e68:	df ef       	ldi	r29, 0xFF	; 255
    1e6a:	4f e0       	ldi	r20, 0x0F	; 15
    1e6c:	5f c0       	rjmp	.+190    	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1e6e:	c5 e8       	ldi	r28, 0x85	; 133
    1e70:	d1 ef       	ldi	r29, 0xF1	; 241
    1e72:	4e e4       	ldi	r20, 0x4E	; 78
    1e74:	5b c0       	rjmp	.+182    	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1e76:	c7 e8       	ldi	r28, 0x87	; 135
    1e78:	df ef       	ldi	r29, 0xFF	; 255
    1e7a:	4f c0       	rjmp	.+158    	; 0x1f1a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x154>
    1e7c:	c7 e8       	ldi	r28, 0x87	; 135
    1e7e:	da ef       	ldi	r29, 0xFA	; 250
    1e80:	4c c0       	rjmp	.+152    	; 0x1f1a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x154>
    1e82:	c7 e8       	ldi	r28, 0x87	; 135
    1e84:	df ef       	ldi	r29, 0xFF	; 255
    1e86:	30 c0       	rjmp	.+96     	; 0x1ee8 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x122>
    1e88:	c7 e0       	ldi	r28, 0x07	; 7
    1e8a:	de eb       	ldi	r29, 0xBE	; 190
    1e8c:	2d c0       	rjmp	.+90     	; 0x1ee8 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x122>
    1e8e:	c6 e8       	ldi	r28, 0x86	; 134
    1e90:	d0 ef       	ldi	r29, 0xF0	; 240
    1e92:	2a c0       	rjmp	.+84     	; 0x1ee8 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x122>
    1e94:	c7 e8       	ldi	r28, 0x87	; 135
    1e96:	da ef       	ldi	r29, 0xFA	; 250
    1e98:	2b c0       	rjmp	.+86     	; 0x1ef0 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x12a>
    1e9a:	c5 e8       	ldi	r28, 0x85	; 133
    1e9c:	d1 ef       	ldi	r29, 0xF1	; 241
    1e9e:	2c c0       	rjmp	.+88     	; 0x1ef8 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x132>
    1ea0:	c6 e8       	ldi	r28, 0x86	; 134
    1ea2:	d0 ef       	ldi	r29, 0xF0	; 240
    1ea4:	2d c0       	rjmp	.+90     	; 0x1f00 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x13a>
    1ea6:	c2 e8       	ldi	r28, 0x82	; 130
    1ea8:	d0 ed       	ldi	r29, 0xD0	; 208
    1eaa:	2a c0       	rjmp	.+84     	; 0x1f00 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x13a>
    1eac:	8c 2f       	mov	r24, r28
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	fc 01       	movw	r30, r24
    1eb2:	34 97       	sbiw	r30, 0x04	; 4
    1eb4:	ec 30       	cpi	r30, 0x0C	; 12
    1eb6:	f1 05       	cpc	r31, r1
    1eb8:	40 f5       	brcc	.+80     	; 0x1f0a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x144>
    1eba:	ec 5a       	subi	r30, 0xAC	; 172
    1ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebe:	0c 94 17 18 	jmp	0x302e	; 0x302e <__tablejump2__>
    1ec2:	c7 e8       	ldi	r28, 0x87	; 135
    1ec4:	df ef       	ldi	r29, 0xFF	; 255
    1ec6:	02 c0       	rjmp	.+4      	; 0x1ecc <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x106>
    1ec8:	c7 e8       	ldi	r28, 0x87	; 135
    1eca:	da ef       	ldi	r29, 0xFA	; 250
    1ecc:	49 e0       	ldi	r20, 0x09	; 9
    1ece:	2e c0       	rjmp	.+92     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1ed0:	c7 e8       	ldi	r28, 0x87	; 135
    1ed2:	df ef       	ldi	r29, 0xFF	; 255
    1ed4:	02 c0       	rjmp	.+4      	; 0x1eda <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x114>
    1ed6:	c7 e8       	ldi	r28, 0x87	; 135
    1ed8:	de ef       	ldi	r29, 0xFE	; 254
    1eda:	44 e0       	ldi	r20, 0x04	; 4
    1edc:	27 c0       	rjmp	.+78     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1ede:	c7 e8       	ldi	r28, 0x87	; 135
    1ee0:	da ef       	ldi	r29, 0xFA	; 250
    1ee2:	fb cf       	rjmp	.-10     	; 0x1eda <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x114>
    1ee4:	c7 e8       	ldi	r28, 0x87	; 135
    1ee6:	da ef       	ldi	r29, 0xFA	; 250
    1ee8:	43 e0       	ldi	r20, 0x03	; 3
    1eea:	20 c0       	rjmp	.+64     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1eec:	c7 e8       	ldi	r28, 0x87	; 135
    1eee:	df ef       	ldi	r29, 0xFF	; 255
    1ef0:	41 e0       	ldi	r20, 0x01	; 1
    1ef2:	1c c0       	rjmp	.+56     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1ef4:	c6 e8       	ldi	r28, 0x86	; 134
    1ef6:	db ef       	ldi	r29, 0xFB	; 251
    1ef8:	41 e4       	ldi	r20, 0x41	; 65
    1efa:	18 c0       	rjmp	.+48     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1efc:	c7 e8       	ldi	r28, 0x87	; 135
    1efe:	da ef       	ldi	r29, 0xFA	; 250
    1f00:	40 e0       	ldi	r20, 0x00	; 0
    1f02:	14 c0       	rjmp	.+40     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1f04:	c2 e8       	ldi	r28, 0x82	; 130
    1f06:	d9 ed       	ldi	r29, 0xD9	; 217
    1f08:	fb cf       	rjmp	.-10     	; 0x1f00 <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x13a>
    1f0a:	81 e0       	ldi	r24, 0x01	; 1
    1f0c:	1e c0       	rjmp	.+60     	; 0x1f4a <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x184>
    1f0e:	c7 e8       	ldi	r28, 0x87	; 135
    1f10:	df eb       	ldi	r29, 0xBF	; 191
    1f12:	4f e1       	ldi	r20, 0x1F	; 31
    1f14:	0b c0       	rjmp	.+22     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1f16:	c7 e8       	ldi	r28, 0x87	; 135
    1f18:	df eb       	ldi	r29, 0xBF	; 191
    1f1a:	47 e0       	ldi	r20, 0x07	; 7
    1f1c:	07 c0       	rjmp	.+14     	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1f1e:	c7 e8       	ldi	r28, 0x87	; 135
    1f20:	df ef       	ldi	r29, 0xFF	; 255
    1f22:	4f e3       	ldi	r20, 0x3F	; 63
    1f24:	03 c0       	rjmp	.+6      	; 0x1f2c <_ZN7MCP251510setBitrateE9CAN_SPEED9CAN_CLOCK+0x166>
    1f26:	c7 e8       	ldi	r28, 0x87	; 135
    1f28:	df ef       	ldi	r29, 0xFF	; 255
    1f2a:	4b e0       	ldi	r20, 0x0B	; 11
    1f2c:	6a e2       	ldi	r22, 0x2A	; 42
    1f2e:	c8 01       	movw	r24, r16
    1f30:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN7MCP251511setRegisterENS_8REGISTEREh>
    1f34:	4d 2f       	mov	r20, r29
    1f36:	69 e2       	ldi	r22, 0x29	; 41
    1f38:	c8 01       	movw	r24, r16
    1f3a:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN7MCP251511setRegisterENS_8REGISTEREh>
    1f3e:	4c 2f       	mov	r20, r28
    1f40:	68 e2       	ldi	r22, 0x28	; 40
    1f42:	c8 01       	movw	r24, r16
    1f44:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN7MCP251511setRegisterENS_8REGISTEREh>
    1f48:	80 e0       	ldi	r24, 0x00	; 0
    1f4a:	df 91       	pop	r29
    1f4c:	cf 91       	pop	r28
    1f4e:	1f 91       	pop	r17
    1f50:	0f 91       	pop	r16
    1f52:	08 95       	ret

00001f54 <_ZN7MCP25159prepareIdEPhbm>:
    1f54:	0f 93       	push	r16
    1f56:	1f 93       	push	r17
    1f58:	fb 01       	movw	r30, r22
    1f5a:	44 23       	and	r20, r20
    1f5c:	b1 f0       	breq	.+44     	; 0x1f8a <_ZN7MCP25159prepareIdEPhbm+0x36>
    1f5e:	03 83       	std	Z+3, r16	; 0x03
    1f60:	12 83       	std	Z+2, r17	; 0x02
    1f62:	89 01       	movw	r16, r18
    1f64:	22 27       	eor	r18, r18
    1f66:	33 27       	eor	r19, r19
    1f68:	90 2f       	mov	r25, r16
    1f6a:	9c 71       	andi	r25, 0x1C	; 28
    1f6c:	80 2f       	mov	r24, r16
    1f6e:	83 70       	andi	r24, 0x03	; 3
    1f70:	48 e0       	ldi	r20, 0x08	; 8
    1f72:	94 9f       	mul	r25, r20
    1f74:	80 0d       	add	r24, r0
    1f76:	11 24       	eor	r1, r1
    1f78:	88 60       	ori	r24, 0x08	; 8
    1f7a:	81 83       	std	Z+1, r24	; 0x01
    1f7c:	55 e0       	ldi	r21, 0x05	; 5
    1f7e:	16 95       	lsr	r17
    1f80:	07 95       	ror	r16
    1f82:	5a 95       	dec	r21
    1f84:	e1 f7       	brne	.-8      	; 0x1f7e <_ZN7MCP25159prepareIdEPhbm+0x2a>
    1f86:	00 83       	st	Z, r16
    1f88:	0d c0       	rjmp	.+26     	; 0x1fa4 <_ZN7MCP25159prepareIdEPhbm+0x50>
    1f8a:	c8 01       	movw	r24, r16
    1f8c:	23 e0       	ldi	r18, 0x03	; 3
    1f8e:	96 95       	lsr	r25
    1f90:	87 95       	ror	r24
    1f92:	2a 95       	dec	r18
    1f94:	e1 f7       	brne	.-8      	; 0x1f8e <_ZN7MCP25159prepareIdEPhbm+0x3a>
    1f96:	80 83       	st	Z, r24
    1f98:	02 95       	swap	r16
    1f9a:	00 0f       	add	r16, r16
    1f9c:	00 7e       	andi	r16, 0xE0	; 224
    1f9e:	01 83       	std	Z+1, r16	; 0x01
    1fa0:	13 82       	std	Z+3, r1	; 0x03
    1fa2:	12 82       	std	Z+2, r1	; 0x02
    1fa4:	1f 91       	pop	r17
    1fa6:	0f 91       	pop	r16
    1fa8:	08 95       	ret

00001faa <_ZN7MCP251513setFilterMaskENS_4MASKEbm>:
    1faa:	8f 92       	push	r8
    1fac:	9f 92       	push	r9
    1fae:	af 92       	push	r10
    1fb0:	bf 92       	push	r11
    1fb2:	cf 92       	push	r12
    1fb4:	df 92       	push	r13
    1fb6:	ef 92       	push	r14
    1fb8:	ff 92       	push	r15
    1fba:	0f 93       	push	r16
    1fbc:	1f 93       	push	r17
    1fbe:	cf 93       	push	r28
    1fc0:	df 93       	push	r29
    1fc2:	00 d0       	rcall	.+0      	; 0x1fc4 <_ZN7MCP251513setFilterMaskENS_4MASKEbm+0x1a>
    1fc4:	00 d0       	rcall	.+0      	; 0x1fc6 <_ZN7MCP251513setFilterMaskENS_4MASKEbm+0x1c>
    1fc6:	cd b7       	in	r28, 0x3d	; 61
    1fc8:	de b7       	in	r29, 0x3e	; 62
    1fca:	7c 01       	movw	r14, r24
    1fcc:	d6 2e       	mov	r13, r22
    1fce:	c4 2e       	mov	r12, r20
    1fd0:	48 01       	movw	r8, r16
    1fd2:	59 01       	movw	r10, r18
    1fd4:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <_ZN7MCP251513setConfigModeEv>
    1fd8:	81 11       	cpse	r24, r1
    1fda:	1b c0       	rjmp	.+54     	; 0x2012 <_ZN7MCP251513setFilterMaskENS_4MASKEbm+0x68>
    1fdc:	95 01       	movw	r18, r10
    1fde:	84 01       	movw	r16, r8
    1fe0:	4c 2d       	mov	r20, r12
    1fe2:	be 01       	movw	r22, r28
    1fe4:	6f 5f       	subi	r22, 0xFF	; 255
    1fe6:	7f 4f       	sbci	r23, 0xFF	; 255
    1fe8:	c7 01       	movw	r24, r14
    1fea:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <_ZN7MCP25159prepareIdEPhbm>
    1fee:	dd 20       	and	r13, r13
    1ff0:	29 f0       	breq	.+10     	; 0x1ffc <_ZN7MCP251513setFilterMaskENS_4MASKEbm+0x52>
    1ff2:	81 e0       	ldi	r24, 0x01	; 1
    1ff4:	d8 12       	cpse	r13, r24
    1ff6:	0c c0       	rjmp	.+24     	; 0x2010 <_ZN7MCP251513setFilterMaskENS_4MASKEbm+0x66>
    1ff8:	64 e2       	ldi	r22, 0x24	; 36
    1ffa:	01 c0       	rjmp	.+2      	; 0x1ffe <_ZN7MCP251513setFilterMaskENS_4MASKEbm+0x54>
    1ffc:	60 e2       	ldi	r22, 0x20	; 32
    1ffe:	24 e0       	ldi	r18, 0x04	; 4
    2000:	ae 01       	movw	r20, r28
    2002:	4f 5f       	subi	r20, 0xFF	; 255
    2004:	5f 4f       	sbci	r21, 0xFF	; 255
    2006:	c7 01       	movw	r24, r14
    2008:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh>
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	01 c0       	rjmp	.+2      	; 0x2012 <_ZN7MCP251513setFilterMaskENS_4MASKEbm+0x68>
    2010:	81 e0       	ldi	r24, 0x01	; 1
    2012:	0f 90       	pop	r0
    2014:	0f 90       	pop	r0
    2016:	0f 90       	pop	r0
    2018:	0f 90       	pop	r0
    201a:	df 91       	pop	r29
    201c:	cf 91       	pop	r28
    201e:	1f 91       	pop	r17
    2020:	0f 91       	pop	r16
    2022:	ff 90       	pop	r15
    2024:	ef 90       	pop	r14
    2026:	df 90       	pop	r13
    2028:	cf 90       	pop	r12
    202a:	bf 90       	pop	r11
    202c:	af 90       	pop	r10
    202e:	9f 90       	pop	r9
    2030:	8f 90       	pop	r8
    2032:	08 95       	ret

00002034 <_ZN7MCP25159setFilterENS_3RXFEbm>:
    2034:	8f 92       	push	r8
    2036:	9f 92       	push	r9
    2038:	af 92       	push	r10
    203a:	bf 92       	push	r11
    203c:	cf 92       	push	r12
    203e:	df 92       	push	r13
    2040:	ef 92       	push	r14
    2042:	ff 92       	push	r15
    2044:	0f 93       	push	r16
    2046:	1f 93       	push	r17
    2048:	cf 93       	push	r28
    204a:	df 93       	push	r29
    204c:	00 d0       	rcall	.+0      	; 0x204e <_ZN7MCP25159setFilterENS_3RXFEbm+0x1a>
    204e:	00 d0       	rcall	.+0      	; 0x2050 <_ZN7MCP25159setFilterENS_3RXFEbm+0x1c>
    2050:	cd b7       	in	r28, 0x3d	; 61
    2052:	de b7       	in	r29, 0x3e	; 62
    2054:	6c 01       	movw	r12, r24
    2056:	f6 2e       	mov	r15, r22
    2058:	e4 2e       	mov	r14, r20
    205a:	48 01       	movw	r8, r16
    205c:	59 01       	movw	r10, r18
    205e:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <_ZN7MCP251513setConfigModeEv>
    2062:	81 11       	cpse	r24, r1
    2064:	36 c0       	rjmp	.+108    	; 0x20d2 <_ZN7MCP25159setFilterENS_3RXFEbm+0x9e>
    2066:	82 e0       	ldi	r24, 0x02	; 2
    2068:	f8 16       	cp	r15, r24
    206a:	a9 f0       	breq	.+42     	; 0x2096 <_ZN7MCP25159setFilterENS_3RXFEbm+0x62>
    206c:	8f 15       	cp	r24, r15
    206e:	40 f0       	brcs	.+16     	; 0x2080 <_ZN7MCP25159setFilterENS_3RXFEbm+0x4c>
    2070:	ff 20       	and	r15, r15
    2072:	d1 f0       	breq	.+52     	; 0x20a8 <_ZN7MCP25159setFilterENS_3RXFEbm+0x74>
    2074:	81 e0       	ldi	r24, 0x01	; 1
    2076:	f8 12       	cpse	r15, r24
    2078:	2b c0       	rjmp	.+86     	; 0x20d0 <_ZN7MCP25159setFilterENS_3RXFEbm+0x9c>
    207a:	44 e0       	ldi	r20, 0x04	; 4
    207c:	f4 2e       	mov	r15, r20
    207e:	15 c0       	rjmp	.+42     	; 0x20aa <_ZN7MCP25159setFilterENS_3RXFEbm+0x76>
    2080:	84 e0       	ldi	r24, 0x04	; 4
    2082:	f8 16       	cp	r15, r24
    2084:	71 f0       	breq	.+28     	; 0x20a2 <_ZN7MCP25159setFilterENS_3RXFEbm+0x6e>
    2086:	f8 16       	cp	r15, r24
    2088:	48 f0       	brcs	.+18     	; 0x209c <_ZN7MCP25159setFilterENS_3RXFEbm+0x68>
    208a:	85 e0       	ldi	r24, 0x05	; 5
    208c:	f8 12       	cpse	r15, r24
    208e:	20 c0       	rjmp	.+64     	; 0x20d0 <_ZN7MCP25159setFilterENS_3RXFEbm+0x9c>
    2090:	88 e1       	ldi	r24, 0x18	; 24
    2092:	f8 2e       	mov	r15, r24
    2094:	0a c0       	rjmp	.+20     	; 0x20aa <_ZN7MCP25159setFilterENS_3RXFEbm+0x76>
    2096:	38 e0       	ldi	r19, 0x08	; 8
    2098:	f3 2e       	mov	r15, r19
    209a:	07 c0       	rjmp	.+14     	; 0x20aa <_ZN7MCP25159setFilterENS_3RXFEbm+0x76>
    209c:	20 e1       	ldi	r18, 0x10	; 16
    209e:	f2 2e       	mov	r15, r18
    20a0:	04 c0       	rjmp	.+8      	; 0x20aa <_ZN7MCP25159setFilterENS_3RXFEbm+0x76>
    20a2:	94 e1       	ldi	r25, 0x14	; 20
    20a4:	f9 2e       	mov	r15, r25
    20a6:	01 c0       	rjmp	.+2      	; 0x20aa <_ZN7MCP25159setFilterENS_3RXFEbm+0x76>
    20a8:	f1 2c       	mov	r15, r1
    20aa:	95 01       	movw	r18, r10
    20ac:	84 01       	movw	r16, r8
    20ae:	4e 2d       	mov	r20, r14
    20b0:	be 01       	movw	r22, r28
    20b2:	6f 5f       	subi	r22, 0xFF	; 255
    20b4:	7f 4f       	sbci	r23, 0xFF	; 255
    20b6:	c6 01       	movw	r24, r12
    20b8:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <_ZN7MCP25159prepareIdEPhbm>
    20bc:	24 e0       	ldi	r18, 0x04	; 4
    20be:	ae 01       	movw	r20, r28
    20c0:	4f 5f       	subi	r20, 0xFF	; 255
    20c2:	5f 4f       	sbci	r21, 0xFF	; 255
    20c4:	6f 2d       	mov	r22, r15
    20c6:	c6 01       	movw	r24, r12
    20c8:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh>
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	01 c0       	rjmp	.+2      	; 0x20d2 <_ZN7MCP25159setFilterENS_3RXFEbm+0x9e>
    20d0:	81 e0       	ldi	r24, 0x01	; 1
    20d2:	0f 90       	pop	r0
    20d4:	0f 90       	pop	r0
    20d6:	0f 90       	pop	r0
    20d8:	0f 90       	pop	r0
    20da:	df 91       	pop	r29
    20dc:	cf 91       	pop	r28
    20de:	1f 91       	pop	r17
    20e0:	0f 91       	pop	r16
    20e2:	ff 90       	pop	r15
    20e4:	ef 90       	pop	r14
    20e6:	df 90       	pop	r13
    20e8:	cf 90       	pop	r12
    20ea:	bf 90       	pop	r11
    20ec:	af 90       	pop	r10
    20ee:	9f 90       	pop	r9
    20f0:	8f 90       	pop	r8
    20f2:	08 95       	ret

000020f4 <_ZN7MCP25155resetEv>:
    20f4:	af 92       	push	r10
    20f6:	bf 92       	push	r11
    20f8:	cf 92       	push	r12
    20fa:	df 92       	push	r13
    20fc:	ef 92       	push	r14
    20fe:	ff 92       	push	r15
    2100:	0f 93       	push	r16
    2102:	1f 93       	push	r17
    2104:	cf 93       	push	r28
    2106:	df 93       	push	r29
    2108:	cd b7       	in	r28, 0x3d	; 61
    210a:	de b7       	in	r29, 0x3e	; 62
    210c:	64 97       	sbiw	r28, 0x14	; 20
    210e:	0f b6       	in	r0, 0x3f	; 63
    2110:	f8 94       	cli
    2112:	de bf       	out	0x3e, r29	; 62
    2114:	0f be       	out	0x3f, r0	; 63
    2116:	cd bf       	out	0x3d, r28	; 61
    2118:	7c 01       	movw	r14, r24
    211a:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <_ZN7MCP25158startSPIEv>
    211e:	80 ec       	ldi	r24, 0xC0	; 192
    2120:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <_ZN8SPIClass8transferEh>
    2124:	c7 01       	movw	r24, r14
    2126:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <_ZN7MCP25156endSPIEv>
    212a:	6a e0       	ldi	r22, 0x0A	; 10
    212c:	70 e0       	ldi	r23, 0x00	; 0
    212e:	80 e0       	ldi	r24, 0x00	; 0
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <delay>
    2136:	8e 01       	movw	r16, r28
    2138:	0f 5f       	subi	r16, 0xFF	; 255
    213a:	1f 4f       	sbci	r17, 0xFF	; 255
    213c:	8e e0       	ldi	r24, 0x0E	; 14
    213e:	f8 01       	movw	r30, r16
    2140:	11 92       	st	Z+, r1
    2142:	8a 95       	dec	r24
    2144:	e9 f7       	brne	.-6      	; 0x2140 <_ZN7MCP25155resetEv+0x4c>
    2146:	2e e0       	ldi	r18, 0x0E	; 14
    2148:	a8 01       	movw	r20, r16
    214a:	60 e3       	ldi	r22, 0x30	; 48
    214c:	c7 01       	movw	r24, r14
    214e:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh>
    2152:	2e e0       	ldi	r18, 0x0E	; 14
    2154:	a8 01       	movw	r20, r16
    2156:	60 e4       	ldi	r22, 0x40	; 64
    2158:	c7 01       	movw	r24, r14
    215a:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh>
    215e:	2e e0       	ldi	r18, 0x0E	; 14
    2160:	a8 01       	movw	r20, r16
    2162:	60 e5       	ldi	r22, 0x50	; 80
    2164:	c7 01       	movw	r24, r14
    2166:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh>
    216a:	40 e0       	ldi	r20, 0x00	; 0
    216c:	60 e6       	ldi	r22, 0x60	; 96
    216e:	c7 01       	movw	r24, r14
    2170:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN7MCP251511setRegisterENS_8REGISTEREh>
    2174:	40 e0       	ldi	r20, 0x00	; 0
    2176:	60 e7       	ldi	r22, 0x70	; 112
    2178:	c7 01       	movw	r24, r14
    217a:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN7MCP251511setRegisterENS_8REGISTEREh>
    217e:	43 ea       	ldi	r20, 0xA3	; 163
    2180:	6b e2       	ldi	r22, 0x2B	; 43
    2182:	c7 01       	movw	r24, r14
    2184:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <_ZN7MCP251511setRegisterENS_8REGISTEREh>
    2188:	24 e0       	ldi	r18, 0x04	; 4
    218a:	47 e6       	ldi	r20, 0x67	; 103
    218c:	60 e6       	ldi	r22, 0x60	; 96
    218e:	c7 01       	movw	r24, r14
    2190:	0e 94 77 0e 	call	0x1cee	; 0x1cee <_ZN7MCP251514modifyRegisterENS_8REGISTEREhh>
    2194:	21 e0       	ldi	r18, 0x01	; 1
    2196:	47 e6       	ldi	r20, 0x67	; 103
    2198:	60 e7       	ldi	r22, 0x70	; 112
    219a:	c7 01       	movw	r24, r14
    219c:	0e 94 77 0e 	call	0x1cee	; 0x1cee <_ZN7MCP251514modifyRegisterENS_8REGISTEREhh>
    21a0:	86 e0       	ldi	r24, 0x06	; 6
    21a2:	e8 e1       	ldi	r30, 0x18	; 24
    21a4:	f1 e0       	ldi	r31, 0x01	; 1
    21a6:	de 01       	movw	r26, r28
    21a8:	1f 96       	adiw	r26, 0x0f	; 15
    21aa:	01 90       	ld	r0, Z+
    21ac:	0d 92       	st	X+, r0
    21ae:	8a 95       	dec	r24
    21b0:	e1 f7       	brne	.-8      	; 0x21aa <_ZN7MCP25155resetEv+0xb6>
    21b2:	5e 01       	movw	r10, r28
    21b4:	ff e0       	ldi	r31, 0x0F	; 15
    21b6:	af 0e       	add	r10, r31
    21b8:	b1 1c       	adc	r11, r1
    21ba:	c1 2c       	mov	r12, r1
    21bc:	d1 2c       	mov	r13, r1
    21be:	f5 01       	movw	r30, r10
    21c0:	61 91       	ld	r22, Z+
    21c2:	5f 01       	movw	r10, r30
    21c4:	41 e0       	ldi	r20, 0x01	; 1
    21c6:	f1 e0       	ldi	r31, 0x01	; 1
    21c8:	cf 16       	cp	r12, r31
    21ca:	d1 04       	cpc	r13, r1
    21cc:	09 f0       	breq	.+2      	; 0x21d0 <_ZN7MCP25155resetEv+0xdc>
    21ce:	40 e0       	ldi	r20, 0x00	; 0
    21d0:	00 e0       	ldi	r16, 0x00	; 0
    21d2:	10 e0       	ldi	r17, 0x00	; 0
    21d4:	98 01       	movw	r18, r16
    21d6:	c7 01       	movw	r24, r14
    21d8:	0e 94 1a 10 	call	0x2034	; 0x2034 <_ZN7MCP25159setFilterENS_3RXFEbm>
    21dc:	81 11       	cpse	r24, r1
    21de:	19 c0       	rjmp	.+50     	; 0x2212 <_ZN7MCP25155resetEv+0x11e>
    21e0:	8f ef       	ldi	r24, 0xFF	; 255
    21e2:	c8 1a       	sub	r12, r24
    21e4:	d8 0a       	sbc	r13, r24
    21e6:	e6 e0       	ldi	r30, 0x06	; 6
    21e8:	ce 16       	cp	r12, r30
    21ea:	d1 04       	cpc	r13, r1
    21ec:	41 f7       	brne	.-48     	; 0x21be <_ZN7MCP25155resetEv+0xca>
    21ee:	00 e0       	ldi	r16, 0x00	; 0
    21f0:	10 e0       	ldi	r17, 0x00	; 0
    21f2:	98 01       	movw	r18, r16
    21f4:	41 e0       	ldi	r20, 0x01	; 1
    21f6:	60 e0       	ldi	r22, 0x00	; 0
    21f8:	c7 01       	movw	r24, r14
    21fa:	0e 94 d5 0f 	call	0x1faa	; 0x1faa <_ZN7MCP251513setFilterMaskENS_4MASKEbm>
    21fe:	81 11       	cpse	r24, r1
    2200:	08 c0       	rjmp	.+16     	; 0x2212 <_ZN7MCP25155resetEv+0x11e>
    2202:	00 e0       	ldi	r16, 0x00	; 0
    2204:	10 e0       	ldi	r17, 0x00	; 0
    2206:	98 01       	movw	r18, r16
    2208:	41 e0       	ldi	r20, 0x01	; 1
    220a:	61 e0       	ldi	r22, 0x01	; 1
    220c:	c7 01       	movw	r24, r14
    220e:	0e 94 d5 0f 	call	0x1faa	; 0x1faa <_ZN7MCP251513setFilterMaskENS_4MASKEbm>
    2212:	64 96       	adiw	r28, 0x14	; 20
    2214:	0f b6       	in	r0, 0x3f	; 63
    2216:	f8 94       	cli
    2218:	de bf       	out	0x3e, r29	; 62
    221a:	0f be       	out	0x3f, r0	; 63
    221c:	cd bf       	out	0x3d, r28	; 61
    221e:	df 91       	pop	r29
    2220:	cf 91       	pop	r28
    2222:	1f 91       	pop	r17
    2224:	0f 91       	pop	r16
    2226:	ff 90       	pop	r15
    2228:	ef 90       	pop	r14
    222a:	df 90       	pop	r13
    222c:	cf 90       	pop	r12
    222e:	bf 90       	pop	r11
    2230:	af 90       	pop	r10
    2232:	08 95       	ret

00002234 <_ZN7MCP251511sendMessageENS_4TXBnEPK9can_frame>:
    2234:	4f 92       	push	r4
    2236:	5f 92       	push	r5
    2238:	6f 92       	push	r6
    223a:	7f 92       	push	r7
    223c:	af 92       	push	r10
    223e:	bf 92       	push	r11
    2240:	cf 92       	push	r12
    2242:	df 92       	push	r13
    2244:	ef 92       	push	r14
    2246:	ff 92       	push	r15
    2248:	0f 93       	push	r16
    224a:	1f 93       	push	r17
    224c:	cf 93       	push	r28
    224e:	df 93       	push	r29
    2250:	cd b7       	in	r28, 0x3d	; 61
    2252:	de b7       	in	r29, 0x3e	; 62
    2254:	2d 97       	sbiw	r28, 0x0d	; 13
    2256:	0f b6       	in	r0, 0x3f	; 63
    2258:	f8 94       	cli
    225a:	de bf       	out	0x3e, r29	; 62
    225c:	0f be       	out	0x3f, r0	; 63
    225e:	cd bf       	out	0x3d, r28	; 61
    2260:	fa 01       	movw	r30, r20
    2262:	24 81       	ldd	r18, Z+4	; 0x04
    2264:	29 30       	cpi	r18, 0x09	; 9
    2266:	08 f0       	brcs	.+2      	; 0x226a <_ZN7MCP251511sendMessageENS_4TXBnEPK9can_frame+0x36>
    2268:	3f c0       	rjmp	.+126    	; 0x22e8 <_ZN7MCP251511sendMessageENS_4TXBnEPK9can_frame+0xb4>
    226a:	6a 01       	movw	r12, r20
    226c:	5c 01       	movw	r10, r24
    226e:	e6 2e       	mov	r14, r22
    2270:	f1 2c       	mov	r15, r1
    2272:	40 80       	ld	r4, Z
    2274:	51 80       	ldd	r5, Z+1	; 0x01
    2276:	62 80       	ldd	r6, Z+2	; 0x02
    2278:	73 80       	ldd	r7, Z+3	; 0x03
    227a:	93 01       	movw	r18, r6
    227c:	82 01       	movw	r16, r4
    227e:	3f 71       	andi	r19, 0x1F	; 31
    2280:	41 e0       	ldi	r20, 0x01	; 1
    2282:	be 01       	movw	r22, r28
    2284:	6f 5f       	subi	r22, 0xFF	; 255
    2286:	7f 4f       	sbci	r23, 0xFF	; 255
    2288:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <_ZN7MCP25159prepareIdEPhbm>
    228c:	f6 01       	movw	r30, r12
    228e:	14 81       	ldd	r17, Z+4	; 0x04
    2290:	81 2f       	mov	r24, r17
    2292:	76 fc       	sbrc	r7, 6
    2294:	80 64       	ori	r24, 0x40	; 64
    2296:	8d 83       	std	Y+5, r24	; 0x05
    2298:	41 2f       	mov	r20, r17
    229a:	50 e0       	ldi	r21, 0x00	; 0
    229c:	b6 01       	movw	r22, r12
    229e:	68 5f       	subi	r22, 0xF8	; 248
    22a0:	7f 4f       	sbci	r23, 0xFF	; 255
    22a2:	ce 01       	movw	r24, r28
    22a4:	06 96       	adiw	r24, 0x06	; 6
    22a6:	0e 94 62 19 	call	0x32c4	; 0x32c4 <memcpy>
    22aa:	25 e0       	ldi	r18, 0x05	; 5
    22ac:	21 0f       	add	r18, r17
    22ae:	87 01       	movw	r16, r14
    22b0:	00 0f       	add	r16, r16
    22b2:	11 1f       	adc	r17, r17
    22b4:	0e 0d       	add	r16, r14
    22b6:	1f 1d       	adc	r17, r15
    22b8:	0a 59       	subi	r16, 0x9A	; 154
    22ba:	1d 4f       	sbci	r17, 0xFD	; 253
    22bc:	ae 01       	movw	r20, r28
    22be:	4f 5f       	subi	r20, 0xFF	; 255
    22c0:	5f 4f       	sbci	r21, 0xFF	; 255
    22c2:	f8 01       	movw	r30, r16
    22c4:	61 81       	ldd	r22, Z+1	; 0x01
    22c6:	c5 01       	movw	r24, r10
    22c8:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <_ZN7MCP251512setRegistersENS_8REGISTEREPKhh>
    22cc:	f8 01       	movw	r30, r16
    22ce:	10 81       	ld	r17, Z
    22d0:	28 e0       	ldi	r18, 0x08	; 8
    22d2:	48 e0       	ldi	r20, 0x08	; 8
    22d4:	61 2f       	mov	r22, r17
    22d6:	c5 01       	movw	r24, r10
    22d8:	0e 94 77 0e 	call	0x1cee	; 0x1cee <_ZN7MCP251514modifyRegisterENS_8REGISTEREhh>
    22dc:	61 2f       	mov	r22, r17
    22de:	c5 01       	movw	r24, r10
    22e0:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN7MCP251512readRegisterENS_8REGISTERE>
    22e4:	80 77       	andi	r24, 0x70	; 112
    22e6:	09 f0       	breq	.+2      	; 0x22ea <_ZN7MCP251511sendMessageENS_4TXBnEPK9can_frame+0xb6>
    22e8:	84 e0       	ldi	r24, 0x04	; 4
    22ea:	2d 96       	adiw	r28, 0x0d	; 13
    22ec:	0f b6       	in	r0, 0x3f	; 63
    22ee:	f8 94       	cli
    22f0:	de bf       	out	0x3e, r29	; 62
    22f2:	0f be       	out	0x3f, r0	; 63
    22f4:	cd bf       	out	0x3d, r28	; 61
    22f6:	df 91       	pop	r29
    22f8:	cf 91       	pop	r28
    22fa:	1f 91       	pop	r17
    22fc:	0f 91       	pop	r16
    22fe:	ff 90       	pop	r15
    2300:	ef 90       	pop	r14
    2302:	df 90       	pop	r13
    2304:	cf 90       	pop	r12
    2306:	bf 90       	pop	r11
    2308:	af 90       	pop	r10
    230a:	7f 90       	pop	r7
    230c:	6f 90       	pop	r6
    230e:	5f 90       	pop	r5
    2310:	4f 90       	pop	r4
    2312:	08 95       	ret

00002314 <_ZN7MCP251511sendMessageEPK9can_frame>:
    2314:	9f 92       	push	r9
    2316:	af 92       	push	r10
    2318:	bf 92       	push	r11
    231a:	cf 92       	push	r12
    231c:	df 92       	push	r13
    231e:	ef 92       	push	r14
    2320:	ff 92       	push	r15
    2322:	0f 93       	push	r16
    2324:	1f 93       	push	r17
    2326:	cf 93       	push	r28
    2328:	df 93       	push	r29
    232a:	00 d0       	rcall	.+0      	; 0x232c <_ZN7MCP251511sendMessageEPK9can_frame+0x18>
    232c:	1f 92       	push	r1
    232e:	cd b7       	in	r28, 0x3d	; 61
    2330:	de b7       	in	r29, 0x3e	; 62
    2332:	fb 01       	movw	r30, r22
    2334:	24 81       	ldd	r18, Z+4	; 0x04
    2336:	29 30       	cpi	r18, 0x09	; 9
    2338:	e8 f5       	brcc	.+122    	; 0x23b4 <_ZN7MCP251511sendMessageEPK9can_frame+0xa0>
    233a:	7b 01       	movw	r14, r22
    233c:	8c 01       	movw	r16, r24
    233e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <stateF1+0x8>
    2342:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <stateF1+0x9>
    2346:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <stateF1+0xa>
    234a:	89 83       	std	Y+1, r24	; 0x01
    234c:	9a 83       	std	Y+2, r25	; 0x02
    234e:	ab 83       	std	Y+3, r26	; 0x03
    2350:	ce 01       	movw	r24, r28
    2352:	01 96       	adiw	r24, 0x01	; 1
    2354:	6c 01       	movw	r12, r24
    2356:	5e 01       	movw	r10, r28
    2358:	94 e0       	ldi	r25, 0x04	; 4
    235a:	a9 0e       	add	r10, r25
    235c:	b1 1c       	adc	r11, r1
    235e:	f6 01       	movw	r30, r12
    2360:	91 90       	ld	r9, Z+
    2362:	6f 01       	movw	r12, r30
    2364:	29 2d       	mov	r18, r9
    2366:	30 e0       	ldi	r19, 0x00	; 0
    2368:	f9 01       	movw	r30, r18
    236a:	ee 0f       	add	r30, r30
    236c:	ff 1f       	adc	r31, r31
    236e:	2e 0f       	add	r18, r30
    2370:	3f 1f       	adc	r19, r31
    2372:	f9 01       	movw	r30, r18
    2374:	ea 59       	subi	r30, 0x9A	; 154
    2376:	fd 4f       	sbci	r31, 0xFD	; 253
    2378:	60 81       	ld	r22, Z
    237a:	c8 01       	movw	r24, r16
    237c:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN7MCP251512readRegisterENS_8REGISTERE>
    2380:	83 fd       	sbrc	r24, 3
    2382:	13 c0       	rjmp	.+38     	; 0x23aa <_ZN7MCP251511sendMessageEPK9can_frame+0x96>
    2384:	a7 01       	movw	r20, r14
    2386:	69 2d       	mov	r22, r9
    2388:	c8 01       	movw	r24, r16
    238a:	0f 90       	pop	r0
    238c:	0f 90       	pop	r0
    238e:	0f 90       	pop	r0
    2390:	df 91       	pop	r29
    2392:	cf 91       	pop	r28
    2394:	1f 91       	pop	r17
    2396:	0f 91       	pop	r16
    2398:	ff 90       	pop	r15
    239a:	ef 90       	pop	r14
    239c:	df 90       	pop	r13
    239e:	cf 90       	pop	r12
    23a0:	bf 90       	pop	r11
    23a2:	af 90       	pop	r10
    23a4:	9f 90       	pop	r9
    23a6:	0c 94 1a 11 	jmp	0x2234	; 0x2234 <_ZN7MCP251511sendMessageENS_4TXBnEPK9can_frame>
    23aa:	ca 14       	cp	r12, r10
    23ac:	db 04       	cpc	r13, r11
    23ae:	b9 f6       	brne	.-82     	; 0x235e <_ZN7MCP251511sendMessageEPK9can_frame+0x4a>
    23b0:	82 e0       	ldi	r24, 0x02	; 2
    23b2:	01 c0       	rjmp	.+2      	; 0x23b6 <_ZN7MCP251511sendMessageEPK9can_frame+0xa2>
    23b4:	84 e0       	ldi	r24, 0x04	; 4
    23b6:	0f 90       	pop	r0
    23b8:	0f 90       	pop	r0
    23ba:	0f 90       	pop	r0
    23bc:	df 91       	pop	r29
    23be:	cf 91       	pop	r28
    23c0:	1f 91       	pop	r17
    23c2:	0f 91       	pop	r16
    23c4:	ff 90       	pop	r15
    23c6:	ef 90       	pop	r14
    23c8:	df 90       	pop	r13
    23ca:	cf 90       	pop	r12
    23cc:	bf 90       	pop	r11
    23ce:	af 90       	pop	r10
    23d0:	9f 90       	pop	r9
    23d2:	08 95       	ret

000023d4 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame>:
    23d4:	7f 92       	push	r7
    23d6:	8f 92       	push	r8
    23d8:	9f 92       	push	r9
    23da:	af 92       	push	r10
    23dc:	bf 92       	push	r11
    23de:	cf 92       	push	r12
    23e0:	df 92       	push	r13
    23e2:	ef 92       	push	r14
    23e4:	ff 92       	push	r15
    23e6:	0f 93       	push	r16
    23e8:	1f 93       	push	r17
    23ea:	cf 93       	push	r28
    23ec:	df 93       	push	r29
    23ee:	00 d0       	rcall	.+0      	; 0x23f0 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0x1c>
    23f0:	00 d0       	rcall	.+0      	; 0x23f2 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0x1e>
    23f2:	1f 92       	push	r1
    23f4:	cd b7       	in	r28, 0x3d	; 61
    23f6:	de b7       	in	r29, 0x3e	; 62
    23f8:	4c 01       	movw	r8, r24
    23fa:	5a 01       	movw	r10, r20
    23fc:	24 e0       	ldi	r18, 0x04	; 4
    23fe:	62 9f       	mul	r22, r18
    2400:	80 01       	movw	r16, r0
    2402:	11 24       	eor	r1, r1
    2404:	f8 01       	movw	r30, r16
    2406:	e2 5a       	subi	r30, 0xA2	; 162
    2408:	fd 4f       	sbci	r31, 0xFD	; 253
    240a:	25 e0       	ldi	r18, 0x05	; 5
    240c:	ae 01       	movw	r20, r28
    240e:	4f 5f       	subi	r20, 0xFF	; 255
    2410:	5f 4f       	sbci	r21, 0xFF	; 255
    2412:	61 81       	ldd	r22, Z+1	; 0x01
    2414:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <_ZN7MCP251513readRegistersENS_8REGISTEREPhh>
    2418:	8a 81       	ldd	r24, Y+2	; 0x02
    241a:	99 81       	ldd	r25, Y+1	; 0x01
    241c:	c8 2e       	mov	r12, r24
    241e:	d1 2c       	mov	r13, r1
    2420:	45 e0       	ldi	r20, 0x05	; 5
    2422:	d5 94       	asr	r13
    2424:	c7 94       	ror	r12
    2426:	4a 95       	dec	r20
    2428:	e1 f7       	brne	.-8      	; 0x2422 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0x4e>
    242a:	e8 e0       	ldi	r30, 0x08	; 8
    242c:	9e 9f       	mul	r25, r30
    242e:	c0 0c       	add	r12, r0
    2430:	d1 1c       	adc	r13, r1
    2432:	11 24       	eor	r1, r1
    2434:	0d 2c       	mov	r0, r13
    2436:	00 0c       	add	r0, r0
    2438:	ee 08       	sbc	r14, r14
    243a:	ff 08       	sbc	r15, r15
    243c:	83 ff       	sbrs	r24, 3
    243e:	20 c0       	rjmp	.+64     	; 0x2480 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0xac>
    2440:	92 e0       	ldi	r25, 0x02	; 2
    2442:	cc 0c       	add	r12, r12
    2444:	dd 1c       	adc	r13, r13
    2446:	ee 1c       	adc	r14, r14
    2448:	ff 1c       	adc	r15, r15
    244a:	9a 95       	dec	r25
    244c:	d1 f7       	brne	.-12     	; 0x2442 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0x6e>
    244e:	83 70       	andi	r24, 0x03	; 3
    2450:	c8 0e       	add	r12, r24
    2452:	d1 1c       	adc	r13, r1
    2454:	e1 1c       	adc	r14, r1
    2456:	f1 1c       	adc	r15, r1
    2458:	fe 2c       	mov	r15, r14
    245a:	ed 2c       	mov	r14, r13
    245c:	dc 2c       	mov	r13, r12
    245e:	cc 24       	eor	r12, r12
    2460:	8b 81       	ldd	r24, Y+3	; 0x03
    2462:	c8 0e       	add	r12, r24
    2464:	d1 1c       	adc	r13, r1
    2466:	e1 1c       	adc	r14, r1
    2468:	f1 1c       	adc	r15, r1
    246a:	fe 2c       	mov	r15, r14
    246c:	ed 2c       	mov	r14, r13
    246e:	dc 2c       	mov	r13, r12
    2470:	cc 24       	eor	r12, r12
    2472:	8c 81       	ldd	r24, Y+4	; 0x04
    2474:	c8 0e       	add	r12, r24
    2476:	d1 1c       	adc	r13, r1
    2478:	e1 1c       	adc	r14, r1
    247a:	f1 1c       	adc	r15, r1
    247c:	68 94       	set
    247e:	f7 f8       	bld	r15, 7
    2480:	8d 81       	ldd	r24, Y+5	; 0x05
    2482:	8f 70       	andi	r24, 0x0F	; 15
    2484:	78 2e       	mov	r7, r24
    2486:	f8 e0       	ldi	r31, 0x08	; 8
    2488:	f8 17       	cp	r31, r24
    248a:	28 f1       	brcs	.+74     	; 0x24d6 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0x102>
    248c:	f8 01       	movw	r30, r16
    248e:	e2 5a       	subi	r30, 0xA2	; 162
    2490:	fd 4f       	sbci	r31, 0xFD	; 253
    2492:	60 81       	ld	r22, Z
    2494:	c4 01       	movw	r24, r8
    2496:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN7MCP251512readRegisterENS_8REGISTERE>
    249a:	83 ff       	sbrs	r24, 3
    249c:	02 c0       	rjmp	.+4      	; 0x24a2 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0xce>
    249e:	68 94       	set
    24a0:	f6 f8       	bld	r15, 6
    24a2:	f5 01       	movw	r30, r10
    24a4:	c0 82       	st	Z, r12
    24a6:	d1 82       	std	Z+1, r13	; 0x01
    24a8:	e2 82       	std	Z+2, r14	; 0x02
    24aa:	f3 82       	std	Z+3, r15	; 0x03
    24ac:	74 82       	std	Z+4, r7	; 0x04
    24ae:	a5 01       	movw	r20, r10
    24b0:	48 5f       	subi	r20, 0xF8	; 248
    24b2:	5f 4f       	sbci	r21, 0xFF	; 255
    24b4:	02 5a       	subi	r16, 0xA2	; 162
    24b6:	1d 4f       	sbci	r17, 0xFD	; 253
    24b8:	27 2d       	mov	r18, r7
    24ba:	f8 01       	movw	r30, r16
    24bc:	62 81       	ldd	r22, Z+2	; 0x02
    24be:	c4 01       	movw	r24, r8
    24c0:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <_ZN7MCP251513readRegistersENS_8REGISTEREPhh>
    24c4:	20 e0       	ldi	r18, 0x00	; 0
    24c6:	f8 01       	movw	r30, r16
    24c8:	43 81       	ldd	r20, Z+3	; 0x03
    24ca:	6c e2       	ldi	r22, 0x2C	; 44
    24cc:	c4 01       	movw	r24, r8
    24ce:	0e 94 77 0e 	call	0x1cee	; 0x1cee <_ZN7MCP251514modifyRegisterENS_8REGISTEREhh>
    24d2:	80 e0       	ldi	r24, 0x00	; 0
    24d4:	01 c0       	rjmp	.+2      	; 0x24d8 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame+0x104>
    24d6:	81 e0       	ldi	r24, 0x01	; 1
    24d8:	0f 90       	pop	r0
    24da:	0f 90       	pop	r0
    24dc:	0f 90       	pop	r0
    24de:	0f 90       	pop	r0
    24e0:	0f 90       	pop	r0
    24e2:	df 91       	pop	r29
    24e4:	cf 91       	pop	r28
    24e6:	1f 91       	pop	r17
    24e8:	0f 91       	pop	r16
    24ea:	ff 90       	pop	r15
    24ec:	ef 90       	pop	r14
    24ee:	df 90       	pop	r13
    24f0:	cf 90       	pop	r12
    24f2:	bf 90       	pop	r11
    24f4:	af 90       	pop	r10
    24f6:	9f 90       	pop	r9
    24f8:	8f 90       	pop	r8
    24fa:	7f 90       	pop	r7
    24fc:	08 95       	ret

000024fe <_ZN7MCP251511readMessageEP9can_frame>:
    24fe:	0f 93       	push	r16
    2500:	1f 93       	push	r17
    2502:	cf 93       	push	r28
    2504:	df 93       	push	r29
    2506:	ec 01       	movw	r28, r24
    2508:	8b 01       	movw	r16, r22
    250a:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <_ZN7MCP25159getStatusEv>
    250e:	80 ff       	sbrs	r24, 0
    2510:	03 c0       	rjmp	.+6      	; 0x2518 <_ZN7MCP251511readMessageEP9can_frame+0x1a>
    2512:	a8 01       	movw	r20, r16
    2514:	60 e0       	ldi	r22, 0x00	; 0
    2516:	04 c0       	rjmp	.+8      	; 0x2520 <_ZN7MCP251511readMessageEP9can_frame+0x22>
    2518:	81 ff       	sbrs	r24, 1
    251a:	09 c0       	rjmp	.+18     	; 0x252e <_ZN7MCP251511readMessageEP9can_frame+0x30>
    251c:	a8 01       	movw	r20, r16
    251e:	61 e0       	ldi	r22, 0x01	; 1
    2520:	ce 01       	movw	r24, r28
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	1f 91       	pop	r17
    2528:	0f 91       	pop	r16
    252a:	0c 94 ea 11 	jmp	0x23d4	; 0x23d4 <_ZN7MCP251511readMessageENS_4RXBnEP9can_frame>
    252e:	85 e0       	ldi	r24, 0x05	; 5
    2530:	df 91       	pop	r29
    2532:	cf 91       	pop	r28
    2534:	1f 91       	pop	r17
    2536:	0f 91       	pop	r16
    2538:	08 95       	ret

0000253a <_ZN17LiquidCrystal_I2CC1Ehhh>:
    253a:	fc 01       	movw	r30, r24
    253c:	13 82       	std	Z+3, r1	; 0x03
    253e:	12 82       	std	Z+2, r1	; 0x02
    2540:	83 e7       	ldi	r24, 0x73	; 115
    2542:	92 e0       	ldi	r25, 0x02	; 2
    2544:	91 83       	std	Z+1, r25	; 0x01
    2546:	80 83       	st	Z, r24
    2548:	64 83       	std	Z+4, r22	; 0x04
    254a:	41 87       	std	Z+9, r20	; 0x09
    254c:	22 87       	std	Z+10, r18	; 0x0a
    254e:	13 86       	std	Z+11, r1	; 0x0b
    2550:	08 95       	ret

00002552 <_ZN17LiquidCrystal_I2C13expanderWriteEh>:
    2552:	1f 93       	push	r17
    2554:	cf 93       	push	r28
    2556:	df 93       	push	r29
    2558:	ec 01       	movw	r28, r24
    255a:	16 2f       	mov	r17, r22
    255c:	6c 81       	ldd	r22, Y+4	; 0x04
    255e:	80 e3       	ldi	r24, 0x30	; 48
    2560:	93 e0       	ldi	r25, 0x03	; 3
    2562:	0e 94 d9 15 	call	0x2bb2	; 0x2bb2 <_ZN7TwoWire17beginTransmissionEh>
    2566:	6b 85       	ldd	r22, Y+11	; 0x0b
    2568:	61 2b       	or	r22, r17
    256a:	80 e3       	ldi	r24, 0x30	; 48
    256c:	93 e0       	ldi	r25, 0x03	; 3
    256e:	0e 94 88 15 	call	0x2b10	; 0x2b10 <_ZN7TwoWire5writeEh>
    2572:	80 e3       	ldi	r24, 0x30	; 48
    2574:	93 e0       	ldi	r25, 0x03	; 3
    2576:	df 91       	pop	r29
    2578:	cf 91       	pop	r28
    257a:	1f 91       	pop	r17
    257c:	0c 94 f6 15 	jmp	0x2bec	; 0x2bec <_ZN7TwoWire15endTransmissionEv>

00002580 <_ZN17LiquidCrystal_I2C9backlightEv>:
    2580:	28 e0       	ldi	r18, 0x08	; 8
    2582:	fc 01       	movw	r30, r24
    2584:	23 87       	std	Z+11, r18	; 0x0b
    2586:	60 e0       	ldi	r22, 0x00	; 0
    2588:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <_ZN17LiquidCrystal_I2C13expanderWriteEh>

0000258c <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
    258c:	0f 93       	push	r16
    258e:	1f 93       	push	r17
    2590:	cf 93       	push	r28
    2592:	8c 01       	movw	r16, r24
    2594:	c6 2f       	mov	r28, r22
    2596:	64 60       	ori	r22, 0x04	; 4
    2598:	0e 94 a9 12 	call	0x2552	; 0x2552 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    25a4:	6c 2f       	mov	r22, r28
    25a6:	6b 7f       	andi	r22, 0xFB	; 251
    25a8:	c8 01       	movw	r24, r16
    25aa:	0e 94 a9 12 	call	0x2552	; 0x2552 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    25ae:	82 e3       	ldi	r24, 0x32	; 50
    25b0:	90 e0       	ldi	r25, 0x00	; 0
    25b2:	cf 91       	pop	r28
    25b4:	1f 91       	pop	r17
    25b6:	0f 91       	pop	r16
    25b8:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <delayMicroseconds>

000025bc <_ZN17LiquidCrystal_I2C10write4bitsEh>:
    25bc:	1f 93       	push	r17
    25be:	cf 93       	push	r28
    25c0:	df 93       	push	r29
    25c2:	ec 01       	movw	r28, r24
    25c4:	16 2f       	mov	r17, r22
    25c6:	0e 94 a9 12 	call	0x2552	; 0x2552 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    25ca:	61 2f       	mov	r22, r17
    25cc:	ce 01       	movw	r24, r28
    25ce:	df 91       	pop	r29
    25d0:	cf 91       	pop	r28
    25d2:	1f 91       	pop	r17
    25d4:	0c 94 c6 12 	jmp	0x258c	; 0x258c <_ZN17LiquidCrystal_I2C11pulseEnableEh>

000025d8 <_ZN17LiquidCrystal_I2C4sendEhh>:
    25d8:	0f 93       	push	r16
    25da:	1f 93       	push	r17
    25dc:	cf 93       	push	r28
    25de:	df 93       	push	r29
    25e0:	8c 01       	movw	r16, r24
    25e2:	c6 2f       	mov	r28, r22
    25e4:	d4 2f       	mov	r29, r20
    25e6:	60 7f       	andi	r22, 0xF0	; 240
    25e8:	64 2b       	or	r22, r20
    25ea:	0e 94 de 12 	call	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>
    25ee:	80 e1       	ldi	r24, 0x10	; 16
    25f0:	c8 9f       	mul	r28, r24
    25f2:	b0 01       	movw	r22, r0
    25f4:	11 24       	eor	r1, r1
    25f6:	6d 2b       	or	r22, r29
    25f8:	c8 01       	movw	r24, r16
    25fa:	df 91       	pop	r29
    25fc:	cf 91       	pop	r28
    25fe:	1f 91       	pop	r17
    2600:	0f 91       	pop	r16
    2602:	0c 94 de 12 	jmp	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>

00002606 <_ZN17LiquidCrystal_I2C7commandEh>:
    2606:	40 e0       	ldi	r20, 0x00	; 0
    2608:	0c 94 ec 12 	jmp	0x25d8	; 0x25d8 <_ZN17LiquidCrystal_I2C4sendEhh>

0000260c <_ZN17LiquidCrystal_I2C5clearEv>:
    260c:	cf 93       	push	r28
    260e:	df 93       	push	r29
    2610:	ec 01       	movw	r28, r24
    2612:	68 e0       	ldi	r22, 0x08	; 8
    2614:	0e 94 03 13 	call	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>
    2618:	88 ee       	ldi	r24, 0xE8	; 232
    261a:	93 e0       	ldi	r25, 0x03	; 3
    261c:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    2620:	67 e1       	ldi	r22, 0x17	; 23
    2622:	ce 01       	movw	r24, r28
    2624:	0e 94 03 13 	call	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>
    2628:	88 ee       	ldi	r24, 0xE8	; 232
    262a:	93 e0       	ldi	r25, 0x03	; 3
    262c:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    2630:	61 e0       	ldi	r22, 0x01	; 1
    2632:	ce 01       	movw	r24, r28
    2634:	0e 94 03 13 	call	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>
    2638:	88 ee       	ldi	r24, 0xE8	; 232
    263a:	93 e0       	ldi	r25, 0x03	; 3
    263c:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    2640:	6c e0       	ldi	r22, 0x0C	; 12
    2642:	ce 01       	movw	r24, r28
    2644:	0e 94 03 13 	call	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>
    2648:	88 ee       	ldi	r24, 0xE8	; 232
    264a:	93 e0       	ldi	r25, 0x03	; 3
    264c:	df 91       	pop	r29
    264e:	cf 91       	pop	r28
    2650:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <delayMicroseconds>

00002654 <_ZN17LiquidCrystal_I2C4homeEv>:
    2654:	62 e0       	ldi	r22, 0x02	; 2
    2656:	0e 94 03 13 	call	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>
    265a:	80 ed       	ldi	r24, 0xD0	; 208
    265c:	97 e0       	ldi	r25, 0x07	; 7
    265e:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <delayMicroseconds>

00002662 <_ZN17LiquidCrystal_I2C9setCursorEhh>:
    2662:	cf 93       	push	r28
    2664:	df 93       	push	r29
    2666:	cd b7       	in	r28, 0x3d	; 61
    2668:	de b7       	in	r29, 0x3e	; 62
    266a:	28 97       	sbiw	r28, 0x08	; 8
    266c:	0f b6       	in	r0, 0x3f	; 63
    266e:	f8 94       	cli
    2670:	de bf       	out	0x3e, r29	; 62
    2672:	0f be       	out	0x3f, r0	; 63
    2674:	cd bf       	out	0x3d, r28	; 61
    2676:	9c 01       	movw	r18, r24
    2678:	88 e0       	ldi	r24, 0x08	; 8
    267a:	e1 e2       	ldi	r30, 0x21	; 33
    267c:	f1 e0       	ldi	r31, 0x01	; 1
    267e:	de 01       	movw	r26, r28
    2680:	11 96       	adiw	r26, 0x01	; 1
    2682:	01 90       	ld	r0, Z+
    2684:	0d 92       	st	X+, r0
    2686:	8a 95       	dec	r24
    2688:	e1 f7       	brne	.-8      	; 0x2682 <_ZN17LiquidCrystal_I2C9setCursorEhh+0x20>
    268a:	f9 01       	movw	r30, r18
    268c:	80 85       	ldd	r24, Z+8	; 0x08
    268e:	84 17       	cp	r24, r20
    2690:	10 f4       	brcc	.+4      	; 0x2696 <_ZN17LiquidCrystal_I2C9setCursorEhh+0x34>
    2692:	4f ef       	ldi	r20, 0xFF	; 255
    2694:	48 0f       	add	r20, r24
    2696:	fe 01       	movw	r30, r28
    2698:	31 96       	adiw	r30, 0x01	; 1
    269a:	e4 0f       	add	r30, r20
    269c:	f1 1d       	adc	r31, r1
    269e:	e4 0f       	add	r30, r20
    26a0:	f1 1d       	adc	r31, r1
    26a2:	90 81       	ld	r25, Z
    26a4:	69 0f       	add	r22, r25
    26a6:	60 68       	ori	r22, 0x80	; 128
    26a8:	c9 01       	movw	r24, r18
    26aa:	28 96       	adiw	r28, 0x08	; 8
    26ac:	0f b6       	in	r0, 0x3f	; 63
    26ae:	f8 94       	cli
    26b0:	de bf       	out	0x3e, r29	; 62
    26b2:	0f be       	out	0x3f, r0	; 63
    26b4:	cd bf       	out	0x3d, r28	; 61
    26b6:	df 91       	pop	r29
    26b8:	cf 91       	pop	r28
    26ba:	0c 94 03 13 	jmp	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>

000026be <_ZN17LiquidCrystal_I2C7displayEv>:
    26be:	fc 01       	movw	r30, r24
    26c0:	66 81       	ldd	r22, Z+6	; 0x06
    26c2:	26 2f       	mov	r18, r22
    26c4:	24 60       	ori	r18, 0x04	; 4
    26c6:	26 83       	std	Z+6, r18	; 0x06
    26c8:	6c 60       	ori	r22, 0x0C	; 12
    26ca:	0c 94 03 13 	jmp	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>

000026ce <_ZN17LiquidCrystal_I2C5writeEh>:
    26ce:	41 e0       	ldi	r20, 0x01	; 1
    26d0:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <_ZN17LiquidCrystal_I2C4sendEhh>
    26d4:	81 e0       	ldi	r24, 0x01	; 1
    26d6:	90 e0       	ldi	r25, 0x00	; 0
    26d8:	08 95       	ret

000026da <_ZN17LiquidCrystal_I2C6outStrEPc>:
    26da:	0f 93       	push	r16
    26dc:	1f 93       	push	r17
    26de:	cf 93       	push	r28
    26e0:	df 93       	push	r29
    26e2:	ec 01       	movw	r28, r24
    26e4:	8b 01       	movw	r16, r22
    26e6:	f8 01       	movw	r30, r16
    26e8:	61 91       	ld	r22, Z+
    26ea:	8f 01       	movw	r16, r30
    26ec:	66 23       	and	r22, r22
    26ee:	09 f4       	brne	.+2      	; 0x26f2 <_ZN17LiquidCrystal_I2C6outStrEPc+0x18>
    26f0:	d1 c0       	rjmp	.+418    	; 0x2894 <_ZN17LiquidCrystal_I2C6outStrEPc+0x1ba>
    26f2:	86 2f       	mov	r24, r22
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	fc 01       	movw	r30, r24
    26f8:	f0 97       	sbiw	r30, 0x30	; 48
    26fa:	e2 3a       	cpi	r30, 0xA2	; 162
    26fc:	f1 05       	cpc	r31, r1
    26fe:	08 f0       	brcs	.+2      	; 0x2702 <_ZN17LiquidCrystal_I2C6outStrEPc+0x28>
    2700:	c4 c0       	rjmp	.+392    	; 0x288a <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b0>
    2702:	e0 5a       	subi	r30, 0xA0	; 160
    2704:	ff 4f       	sbci	r31, 0xFF	; 255
    2706:	0c 94 17 18 	jmp	0x302e	; 0x302e <__tablejump2__>
    270a:	41 e0       	ldi	r20, 0x01	; 1
    270c:	60 e7       	ldi	r22, 0x70	; 112
    270e:	be c0       	rjmp	.+380    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2710:	41 e0       	ldi	r20, 0x01	; 1
    2712:	63 e6       	ldi	r22, 0x63	; 99
    2714:	bb c0       	rjmp	.+374    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2716:	41 e0       	ldi	r20, 0x01	; 1
    2718:	6f eb       	ldi	r22, 0xBF	; 191
    271a:	b8 c0       	rjmp	.+368    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    271c:	41 e0       	ldi	r20, 0x01	; 1
    271e:	69 e7       	ldi	r22, 0x79	; 121
    2720:	b5 c0       	rjmp	.+362    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2722:	41 e0       	ldi	r20, 0x01	; 1
    2724:	64 ee       	ldi	r22, 0xE4	; 228
    2726:	b2 c0       	rjmp	.+356    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2728:	41 e0       	ldi	r20, 0x01	; 1
    272a:	68 e7       	ldi	r22, 0x78	; 120
    272c:	af c0       	rjmp	.+350    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    272e:	41 e0       	ldi	r20, 0x01	; 1
    2730:	65 ee       	ldi	r22, 0xE5	; 229
    2732:	ac c0       	rjmp	.+344    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2734:	41 e0       	ldi	r20, 0x01	; 1
    2736:	60 ec       	ldi	r22, 0xC0	; 192
    2738:	a9 c0       	rjmp	.+338    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    273a:	41 e0       	ldi	r20, 0x01	; 1
    273c:	61 ec       	ldi	r22, 0xC1	; 193
    273e:	a6 c0       	rjmp	.+332    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2740:	41 e0       	ldi	r20, 0x01	; 1
    2742:	66 ee       	ldi	r22, 0xE6	; 230
    2744:	a3 c0       	rjmp	.+326    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2746:	41 e0       	ldi	r20, 0x01	; 1
    2748:	62 ec       	ldi	r22, 0xC2	; 194
    274a:	a0 c0       	rjmp	.+320    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    274c:	41 e0       	ldi	r20, 0x01	; 1
    274e:	63 ec       	ldi	r22, 0xC3	; 195
    2750:	9d c0       	rjmp	.+314    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2752:	41 e0       	ldi	r20, 0x01	; 1
    2754:	64 ec       	ldi	r22, 0xC4	; 196
    2756:	9a c0       	rjmp	.+308    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2758:	41 e0       	ldi	r20, 0x01	; 1
    275a:	65 ec       	ldi	r22, 0xC5	; 197
    275c:	97 c0       	rjmp	.+302    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    275e:	41 e0       	ldi	r20, 0x01	; 1
    2760:	66 ec       	ldi	r22, 0xC6	; 198
    2762:	94 c0       	rjmp	.+296    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2764:	41 e0       	ldi	r20, 0x01	; 1
    2766:	67 ec       	ldi	r22, 0xC7	; 199
    2768:	91 c0       	rjmp	.+290    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    276a:	41 e0       	ldi	r20, 0x01	; 1
    276c:	61 e4       	ldi	r22, 0x41	; 65
    276e:	8e c0       	rjmp	.+284    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2770:	41 e0       	ldi	r20, 0x01	; 1
    2772:	60 ea       	ldi	r22, 0xA0	; 160
    2774:	8b c0       	rjmp	.+278    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2776:	41 e0       	ldi	r20, 0x01	; 1
    2778:	62 e4       	ldi	r22, 0x42	; 66
    277a:	88 c0       	rjmp	.+272    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    277c:	41 e0       	ldi	r20, 0x01	; 1
    277e:	61 ea       	ldi	r22, 0xA1	; 161
    2780:	85 c0       	rjmp	.+266    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2782:	41 e0       	ldi	r20, 0x01	; 1
    2784:	60 ee       	ldi	r22, 0xE0	; 224
    2786:	82 c0       	rjmp	.+260    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2788:	41 e0       	ldi	r20, 0x01	; 1
    278a:	65 e4       	ldi	r22, 0x45	; 69
    278c:	7f c0       	rjmp	.+254    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    278e:	41 e0       	ldi	r20, 0x01	; 1
    2790:	63 ea       	ldi	r22, 0xA3	; 163
    2792:	7c c0       	rjmp	.+248    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2794:	41 e0       	ldi	r20, 0x01	; 1
    2796:	64 ea       	ldi	r22, 0xA4	; 164
    2798:	79 c0       	rjmp	.+242    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    279a:	41 e0       	ldi	r20, 0x01	; 1
    279c:	65 ea       	ldi	r22, 0xA5	; 165
    279e:	76 c0       	rjmp	.+236    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27a0:	41 e0       	ldi	r20, 0x01	; 1
    27a2:	66 ea       	ldi	r22, 0xA6	; 166
    27a4:	73 c0       	rjmp	.+230    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27a6:	41 e0       	ldi	r20, 0x01	; 1
    27a8:	6b e4       	ldi	r22, 0x4B	; 75
    27aa:	70 c0       	rjmp	.+224    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27ac:	41 e0       	ldi	r20, 0x01	; 1
    27ae:	67 ea       	ldi	r22, 0xA7	; 167
    27b0:	6d c0       	rjmp	.+218    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27b2:	41 e0       	ldi	r20, 0x01	; 1
    27b4:	6d e4       	ldi	r22, 0x4D	; 77
    27b6:	6a c0       	rjmp	.+212    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27b8:	41 e0       	ldi	r20, 0x01	; 1
    27ba:	68 e4       	ldi	r22, 0x48	; 72
    27bc:	67 c0       	rjmp	.+206    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27be:	41 e0       	ldi	r20, 0x01	; 1
    27c0:	6f e4       	ldi	r22, 0x4F	; 79
    27c2:	64 c0       	rjmp	.+200    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27c4:	41 e0       	ldi	r20, 0x01	; 1
    27c6:	68 ea       	ldi	r22, 0xA8	; 168
    27c8:	61 c0       	rjmp	.+194    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27ca:	41 e0       	ldi	r20, 0x01	; 1
    27cc:	60 e5       	ldi	r22, 0x50	; 80
    27ce:	5e c0       	rjmp	.+188    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27d0:	41 e0       	ldi	r20, 0x01	; 1
    27d2:	63 e4       	ldi	r22, 0x43	; 67
    27d4:	5b c0       	rjmp	.+182    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27d6:	41 e0       	ldi	r20, 0x01	; 1
    27d8:	64 e5       	ldi	r22, 0x54	; 84
    27da:	58 c0       	rjmp	.+176    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27dc:	41 e0       	ldi	r20, 0x01	; 1
    27de:	69 ea       	ldi	r22, 0xA9	; 169
    27e0:	55 c0       	rjmp	.+170    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27e2:	41 e0       	ldi	r20, 0x01	; 1
    27e4:	6a ea       	ldi	r22, 0xAA	; 170
    27e6:	52 c0       	rjmp	.+164    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27e8:	41 e0       	ldi	r20, 0x01	; 1
    27ea:	68 e5       	ldi	r22, 0x58	; 88
    27ec:	4f c0       	rjmp	.+158    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27ee:	41 e0       	ldi	r20, 0x01	; 1
    27f0:	61 ee       	ldi	r22, 0xE1	; 225
    27f2:	4c c0       	rjmp	.+152    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27f4:	41 e0       	ldi	r20, 0x01	; 1
    27f6:	6b ea       	ldi	r22, 0xAB	; 171
    27f8:	49 c0       	rjmp	.+146    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    27fa:	41 e0       	ldi	r20, 0x01	; 1
    27fc:	6c ea       	ldi	r22, 0xAC	; 172
    27fe:	46 c0       	rjmp	.+140    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2800:	41 e0       	ldi	r20, 0x01	; 1
    2802:	62 ee       	ldi	r22, 0xE2	; 226
    2804:	43 c0       	rjmp	.+134    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2806:	41 e0       	ldi	r20, 0x01	; 1
    2808:	6d ea       	ldi	r22, 0xAD	; 173
    280a:	40 c0       	rjmp	.+128    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    280c:	41 e0       	ldi	r20, 0x01	; 1
    280e:	6e ea       	ldi	r22, 0xAE	; 174
    2810:	3d c0       	rjmp	.+122    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2812:	41 e0       	ldi	r20, 0x01	; 1
    2814:	62 e6       	ldi	r22, 0x62	; 98
    2816:	3a c0       	rjmp	.+116    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2818:	41 e0       	ldi	r20, 0x01	; 1
    281a:	6f ea       	ldi	r22, 0xAF	; 175
    281c:	37 c0       	rjmp	.+110    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    281e:	41 e0       	ldi	r20, 0x01	; 1
    2820:	60 eb       	ldi	r22, 0xB0	; 176
    2822:	34 c0       	rjmp	.+104    	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2824:	41 e0       	ldi	r20, 0x01	; 1
    2826:	61 eb       	ldi	r22, 0xB1	; 177
    2828:	31 c0       	rjmp	.+98     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    282a:	41 e0       	ldi	r20, 0x01	; 1
    282c:	61 e6       	ldi	r22, 0x61	; 97
    282e:	2e c0       	rjmp	.+92     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2830:	41 e0       	ldi	r20, 0x01	; 1
    2832:	62 eb       	ldi	r22, 0xB2	; 178
    2834:	2b c0       	rjmp	.+86     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2836:	41 e0       	ldi	r20, 0x01	; 1
    2838:	63 eb       	ldi	r22, 0xB3	; 179
    283a:	28 c0       	rjmp	.+80     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    283c:	41 e0       	ldi	r20, 0x01	; 1
    283e:	64 eb       	ldi	r22, 0xB4	; 180
    2840:	25 c0       	rjmp	.+74     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2842:	41 e0       	ldi	r20, 0x01	; 1
    2844:	63 ee       	ldi	r22, 0xE3	; 227
    2846:	22 c0       	rjmp	.+68     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2848:	41 e0       	ldi	r20, 0x01	; 1
    284a:	65 e6       	ldi	r22, 0x65	; 101
    284c:	1f c0       	rjmp	.+62     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    284e:	41 e0       	ldi	r20, 0x01	; 1
    2850:	66 eb       	ldi	r22, 0xB6	; 182
    2852:	1c c0       	rjmp	.+56     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2854:	41 e0       	ldi	r20, 0x01	; 1
    2856:	67 eb       	ldi	r22, 0xB7	; 183
    2858:	19 c0       	rjmp	.+50     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    285a:	41 e0       	ldi	r20, 0x01	; 1
    285c:	68 eb       	ldi	r22, 0xB8	; 184
    285e:	16 c0       	rjmp	.+44     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2860:	41 e0       	ldi	r20, 0x01	; 1
    2862:	69 eb       	ldi	r22, 0xB9	; 185
    2864:	13 c0       	rjmp	.+38     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2866:	41 e0       	ldi	r20, 0x01	; 1
    2868:	6a eb       	ldi	r22, 0xBA	; 186
    286a:	10 c0       	rjmp	.+32     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    286c:	41 e0       	ldi	r20, 0x01	; 1
    286e:	6b eb       	ldi	r22, 0xBB	; 187
    2870:	0d c0       	rjmp	.+26     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2872:	41 e0       	ldi	r20, 0x01	; 1
    2874:	6c eb       	ldi	r22, 0xBC	; 188
    2876:	0a c0       	rjmp	.+20     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2878:	41 e0       	ldi	r20, 0x01	; 1
    287a:	6d eb       	ldi	r22, 0xBD	; 189
    287c:	07 c0       	rjmp	.+14     	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    287e:	41 e0       	ldi	r20, 0x01	; 1
    2880:	6f e6       	ldi	r22, 0x6F	; 111
    2882:	04 c0       	rjmp	.+8      	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    2884:	41 e0       	ldi	r20, 0x01	; 1
    2886:	6e eb       	ldi	r22, 0xBE	; 190
    2888:	01 c0       	rjmp	.+2      	; 0x288c <_ZN17LiquidCrystal_I2C6outStrEPc+0x1b2>
    288a:	41 e0       	ldi	r20, 0x01	; 1
    288c:	ce 01       	movw	r24, r28
    288e:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <_ZN17LiquidCrystal_I2C4sendEhh>
    2892:	29 cf       	rjmp	.-430    	; 0x26e6 <_ZN17LiquidCrystal_I2C6outStrEPc+0xc>
    2894:	df 91       	pop	r29
    2896:	cf 91       	pop	r28
    2898:	1f 91       	pop	r17
    289a:	0f 91       	pop	r16
    289c:	08 95       	ret

0000289e <_ZN17LiquidCrystal_I2C5beginEhhh>:
    289e:	cf 93       	push	r28
    28a0:	df 93       	push	r29
    28a2:	ec 01       	movw	r28, r24
    28a4:	42 30       	cpi	r20, 0x02	; 2
    28a6:	18 f0       	brcs	.+6      	; 0x28ae <_ZN17LiquidCrystal_I2C5beginEhhh+0x10>
    28a8:	8d 81       	ldd	r24, Y+5	; 0x05
    28aa:	88 60       	ori	r24, 0x08	; 8
    28ac:	8d 83       	std	Y+5, r24	; 0x05
    28ae:	48 87       	std	Y+8, r20	; 0x08
    28b0:	22 23       	and	r18, r18
    28b2:	29 f0       	breq	.+10     	; 0x28be <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
    28b4:	41 30       	cpi	r20, 0x01	; 1
    28b6:	19 f4       	brne	.+6      	; 0x28be <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
    28b8:	8d 81       	ldd	r24, Y+5	; 0x05
    28ba:	84 60       	ori	r24, 0x04	; 4
    28bc:	8d 83       	std	Y+5, r24	; 0x05
    28be:	62 e3       	ldi	r22, 0x32	; 50
    28c0:	70 e0       	ldi	r23, 0x00	; 0
    28c2:	80 e0       	ldi	r24, 0x00	; 0
    28c4:	90 e0       	ldi	r25, 0x00	; 0
    28c6:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <delay>
    28ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    28cc:	ce 01       	movw	r24, r28
    28ce:	0e 94 a9 12 	call	0x2552	; 0x2552 <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    28d2:	68 ee       	ldi	r22, 0xE8	; 232
    28d4:	73 e0       	ldi	r23, 0x03	; 3
    28d6:	80 e0       	ldi	r24, 0x00	; 0
    28d8:	90 e0       	ldi	r25, 0x00	; 0
    28da:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <delay>
    28de:	60 e0       	ldi	r22, 0x00	; 0
    28e0:	ce 01       	movw	r24, r28
    28e2:	0e 94 de 12 	call	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>
    28e6:	84 e6       	ldi	r24, 0x64	; 100
    28e8:	90 e0       	ldi	r25, 0x00	; 0
    28ea:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    28ee:	60 e0       	ldi	r22, 0x00	; 0
    28f0:	ce 01       	movw	r24, r28
    28f2:	0e 94 de 12 	call	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>
    28f6:	84 e6       	ldi	r24, 0x64	; 100
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    28fe:	60 e0       	ldi	r22, 0x00	; 0
    2900:	ce 01       	movw	r24, r28
    2902:	0e 94 de 12 	call	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>
    2906:	84 e6       	ldi	r24, 0x64	; 100
    2908:	90 e0       	ldi	r25, 0x00	; 0
    290a:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    290e:	60 e0       	ldi	r22, 0x00	; 0
    2910:	ce 01       	movw	r24, r28
    2912:	0e 94 de 12 	call	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>
    2916:	84 e6       	ldi	r24, 0x64	; 100
    2918:	90 e0       	ldi	r25, 0x00	; 0
    291a:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    291e:	60 e0       	ldi	r22, 0x00	; 0
    2920:	ce 01       	movw	r24, r28
    2922:	0e 94 de 12 	call	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>
    2926:	86 e9       	ldi	r24, 0x96	; 150
    2928:	90 e0       	ldi	r25, 0x00	; 0
    292a:	0e 94 9c 0c 	call	0x1938	; 0x1938 <delayMicroseconds>
    292e:	60 e2       	ldi	r22, 0x20	; 32
    2930:	ce 01       	movw	r24, r28
    2932:	0e 94 de 12 	call	0x25bc	; 0x25bc <_ZN17LiquidCrystal_I2C10write4bitsEh>
    2936:	6d 81       	ldd	r22, Y+5	; 0x05
    2938:	60 62       	ori	r22, 0x20	; 32
    293a:	ce 01       	movw	r24, r28
    293c:	0e 94 03 13 	call	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>
    2940:	84 e0       	ldi	r24, 0x04	; 4
    2942:	8e 83       	std	Y+6, r24	; 0x06
    2944:	ce 01       	movw	r24, r28
    2946:	0e 94 5f 13 	call	0x26be	; 0x26be <_ZN17LiquidCrystal_I2C7displayEv>
    294a:	82 e0       	ldi	r24, 0x02	; 2
    294c:	8f 83       	std	Y+7, r24	; 0x07
    294e:	66 e0       	ldi	r22, 0x06	; 6
    2950:	ce 01       	movw	r24, r28
    2952:	0e 94 03 13 	call	0x2606	; 0x2606 <_ZN17LiquidCrystal_I2C7commandEh>
    2956:	ce 01       	movw	r24, r28
    2958:	df 91       	pop	r29
    295a:	cf 91       	pop	r28
    295c:	0c 94 2a 13 	jmp	0x2654	; 0x2654 <_ZN17LiquidCrystal_I2C4homeEv>

00002960 <_ZN17LiquidCrystal_I2C9init_privEv>:
    2960:	cf 93       	push	r28
    2962:	df 93       	push	r29
    2964:	ec 01       	movw	r28, r24
    2966:	80 e3       	ldi	r24, 0x30	; 48
    2968:	93 e0       	ldi	r25, 0x03	; 3
    296a:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <_ZN7TwoWire5beginEv>
    296e:	82 e0       	ldi	r24, 0x02	; 2
    2970:	8d 83       	std	Y+5, r24	; 0x05
    2972:	20 e0       	ldi	r18, 0x00	; 0
    2974:	4a 85       	ldd	r20, Y+10	; 0x0a
    2976:	69 85       	ldd	r22, Y+9	; 0x09
    2978:	ce 01       	movw	r24, r28
    297a:	df 91       	pop	r29
    297c:	cf 91       	pop	r28
    297e:	0c 94 4f 14 	jmp	0x289e	; 0x289e <_ZN17LiquidCrystal_I2C5beginEhhh>

00002982 <_ZN17LiquidCrystal_I2C4initEv>:
    2982:	0c 94 b0 14 	jmp	0x2960	; 0x2960 <_ZN17LiquidCrystal_I2C9init_privEv>

00002986 <_ZN8SPIClass5beginEv>:
    2986:	cf 93       	push	r28
    2988:	cf b7       	in	r28, 0x3f	; 63
    298a:	f8 94       	cli
    298c:	80 91 2f 03 	lds	r24, 0x032F	; 0x80032f <_ZN8SPIClass11initializedE>
    2990:	81 11       	cpse	r24, r1
    2992:	27 c0       	rjmp	.+78     	; 0x29e2 <_ZN8SPIClass5beginEv+0x5c>
    2994:	e6 e3       	ldi	r30, 0x36	; 54
    2996:	f2 e0       	ldi	r31, 0x02	; 2
    2998:	84 91       	lpm	r24, Z
    299a:	e2 e2       	ldi	r30, 0x22	; 34
    299c:	f2 e0       	ldi	r31, 0x02	; 2
    299e:	94 91       	lpm	r25, Z
    29a0:	e8 2f       	mov	r30, r24
    29a2:	f0 e0       	ldi	r31, 0x00	; 0
    29a4:	ee 0f       	add	r30, r30
    29a6:	ff 1f       	adc	r31, r31
    29a8:	ec 5a       	subi	r30, 0xAC	; 172
    29aa:	fd 4f       	sbci	r31, 0xFD	; 253
    29ac:	a5 91       	lpm	r26, Z+
    29ae:	b4 91       	lpm	r27, Z
    29b0:	ec 91       	ld	r30, X
    29b2:	e9 23       	and	r30, r25
    29b4:	21 f4       	brne	.+8      	; 0x29be <_ZN8SPIClass5beginEv+0x38>
    29b6:	61 e0       	ldi	r22, 0x01	; 1
    29b8:	8a e0       	ldi	r24, 0x0A	; 10
    29ba:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <digitalWrite>
    29be:	61 e0       	ldi	r22, 0x01	; 1
    29c0:	8a e0       	ldi	r24, 0x0A	; 10
    29c2:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
    29c6:	8c b5       	in	r24, 0x2c	; 44
    29c8:	80 61       	ori	r24, 0x10	; 16
    29ca:	8c bd       	out	0x2c, r24	; 44
    29cc:	8c b5       	in	r24, 0x2c	; 44
    29ce:	80 64       	ori	r24, 0x40	; 64
    29d0:	8c bd       	out	0x2c, r24	; 44
    29d2:	61 e0       	ldi	r22, 0x01	; 1
    29d4:	8d e0       	ldi	r24, 0x0D	; 13
    29d6:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
    29da:	61 e0       	ldi	r22, 0x01	; 1
    29dc:	8b e0       	ldi	r24, 0x0B	; 11
    29de:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <pinMode>
    29e2:	80 91 2f 03 	lds	r24, 0x032F	; 0x80032f <_ZN8SPIClass11initializedE>
    29e6:	8f 5f       	subi	r24, 0xFF	; 255
    29e8:	80 93 2f 03 	sts	0x032F, r24	; 0x80032f <_ZN8SPIClass11initializedE>
    29ec:	cf bf       	out	0x3f, r28	; 63
    29ee:	cf 91       	pop	r28
    29f0:	08 95       	ret

000029f2 <_ZN7TwoWire9availableEv>:
    29f2:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <_ZN7TwoWire14rxBufferLengthE>
    29f6:	90 e0       	ldi	r25, 0x00	; 0
    29f8:	20 91 65 03 	lds	r18, 0x0365	; 0x800365 <_ZN7TwoWire13rxBufferIndexE>
    29fc:	82 1b       	sub	r24, r18
    29fe:	91 09       	sbc	r25, r1
    2a00:	08 95       	ret

00002a02 <_ZN7TwoWire4readEv>:
    2a02:	90 91 65 03 	lds	r25, 0x0365	; 0x800365 <_ZN7TwoWire13rxBufferIndexE>
    2a06:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <_ZN7TwoWire14rxBufferLengthE>
    2a0a:	98 17       	cp	r25, r24
    2a0c:	50 f4       	brcc	.+20     	; 0x2a22 <_ZN7TwoWire4readEv+0x20>
    2a0e:	e9 2f       	mov	r30, r25
    2a10:	f0 e0       	ldi	r31, 0x00	; 0
    2a12:	ea 59       	subi	r30, 0x9A	; 154
    2a14:	fc 4f       	sbci	r31, 0xFC	; 252
    2a16:	20 81       	ld	r18, Z
    2a18:	30 e0       	ldi	r19, 0x00	; 0
    2a1a:	9f 5f       	subi	r25, 0xFF	; 255
    2a1c:	90 93 65 03 	sts	0x0365, r25	; 0x800365 <_ZN7TwoWire13rxBufferIndexE>
    2a20:	02 c0       	rjmp	.+4      	; 0x2a26 <_ZN7TwoWire4readEv+0x24>
    2a22:	2f ef       	ldi	r18, 0xFF	; 255
    2a24:	3f ef       	ldi	r19, 0xFF	; 255
    2a26:	c9 01       	movw	r24, r18
    2a28:	08 95       	ret

00002a2a <_ZN7TwoWire4peekEv>:
    2a2a:	e0 91 65 03 	lds	r30, 0x0365	; 0x800365 <_ZN7TwoWire13rxBufferIndexE>
    2a2e:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <_ZN7TwoWire14rxBufferLengthE>
    2a32:	e8 17       	cp	r30, r24
    2a34:	30 f4       	brcc	.+12     	; 0x2a42 <_ZN7TwoWire4peekEv+0x18>
    2a36:	f0 e0       	ldi	r31, 0x00	; 0
    2a38:	ea 59       	subi	r30, 0x9A	; 154
    2a3a:	fc 4f       	sbci	r31, 0xFC	; 252
    2a3c:	80 81       	ld	r24, Z
    2a3e:	90 e0       	ldi	r25, 0x00	; 0
    2a40:	08 95       	ret
    2a42:	8f ef       	ldi	r24, 0xFF	; 255
    2a44:	9f ef       	ldi	r25, 0xFF	; 255
    2a46:	08 95       	ret

00002a48 <_ZN7TwoWire5flushEv>:
    2a48:	08 95       	ret

00002a4a <_ZN7TwoWire16onReceiveServiceEPhi>:
    2a4a:	cf 93       	push	r28
    2a4c:	df 93       	push	r29
    2a4e:	ec 01       	movw	r28, r24
    2a50:	e0 91 3c 03 	lds	r30, 0x033C	; 0x80033c <_ZN7TwoWire14user_onReceiveE>
    2a54:	f0 91 3d 03 	lds	r31, 0x033D	; 0x80033d <_ZN7TwoWire14user_onReceiveE+0x1>
    2a58:	30 97       	sbiw	r30, 0x00	; 0
    2a5a:	f1 f0       	breq	.+60     	; 0x2a98 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    2a5c:	90 91 65 03 	lds	r25, 0x0365	; 0x800365 <_ZN7TwoWire13rxBufferIndexE>
    2a60:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <_ZN7TwoWire14rxBufferLengthE>
    2a64:	98 17       	cp	r25, r24
    2a66:	c0 f0       	brcs	.+48     	; 0x2a98 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    2a68:	90 e0       	ldi	r25, 0x00	; 0
    2a6a:	29 2f       	mov	r18, r25
    2a6c:	30 e0       	ldi	r19, 0x00	; 0
    2a6e:	26 17       	cp	r18, r22
    2a70:	37 07       	cpc	r19, r23
    2a72:	54 f4       	brge	.+20     	; 0x2a88 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    2a74:	de 01       	movw	r26, r28
    2a76:	a2 0f       	add	r26, r18
    2a78:	b3 1f       	adc	r27, r19
    2a7a:	4c 91       	ld	r20, X
    2a7c:	d9 01       	movw	r26, r18
    2a7e:	aa 59       	subi	r26, 0x9A	; 154
    2a80:	bc 4f       	sbci	r27, 0xFC	; 252
    2a82:	4c 93       	st	X, r20
    2a84:	9f 5f       	subi	r25, 0xFF	; 255
    2a86:	f1 cf       	rjmp	.-30     	; 0x2a6a <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    2a88:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <_ZN7TwoWire13rxBufferIndexE>
    2a8c:	60 93 64 03 	sts	0x0364, r22	; 0x800364 <_ZN7TwoWire14rxBufferLengthE>
    2a90:	cb 01       	movw	r24, r22
    2a92:	df 91       	pop	r29
    2a94:	cf 91       	pop	r28
    2a96:	09 94       	ijmp
    2a98:	df 91       	pop	r29
    2a9a:	cf 91       	pop	r28
    2a9c:	08 95       	ret

00002a9e <_ZN7TwoWire16onRequestServiceEv>:
    2a9e:	e0 91 3e 03 	lds	r30, 0x033E	; 0x80033e <_ZN7TwoWire14user_onRequestE>
    2aa2:	f0 91 3f 03 	lds	r31, 0x033F	; 0x80033f <_ZN7TwoWire14user_onRequestE+0x1>
    2aa6:	30 97       	sbiw	r30, 0x00	; 0
    2aa8:	29 f0       	breq	.+10     	; 0x2ab4 <_ZN7TwoWire16onRequestServiceEv+0x16>
    2aaa:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <_ZN7TwoWire13txBufferIndexE>
    2aae:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    2ab2:	09 94       	ijmp
    2ab4:	08 95       	ret

00002ab6 <_ZN7TwoWire5writeEPKhj>:
    2ab6:	cf 92       	push	r12
    2ab8:	df 92       	push	r13
    2aba:	ef 92       	push	r14
    2abc:	ff 92       	push	r15
    2abe:	0f 93       	push	r16
    2ac0:	1f 93       	push	r17
    2ac2:	cf 93       	push	r28
    2ac4:	df 93       	push	r29
    2ac6:	7c 01       	movw	r14, r24
    2ac8:	cb 01       	movw	r24, r22
    2aca:	8a 01       	movw	r16, r20
    2acc:	20 91 40 03 	lds	r18, 0x0340	; 0x800340 <_ZN7TwoWire12transmittingE>
    2ad0:	22 23       	and	r18, r18
    2ad2:	89 f0       	breq	.+34     	; 0x2af6 <_ZN7TwoWire5writeEPKhj+0x40>
    2ad4:	eb 01       	movw	r28, r22
    2ad6:	6b 01       	movw	r12, r22
    2ad8:	c4 0e       	add	r12, r20
    2ada:	d5 1e       	adc	r13, r21
    2adc:	cc 15       	cp	r28, r12
    2ade:	dd 05       	cpc	r29, r13
    2ae0:	69 f0       	breq	.+26     	; 0x2afc <_ZN7TwoWire5writeEPKhj+0x46>
    2ae2:	69 91       	ld	r22, Y+
    2ae4:	d7 01       	movw	r26, r14
    2ae6:	ed 91       	ld	r30, X+
    2ae8:	fc 91       	ld	r31, X
    2aea:	01 90       	ld	r0, Z+
    2aec:	f0 81       	ld	r31, Z
    2aee:	e0 2d       	mov	r30, r0
    2af0:	c7 01       	movw	r24, r14
    2af2:	09 95       	icall
    2af4:	f3 cf       	rjmp	.-26     	; 0x2adc <_ZN7TwoWire5writeEPKhj+0x26>
    2af6:	64 2f       	mov	r22, r20
    2af8:	0e 94 72 16 	call	0x2ce4	; 0x2ce4 <twi_transmit>
    2afc:	c8 01       	movw	r24, r16
    2afe:	df 91       	pop	r29
    2b00:	cf 91       	pop	r28
    2b02:	1f 91       	pop	r17
    2b04:	0f 91       	pop	r16
    2b06:	ff 90       	pop	r15
    2b08:	ef 90       	pop	r14
    2b0a:	df 90       	pop	r13
    2b0c:	cf 90       	pop	r12
    2b0e:	08 95       	ret

00002b10 <_ZN7TwoWire5writeEh>:
    2b10:	cf 93       	push	r28
    2b12:	df 93       	push	r29
    2b14:	1f 92       	push	r1
    2b16:	cd b7       	in	r28, 0x3d	; 61
    2b18:	de b7       	in	r29, 0x3e	; 62
    2b1a:	69 83       	std	Y+1, r22	; 0x01
    2b1c:	20 91 40 03 	lds	r18, 0x0340	; 0x800340 <_ZN7TwoWire12transmittingE>
    2b20:	22 23       	and	r18, r18
    2b22:	d1 f0       	breq	.+52     	; 0x2b58 <_ZN7TwoWire5writeEh+0x48>
    2b24:	20 91 41 03 	lds	r18, 0x0341	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    2b28:	20 32       	cpi	r18, 0x20	; 32
    2b2a:	40 f0       	brcs	.+16     	; 0x2b3c <_ZN7TwoWire5writeEh+0x2c>
    2b2c:	21 e0       	ldi	r18, 0x01	; 1
    2b2e:	30 e0       	ldi	r19, 0x00	; 0
    2b30:	fc 01       	movw	r30, r24
    2b32:	33 83       	std	Z+3, r19	; 0x03
    2b34:	22 83       	std	Z+2, r18	; 0x02
    2b36:	80 e0       	ldi	r24, 0x00	; 0
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	15 c0       	rjmp	.+42     	; 0x2b66 <_ZN7TwoWire5writeEh+0x56>
    2b3c:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <_ZN7TwoWire13txBufferIndexE>
    2b40:	e8 2f       	mov	r30, r24
    2b42:	f0 e0       	ldi	r31, 0x00	; 0
    2b44:	ed 5b       	subi	r30, 0xBD	; 189
    2b46:	fc 4f       	sbci	r31, 0xFC	; 252
    2b48:	99 81       	ldd	r25, Y+1	; 0x01
    2b4a:	90 83       	st	Z, r25
    2b4c:	8f 5f       	subi	r24, 0xFF	; 255
    2b4e:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <_ZN7TwoWire13txBufferIndexE>
    2b52:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    2b56:	05 c0       	rjmp	.+10     	; 0x2b62 <_ZN7TwoWire5writeEh+0x52>
    2b58:	61 e0       	ldi	r22, 0x01	; 1
    2b5a:	ce 01       	movw	r24, r28
    2b5c:	01 96       	adiw	r24, 0x01	; 1
    2b5e:	0e 94 72 16 	call	0x2ce4	; 0x2ce4 <twi_transmit>
    2b62:	81 e0       	ldi	r24, 0x01	; 1
    2b64:	90 e0       	ldi	r25, 0x00	; 0
    2b66:	0f 90       	pop	r0
    2b68:	df 91       	pop	r29
    2b6a:	cf 91       	pop	r28
    2b6c:	08 95       	ret

00002b6e <_ZN7TwoWireC1Ev>:
    2b6e:	fc 01       	movw	r30, r24
    2b70:	13 82       	std	Z+3, r1	; 0x03
    2b72:	12 82       	std	Z+2, r1	; 0x02
    2b74:	88 ee       	ldi	r24, 0xE8	; 232
    2b76:	93 e0       	ldi	r25, 0x03	; 3
    2b78:	a0 e0       	ldi	r26, 0x00	; 0
    2b7a:	b0 e0       	ldi	r27, 0x00	; 0
    2b7c:	84 83       	std	Z+4, r24	; 0x04
    2b7e:	95 83       	std	Z+5, r25	; 0x05
    2b80:	a6 83       	std	Z+6, r26	; 0x06
    2b82:	b7 83       	std	Z+7, r27	; 0x07
    2b84:	8f e7       	ldi	r24, 0x7F	; 127
    2b86:	92 e0       	ldi	r25, 0x02	; 2
    2b88:	91 83       	std	Z+1, r25	; 0x01
    2b8a:	80 83       	st	Z, r24
    2b8c:	08 95       	ret

00002b8e <_ZN7TwoWire5beginEv>:
    2b8e:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <_ZN7TwoWire13rxBufferIndexE>
    2b92:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <_ZN7TwoWire14rxBufferLengthE>
    2b96:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <_ZN7TwoWire13txBufferIndexE>
    2b9a:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    2b9e:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <twi_init>
    2ba2:	8f e4       	ldi	r24, 0x4F	; 79
    2ba4:	95 e1       	ldi	r25, 0x15	; 21
    2ba6:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <twi_attachSlaveTxEvent>
    2baa:	85 e2       	ldi	r24, 0x25	; 37
    2bac:	95 e1       	ldi	r25, 0x15	; 21
    2bae:	0c 94 9a 16 	jmp	0x2d34	; 0x2d34 <twi_attachSlaveRxEvent>

00002bb2 <_ZN7TwoWire17beginTransmissionEh>:
    2bb2:	81 e0       	ldi	r24, 0x01	; 1
    2bb4:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <_ZN7TwoWire12transmittingE>
    2bb8:	60 93 63 03 	sts	0x0363, r22	; 0x800363 <_ZN7TwoWire9txAddressE>
    2bbc:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <_ZN7TwoWire13txBufferIndexE>
    2bc0:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    2bc4:	08 95       	ret

00002bc6 <_ZN7TwoWire15endTransmissionEh>:
    2bc6:	0f 93       	push	r16
    2bc8:	06 2f       	mov	r16, r22
    2bca:	21 e0       	ldi	r18, 0x01	; 1
    2bcc:	40 91 41 03 	lds	r20, 0x0341	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    2bd0:	63 e4       	ldi	r22, 0x43	; 67
    2bd2:	73 e0       	ldi	r23, 0x03	; 3
    2bd4:	80 91 63 03 	lds	r24, 0x0363	; 0x800363 <_ZN7TwoWire9txAddressE>
    2bd8:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <twi_writeTo>
    2bdc:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <_ZN7TwoWire13txBufferIndexE>
    2be0:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <_ZN7TwoWire14txBufferLengthE>
    2be4:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <_ZN7TwoWire12transmittingE>
    2be8:	0f 91       	pop	r16
    2bea:	08 95       	ret

00002bec <_ZN7TwoWire15endTransmissionEv>:
    2bec:	61 e0       	ldi	r22, 0x01	; 1
    2bee:	0c 94 e3 15 	jmp	0x2bc6	; 0x2bc6 <_ZN7TwoWire15endTransmissionEh>

00002bf2 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
    2bf2:	80 e3       	ldi	r24, 0x30	; 48
    2bf4:	93 e0       	ldi	r25, 0x03	; 3
    2bf6:	0c 94 b7 15 	jmp	0x2b6e	; 0x2b6e <_ZN7TwoWireC1Ev>

00002bfa <yield>:
    2bfa:	08 95       	ret

00002bfc <twi_init>:
    2bfc:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <twi_state>
    2c00:	81 e0       	ldi	r24, 0x01	; 1
    2c02:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <twi_sendStop>
    2c06:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <twi_inRepStart>
    2c0a:	61 e0       	ldi	r22, 0x01	; 1
    2c0c:	82 e1       	ldi	r24, 0x12	; 18
    2c0e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <digitalWrite>
    2c12:	61 e0       	ldi	r22, 0x01	; 1
    2c14:	83 e1       	ldi	r24, 0x13	; 19
    2c16:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <digitalWrite>
    2c1a:	e9 eb       	ldi	r30, 0xB9	; 185
    2c1c:	f0 e0       	ldi	r31, 0x00	; 0
    2c1e:	80 81       	ld	r24, Z
    2c20:	8e 7f       	andi	r24, 0xFE	; 254
    2c22:	80 83       	st	Z, r24
    2c24:	80 81       	ld	r24, Z
    2c26:	8d 7f       	andi	r24, 0xFD	; 253
    2c28:	80 83       	st	Z, r24
    2c2a:	88 e4       	ldi	r24, 0x48	; 72
    2c2c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    2c30:	85 e4       	ldi	r24, 0x45	; 69
    2c32:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2c36:	08 95       	ret

00002c38 <twi_writeTo>:
    2c38:	0f 93       	push	r16
    2c3a:	41 32       	cpi	r20, 0x21	; 33
    2c3c:	08 f0       	brcs	.+2      	; 0x2c40 <twi_writeTo+0x8>
    2c3e:	4a c0       	rjmp	.+148    	; 0x2cd4 <twi_writeTo+0x9c>
    2c40:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <twi_state>
    2c44:	91 11       	cpse	r25, r1
    2c46:	fc cf       	rjmp	.-8      	; 0x2c40 <twi_writeTo+0x8>
    2c48:	32 e0       	ldi	r19, 0x02	; 2
    2c4a:	30 93 f3 03 	sts	0x03F3, r19	; 0x8003f3 <twi_state>
    2c4e:	00 93 f1 03 	sts	0x03F1, r16	; 0x8003f1 <twi_sendStop>
    2c52:	3f ef       	ldi	r19, 0xFF	; 255
    2c54:	30 93 86 03 	sts	0x0386, r19	; 0x800386 <twi_error>
    2c58:	10 92 cb 03 	sts	0x03CB, r1	; 0x8003cb <twi_masterBufferIndex>
    2c5c:	40 93 ca 03 	sts	0x03CA, r20	; 0x8003ca <twi_masterBufferLength>
    2c60:	56 2f       	mov	r21, r22
    2c62:	ac ec       	ldi	r26, 0xCC	; 204
    2c64:	b3 e0       	ldi	r27, 0x03	; 3
    2c66:	fb 01       	movw	r30, r22
    2c68:	3e 2f       	mov	r19, r30
    2c6a:	35 1b       	sub	r19, r21
    2c6c:	34 17       	cp	r19, r20
    2c6e:	18 f4       	brcc	.+6      	; 0x2c76 <twi_writeTo+0x3e>
    2c70:	31 91       	ld	r19, Z+
    2c72:	3d 93       	st	X+, r19
    2c74:	f9 cf       	rjmp	.-14     	; 0x2c68 <twi_writeTo+0x30>
    2c76:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <twi_slarw>
    2c7a:	30 91 f2 03 	lds	r19, 0x03F2	; 0x8003f2 <twi_slarw>
    2c7e:	88 0f       	add	r24, r24
    2c80:	83 2b       	or	r24, r19
    2c82:	80 93 f2 03 	sts	0x03F2, r24	; 0x8003f2 <twi_slarw>
    2c86:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <twi_inRepStart>
    2c8a:	81 30       	cpi	r24, 0x01	; 1
    2c8c:	61 f4       	brne	.+24     	; 0x2ca6 <twi_writeTo+0x6e>
    2c8e:	10 92 f0 03 	sts	0x03F0, r1	; 0x8003f0 <twi_inRepStart>
    2c92:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <twi_slarw>
    2c96:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2c9a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2c9e:	83 fd       	sbrc	r24, 3
    2ca0:	f8 cf       	rjmp	.-16     	; 0x2c92 <twi_writeTo+0x5a>
    2ca2:	85 ec       	ldi	r24, 0xC5	; 197
    2ca4:	01 c0       	rjmp	.+2      	; 0x2ca8 <twi_writeTo+0x70>
    2ca6:	85 ee       	ldi	r24, 0xE5	; 229
    2ca8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2cac:	22 23       	and	r18, r18
    2cae:	21 f0       	breq	.+8      	; 0x2cb8 <twi_writeTo+0x80>
    2cb0:	80 91 f3 03 	lds	r24, 0x03F3	; 0x8003f3 <twi_state>
    2cb4:	82 30       	cpi	r24, 0x02	; 2
    2cb6:	d1 f3       	breq	.-12     	; 0x2cac <twi_writeTo+0x74>
    2cb8:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <twi_error>
    2cbc:	8f 3f       	cpi	r24, 0xFF	; 255
    2cbe:	79 f0       	breq	.+30     	; 0x2cde <twi_writeTo+0xa6>
    2cc0:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <twi_error>
    2cc4:	80 32       	cpi	r24, 0x20	; 32
    2cc6:	41 f0       	breq	.+16     	; 0x2cd8 <twi_writeTo+0xa0>
    2cc8:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <twi_error>
    2ccc:	80 33       	cpi	r24, 0x30	; 48
    2cce:	31 f0       	breq	.+12     	; 0x2cdc <twi_writeTo+0xa4>
    2cd0:	94 e0       	ldi	r25, 0x04	; 4
    2cd2:	05 c0       	rjmp	.+10     	; 0x2cde <twi_writeTo+0xa6>
    2cd4:	91 e0       	ldi	r25, 0x01	; 1
    2cd6:	03 c0       	rjmp	.+6      	; 0x2cde <twi_writeTo+0xa6>
    2cd8:	92 e0       	ldi	r25, 0x02	; 2
    2cda:	01 c0       	rjmp	.+2      	; 0x2cde <twi_writeTo+0xa6>
    2cdc:	93 e0       	ldi	r25, 0x03	; 3
    2cde:	89 2f       	mov	r24, r25
    2ce0:	0f 91       	pop	r16
    2ce2:	08 95       	ret

00002ce4 <twi_transmit>:
    2ce4:	40 91 a8 03 	lds	r20, 0x03A8	; 0x8003a8 <twi_txBufferLength>
    2ce8:	26 2f       	mov	r18, r22
    2cea:	30 e0       	ldi	r19, 0x00	; 0
    2cec:	24 0f       	add	r18, r20
    2cee:	31 1d       	adc	r19, r1
    2cf0:	21 32       	cpi	r18, 0x21	; 33
    2cf2:	31 05       	cpc	r19, r1
    2cf4:	dc f4       	brge	.+54     	; 0x2d2c <twi_transmit+0x48>
    2cf6:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <twi_state>
    2cfa:	24 30       	cpi	r18, 0x04	; 4
    2cfc:	c9 f4       	brne	.+50     	; 0x2d30 <twi_transmit+0x4c>
    2cfe:	fc 01       	movw	r30, r24
    2d00:	80 e0       	ldi	r24, 0x00	; 0
    2d02:	90 e0       	ldi	r25, 0x00	; 0
    2d04:	86 17       	cp	r24, r22
    2d06:	58 f4       	brcc	.+22     	; 0x2d1e <twi_transmit+0x3a>
    2d08:	30 91 a8 03 	lds	r19, 0x03A8	; 0x8003a8 <twi_txBufferLength>
    2d0c:	21 91       	ld	r18, Z+
    2d0e:	dc 01       	movw	r26, r24
    2d10:	a6 55       	subi	r26, 0x56	; 86
    2d12:	bc 4f       	sbci	r27, 0xFC	; 252
    2d14:	a3 0f       	add	r26, r19
    2d16:	b1 1d       	adc	r27, r1
    2d18:	2c 93       	st	X, r18
    2d1a:	01 96       	adiw	r24, 0x01	; 1
    2d1c:	f3 cf       	rjmp	.-26     	; 0x2d04 <twi_transmit+0x20>
    2d1e:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <twi_txBufferLength>
    2d22:	68 0f       	add	r22, r24
    2d24:	60 93 a8 03 	sts	0x03A8, r22	; 0x8003a8 <twi_txBufferLength>
    2d28:	80 e0       	ldi	r24, 0x00	; 0
    2d2a:	08 95       	ret
    2d2c:	81 e0       	ldi	r24, 0x01	; 1
    2d2e:	08 95       	ret
    2d30:	82 e0       	ldi	r24, 0x02	; 2
    2d32:	08 95       	ret

00002d34 <twi_attachSlaveRxEvent>:
    2d34:	90 93 ed 03 	sts	0x03ED, r25	; 0x8003ed <twi_onSlaveReceive+0x1>
    2d38:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <twi_onSlaveReceive>
    2d3c:	08 95       	ret

00002d3e <twi_attachSlaveTxEvent>:
    2d3e:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <twi_onSlaveTransmit+0x1>
    2d42:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <twi_onSlaveTransmit>
    2d46:	08 95       	ret

00002d48 <twi_stop>:
    2d48:	85 ed       	ldi	r24, 0xD5	; 213
    2d4a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2d4e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2d52:	84 fd       	sbrc	r24, 4
    2d54:	fc cf       	rjmp	.-8      	; 0x2d4e <twi_stop+0x6>
    2d56:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <twi_state>
    2d5a:	08 95       	ret

00002d5c <twi_releaseBus>:
    2d5c:	85 ec       	ldi	r24, 0xC5	; 197
    2d5e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2d62:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <twi_state>
    2d66:	08 95       	ret

00002d68 <__vector_24>:
    2d68:	1f 92       	push	r1
    2d6a:	0f 92       	push	r0
    2d6c:	0f b6       	in	r0, 0x3f	; 63
    2d6e:	0f 92       	push	r0
    2d70:	11 24       	eor	r1, r1
    2d72:	2f 93       	push	r18
    2d74:	3f 93       	push	r19
    2d76:	4f 93       	push	r20
    2d78:	5f 93       	push	r21
    2d7a:	6f 93       	push	r22
    2d7c:	7f 93       	push	r23
    2d7e:	8f 93       	push	r24
    2d80:	9f 93       	push	r25
    2d82:	af 93       	push	r26
    2d84:	bf 93       	push	r27
    2d86:	ef 93       	push	r30
    2d88:	ff 93       	push	r31
    2d8a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    2d8e:	88 7f       	andi	r24, 0xF8	; 248
    2d90:	80 36       	cpi	r24, 0x60	; 96
    2d92:	09 f4       	brne	.+2      	; 0x2d96 <__vector_24+0x2e>
    2d94:	9e c0       	rjmp	.+316    	; 0x2ed2 <__vector_24+0x16a>
    2d96:	78 f5       	brcc	.+94     	; 0x2df6 <__vector_24+0x8e>
    2d98:	88 32       	cpi	r24, 0x28	; 40
    2d9a:	09 f4       	brne	.+2      	; 0x2d9e <__vector_24+0x36>
    2d9c:	5d c0       	rjmp	.+186    	; 0x2e58 <__vector_24+0xf0>
    2d9e:	90 f4       	brcc	.+36     	; 0x2dc4 <__vector_24+0x5c>
    2da0:	80 31       	cpi	r24, 0x10	; 16
    2da2:	09 f4       	brne	.+2      	; 0x2da6 <__vector_24+0x3e>
    2da4:	56 c0       	rjmp	.+172    	; 0x2e52 <__vector_24+0xea>
    2da6:	38 f4       	brcc	.+14     	; 0x2db6 <__vector_24+0x4e>
    2da8:	88 23       	and	r24, r24
    2daa:	09 f4       	brne	.+2      	; 0x2dae <__vector_24+0x46>
    2dac:	f5 c0       	rjmp	.+490    	; 0x2f98 <__vector_24+0x230>
    2dae:	88 30       	cpi	r24, 0x08	; 8
    2db0:	09 f4       	brne	.+2      	; 0x2db4 <__vector_24+0x4c>
    2db2:	4f c0       	rjmp	.+158    	; 0x2e52 <__vector_24+0xea>
    2db4:	f5 c0       	rjmp	.+490    	; 0x2fa0 <__vector_24+0x238>
    2db6:	88 31       	cpi	r24, 0x18	; 24
    2db8:	09 f4       	brne	.+2      	; 0x2dbc <__vector_24+0x54>
    2dba:	4e c0       	rjmp	.+156    	; 0x2e58 <__vector_24+0xf0>
    2dbc:	80 32       	cpi	r24, 0x20	; 32
    2dbe:	09 f4       	brne	.+2      	; 0x2dc2 <__vector_24+0x5a>
    2dc0:	5f c0       	rjmp	.+190    	; 0x2e80 <__vector_24+0x118>
    2dc2:	ee c0       	rjmp	.+476    	; 0x2fa0 <__vector_24+0x238>
    2dc4:	80 34       	cpi	r24, 0x40	; 64
    2dc6:	09 f4       	brne	.+2      	; 0x2dca <__vector_24+0x62>
    2dc8:	6a c0       	rjmp	.+212    	; 0x2e9e <__vector_24+0x136>
    2dca:	58 f4       	brcc	.+22     	; 0x2de2 <__vector_24+0x7a>
    2dcc:	80 33       	cpi	r24, 0x30	; 48
    2dce:	09 f4       	brne	.+2      	; 0x2dd2 <__vector_24+0x6a>
    2dd0:	57 c0       	rjmp	.+174    	; 0x2e80 <__vector_24+0x118>
    2dd2:	88 33       	cpi	r24, 0x38	; 56
    2dd4:	09 f0       	breq	.+2      	; 0x2dd8 <__vector_24+0x70>
    2dd6:	e4 c0       	rjmp	.+456    	; 0x2fa0 <__vector_24+0x238>
    2dd8:	80 93 86 03 	sts	0x0386, r24	; 0x800386 <twi_error>
    2ddc:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <twi_releaseBus>
    2de0:	df c0       	rjmp	.+446    	; 0x2fa0 <__vector_24+0x238>
    2de2:	80 35       	cpi	r24, 0x50	; 80
    2de4:	09 f4       	brne	.+2      	; 0x2de8 <__vector_24+0x80>
    2de6:	4f c0       	rjmp	.+158    	; 0x2e86 <__vector_24+0x11e>
    2de8:	88 35       	cpi	r24, 0x58	; 88
    2dea:	09 f4       	brne	.+2      	; 0x2dee <__vector_24+0x86>
    2dec:	5d c0       	rjmp	.+186    	; 0x2ea8 <__vector_24+0x140>
    2dee:	88 34       	cpi	r24, 0x48	; 72
    2df0:	09 f0       	breq	.+2      	; 0x2df4 <__vector_24+0x8c>
    2df2:	d6 c0       	rjmp	.+428    	; 0x2fa0 <__vector_24+0x238>
    2df4:	d3 c0       	rjmp	.+422    	; 0x2f9c <__vector_24+0x234>
    2df6:	88 39       	cpi	r24, 0x98	; 152
    2df8:	09 f4       	brne	.+2      	; 0x2dfc <__vector_24+0x94>
    2dfa:	c4 c0       	rjmp	.+392    	; 0x2f84 <__vector_24+0x21c>
    2dfc:	a8 f4       	brcc	.+42     	; 0x2e28 <__vector_24+0xc0>
    2dfe:	88 37       	cpi	r24, 0x78	; 120
    2e00:	09 f4       	brne	.+2      	; 0x2e04 <__vector_24+0x9c>
    2e02:	67 c0       	rjmp	.+206    	; 0x2ed2 <__vector_24+0x16a>
    2e04:	38 f4       	brcc	.+14     	; 0x2e14 <__vector_24+0xac>
    2e06:	88 36       	cpi	r24, 0x68	; 104
    2e08:	09 f4       	brne	.+2      	; 0x2e0c <__vector_24+0xa4>
    2e0a:	63 c0       	rjmp	.+198    	; 0x2ed2 <__vector_24+0x16a>
    2e0c:	80 37       	cpi	r24, 0x70	; 112
    2e0e:	09 f4       	brne	.+2      	; 0x2e12 <__vector_24+0xaa>
    2e10:	60 c0       	rjmp	.+192    	; 0x2ed2 <__vector_24+0x16a>
    2e12:	c6 c0       	rjmp	.+396    	; 0x2fa0 <__vector_24+0x238>
    2e14:	88 38       	cpi	r24, 0x88	; 136
    2e16:	09 f4       	brne	.+2      	; 0x2e1a <__vector_24+0xb2>
    2e18:	b5 c0       	rjmp	.+362    	; 0x2f84 <__vector_24+0x21c>
    2e1a:	80 39       	cpi	r24, 0x90	; 144
    2e1c:	09 f4       	brne	.+2      	; 0x2e20 <__vector_24+0xb8>
    2e1e:	5f c0       	rjmp	.+190    	; 0x2ede <__vector_24+0x176>
    2e20:	80 38       	cpi	r24, 0x80	; 128
    2e22:	09 f0       	breq	.+2      	; 0x2e26 <__vector_24+0xbe>
    2e24:	bd c0       	rjmp	.+378    	; 0x2fa0 <__vector_24+0x238>
    2e26:	5b c0       	rjmp	.+182    	; 0x2ede <__vector_24+0x176>
    2e28:	80 3b       	cpi	r24, 0xB0	; 176
    2e2a:	09 f4       	brne	.+2      	; 0x2e2e <__vector_24+0xc6>
    2e2c:	83 c0       	rjmp	.+262    	; 0x2f34 <__vector_24+0x1cc>
    2e2e:	38 f4       	brcc	.+14     	; 0x2e3e <__vector_24+0xd6>
    2e30:	80 3a       	cpi	r24, 0xA0	; 160
    2e32:	09 f4       	brne	.+2      	; 0x2e36 <__vector_24+0xce>
    2e34:	66 c0       	rjmp	.+204    	; 0x2f02 <__vector_24+0x19a>
    2e36:	88 3a       	cpi	r24, 0xA8	; 168
    2e38:	09 f4       	brne	.+2      	; 0x2e3c <__vector_24+0xd4>
    2e3a:	7c c0       	rjmp	.+248    	; 0x2f34 <__vector_24+0x1cc>
    2e3c:	b1 c0       	rjmp	.+354    	; 0x2fa0 <__vector_24+0x238>
    2e3e:	80 3c       	cpi	r24, 0xC0	; 192
    2e40:	09 f4       	brne	.+2      	; 0x2e44 <__vector_24+0xdc>
    2e42:	a4 c0       	rjmp	.+328    	; 0x2f8c <__vector_24+0x224>
    2e44:	88 3c       	cpi	r24, 0xC8	; 200
    2e46:	09 f4       	brne	.+2      	; 0x2e4a <__vector_24+0xe2>
    2e48:	a1 c0       	rjmp	.+322    	; 0x2f8c <__vector_24+0x224>
    2e4a:	88 3b       	cpi	r24, 0xB8	; 184
    2e4c:	09 f4       	brne	.+2      	; 0x2e50 <__vector_24+0xe8>
    2e4e:	87 c0       	rjmp	.+270    	; 0x2f5e <__vector_24+0x1f6>
    2e50:	a7 c0       	rjmp	.+334    	; 0x2fa0 <__vector_24+0x238>
    2e52:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <twi_slarw>
    2e56:	10 c0       	rjmp	.+32     	; 0x2e78 <__vector_24+0x110>
    2e58:	90 91 cb 03 	lds	r25, 0x03CB	; 0x8003cb <twi_masterBufferIndex>
    2e5c:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <twi_masterBufferLength>
    2e60:	98 17       	cp	r25, r24
    2e62:	70 f5       	brcc	.+92     	; 0x2ec0 <__vector_24+0x158>
    2e64:	e0 91 cb 03 	lds	r30, 0x03CB	; 0x8003cb <twi_masterBufferIndex>
    2e68:	81 e0       	ldi	r24, 0x01	; 1
    2e6a:	8e 0f       	add	r24, r30
    2e6c:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <twi_masterBufferIndex>
    2e70:	f0 e0       	ldi	r31, 0x00	; 0
    2e72:	e4 53       	subi	r30, 0x34	; 52
    2e74:	fc 4f       	sbci	r31, 0xFC	; 252
    2e76:	80 81       	ld	r24, Z
    2e78:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2e7c:	85 ec       	ldi	r24, 0xC5	; 197
    2e7e:	83 c0       	rjmp	.+262    	; 0x2f86 <__vector_24+0x21e>
    2e80:	80 93 86 03 	sts	0x0386, r24	; 0x800386 <twi_error>
    2e84:	8b c0       	rjmp	.+278    	; 0x2f9c <__vector_24+0x234>
    2e86:	e0 91 cb 03 	lds	r30, 0x03CB	; 0x8003cb <twi_masterBufferIndex>
    2e8a:	81 e0       	ldi	r24, 0x01	; 1
    2e8c:	8e 0f       	add	r24, r30
    2e8e:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <twi_masterBufferIndex>
    2e92:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2e96:	f0 e0       	ldi	r31, 0x00	; 0
    2e98:	e4 53       	subi	r30, 0x34	; 52
    2e9a:	fc 4f       	sbci	r31, 0xFC	; 252
    2e9c:	80 83       	st	Z, r24
    2e9e:	90 91 cb 03 	lds	r25, 0x03CB	; 0x8003cb <twi_masterBufferIndex>
    2ea2:	80 91 ca 03 	lds	r24, 0x03CA	; 0x8003ca <twi_masterBufferLength>
    2ea6:	6b c0       	rjmp	.+214    	; 0x2f7e <__vector_24+0x216>
    2ea8:	e0 91 cb 03 	lds	r30, 0x03CB	; 0x8003cb <twi_masterBufferIndex>
    2eac:	81 e0       	ldi	r24, 0x01	; 1
    2eae:	8e 0f       	add	r24, r30
    2eb0:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <twi_masterBufferIndex>
    2eb4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2eb8:	f0 e0       	ldi	r31, 0x00	; 0
    2eba:	e4 53       	subi	r30, 0x34	; 52
    2ebc:	fc 4f       	sbci	r31, 0xFC	; 252
    2ebe:	80 83       	st	Z, r24
    2ec0:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <twi_sendStop>
    2ec4:	81 11       	cpse	r24, r1
    2ec6:	6a c0       	rjmp	.+212    	; 0x2f9c <__vector_24+0x234>
    2ec8:	81 e0       	ldi	r24, 0x01	; 1
    2eca:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <twi_inRepStart>
    2ece:	84 ea       	ldi	r24, 0xA4	; 164
    2ed0:	5e c0       	rjmp	.+188    	; 0x2f8e <__vector_24+0x226>
    2ed2:	83 e0       	ldi	r24, 0x03	; 3
    2ed4:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <twi_state>
    2ed8:	10 92 87 03 	sts	0x0387, r1	; 0x800387 <twi_rxBufferIndex>
    2edc:	cf cf       	rjmp	.-98     	; 0x2e7c <__vector_24+0x114>
    2ede:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <twi_rxBufferIndex>
    2ee2:	80 32       	cpi	r24, 0x20	; 32
    2ee4:	08 f0       	brcs	.+2      	; 0x2ee8 <__vector_24+0x180>
    2ee6:	4e c0       	rjmp	.+156    	; 0x2f84 <__vector_24+0x21c>
    2ee8:	e0 91 87 03 	lds	r30, 0x0387	; 0x800387 <twi_rxBufferIndex>
    2eec:	81 e0       	ldi	r24, 0x01	; 1
    2eee:	8e 0f       	add	r24, r30
    2ef0:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <twi_rxBufferIndex>
    2ef4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2ef8:	f0 e0       	ldi	r31, 0x00	; 0
    2efa:	e8 57       	subi	r30, 0x78	; 120
    2efc:	fc 4f       	sbci	r31, 0xFC	; 252
    2efe:	80 83       	st	Z, r24
    2f00:	bd cf       	rjmp	.-134    	; 0x2e7c <__vector_24+0x114>
    2f02:	0e 94 ae 16 	call	0x2d5c	; 0x2d5c <twi_releaseBus>
    2f06:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <twi_rxBufferIndex>
    2f0a:	80 32       	cpi	r24, 0x20	; 32
    2f0c:	30 f4       	brcc	.+12     	; 0x2f1a <__vector_24+0x1b2>
    2f0e:	e0 91 87 03 	lds	r30, 0x0387	; 0x800387 <twi_rxBufferIndex>
    2f12:	f0 e0       	ldi	r31, 0x00	; 0
    2f14:	e8 57       	subi	r30, 0x78	; 120
    2f16:	fc 4f       	sbci	r31, 0xFC	; 252
    2f18:	10 82       	st	Z, r1
    2f1a:	60 91 87 03 	lds	r22, 0x0387	; 0x800387 <twi_rxBufferIndex>
    2f1e:	70 e0       	ldi	r23, 0x00	; 0
    2f20:	e0 91 ec 03 	lds	r30, 0x03EC	; 0x8003ec <twi_onSlaveReceive>
    2f24:	f0 91 ed 03 	lds	r31, 0x03ED	; 0x8003ed <twi_onSlaveReceive+0x1>
    2f28:	88 e8       	ldi	r24, 0x88	; 136
    2f2a:	93 e0       	ldi	r25, 0x03	; 3
    2f2c:	09 95       	icall
    2f2e:	10 92 87 03 	sts	0x0387, r1	; 0x800387 <twi_rxBufferIndex>
    2f32:	36 c0       	rjmp	.+108    	; 0x2fa0 <__vector_24+0x238>
    2f34:	84 e0       	ldi	r24, 0x04	; 4
    2f36:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <twi_state>
    2f3a:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <twi_txBufferIndex>
    2f3e:	10 92 a8 03 	sts	0x03A8, r1	; 0x8003a8 <twi_txBufferLength>
    2f42:	e0 91 ee 03 	lds	r30, 0x03EE	; 0x8003ee <twi_onSlaveTransmit>
    2f46:	f0 91 ef 03 	lds	r31, 0x03EF	; 0x8003ef <twi_onSlaveTransmit+0x1>
    2f4a:	09 95       	icall
    2f4c:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <twi_txBufferLength>
    2f50:	81 11       	cpse	r24, r1
    2f52:	05 c0       	rjmp	.+10     	; 0x2f5e <__vector_24+0x1f6>
    2f54:	81 e0       	ldi	r24, 0x01	; 1
    2f56:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <twi_txBufferLength>
    2f5a:	10 92 aa 03 	sts	0x03AA, r1	; 0x8003aa <twi_txBuffer>
    2f5e:	e0 91 a9 03 	lds	r30, 0x03A9	; 0x8003a9 <twi_txBufferIndex>
    2f62:	81 e0       	ldi	r24, 0x01	; 1
    2f64:	8e 0f       	add	r24, r30
    2f66:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <twi_txBufferIndex>
    2f6a:	f0 e0       	ldi	r31, 0x00	; 0
    2f6c:	e6 55       	subi	r30, 0x56	; 86
    2f6e:	fc 4f       	sbci	r31, 0xFC	; 252
    2f70:	80 81       	ld	r24, Z
    2f72:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2f76:	90 91 a9 03 	lds	r25, 0x03A9	; 0x8003a9 <twi_txBufferIndex>
    2f7a:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <twi_txBufferLength>
    2f7e:	98 17       	cp	r25, r24
    2f80:	08 f4       	brcc	.+2      	; 0x2f84 <__vector_24+0x21c>
    2f82:	7c cf       	rjmp	.-264    	; 0x2e7c <__vector_24+0x114>
    2f84:	85 e8       	ldi	r24, 0x85	; 133
    2f86:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2f8a:	0a c0       	rjmp	.+20     	; 0x2fa0 <__vector_24+0x238>
    2f8c:	85 ec       	ldi	r24, 0xC5	; 197
    2f8e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2f92:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <twi_state>
    2f96:	04 c0       	rjmp	.+8      	; 0x2fa0 <__vector_24+0x238>
    2f98:	10 92 86 03 	sts	0x0386, r1	; 0x800386 <twi_error>
    2f9c:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <twi_stop>
    2fa0:	ff 91       	pop	r31
    2fa2:	ef 91       	pop	r30
    2fa4:	bf 91       	pop	r27
    2fa6:	af 91       	pop	r26
    2fa8:	9f 91       	pop	r25
    2faa:	8f 91       	pop	r24
    2fac:	7f 91       	pop	r23
    2fae:	6f 91       	pop	r22
    2fb0:	5f 91       	pop	r21
    2fb2:	4f 91       	pop	r20
    2fb4:	3f 91       	pop	r19
    2fb6:	2f 91       	pop	r18
    2fb8:	0f 90       	pop	r0
    2fba:	0f be       	out	0x3f, r0	; 63
    2fbc:	0f 90       	pop	r0
    2fbe:	1f 90       	pop	r1
    2fc0:	18 95       	reti

00002fc2 <__divmodhi4>:
    2fc2:	97 fb       	bst	r25, 7
    2fc4:	07 2e       	mov	r0, r23
    2fc6:	16 f4       	brtc	.+4      	; 0x2fcc <__divmodhi4+0xa>
    2fc8:	00 94       	com	r0
    2fca:	07 d0       	rcall	.+14     	; 0x2fda <__divmodhi4_neg1>
    2fcc:	77 fd       	sbrc	r23, 7
    2fce:	09 d0       	rcall	.+18     	; 0x2fe2 <__divmodhi4_neg2>
    2fd0:	0e 94 1d 18 	call	0x303a	; 0x303a <__udivmodhi4>
    2fd4:	07 fc       	sbrc	r0, 7
    2fd6:	05 d0       	rcall	.+10     	; 0x2fe2 <__divmodhi4_neg2>
    2fd8:	3e f4       	brtc	.+14     	; 0x2fe8 <__divmodhi4_exit>

00002fda <__divmodhi4_neg1>:
    2fda:	90 95       	com	r25
    2fdc:	81 95       	neg	r24
    2fde:	9f 4f       	sbci	r25, 0xFF	; 255
    2fe0:	08 95       	ret

00002fe2 <__divmodhi4_neg2>:
    2fe2:	70 95       	com	r23
    2fe4:	61 95       	neg	r22
    2fe6:	7f 4f       	sbci	r23, 0xFF	; 255

00002fe8 <__divmodhi4_exit>:
    2fe8:	08 95       	ret

00002fea <__udivmodsi4>:
    2fea:	a1 e2       	ldi	r26, 0x21	; 33
    2fec:	1a 2e       	mov	r1, r26
    2fee:	aa 1b       	sub	r26, r26
    2ff0:	bb 1b       	sub	r27, r27
    2ff2:	fd 01       	movw	r30, r26
    2ff4:	0d c0       	rjmp	.+26     	; 0x3010 <__udivmodsi4_ep>

00002ff6 <__udivmodsi4_loop>:
    2ff6:	aa 1f       	adc	r26, r26
    2ff8:	bb 1f       	adc	r27, r27
    2ffa:	ee 1f       	adc	r30, r30
    2ffc:	ff 1f       	adc	r31, r31
    2ffe:	a2 17       	cp	r26, r18
    3000:	b3 07       	cpc	r27, r19
    3002:	e4 07       	cpc	r30, r20
    3004:	f5 07       	cpc	r31, r21
    3006:	20 f0       	brcs	.+8      	; 0x3010 <__udivmodsi4_ep>
    3008:	a2 1b       	sub	r26, r18
    300a:	b3 0b       	sbc	r27, r19
    300c:	e4 0b       	sbc	r30, r20
    300e:	f5 0b       	sbc	r31, r21

00003010 <__udivmodsi4_ep>:
    3010:	66 1f       	adc	r22, r22
    3012:	77 1f       	adc	r23, r23
    3014:	88 1f       	adc	r24, r24
    3016:	99 1f       	adc	r25, r25
    3018:	1a 94       	dec	r1
    301a:	69 f7       	brne	.-38     	; 0x2ff6 <__udivmodsi4_loop>
    301c:	60 95       	com	r22
    301e:	70 95       	com	r23
    3020:	80 95       	com	r24
    3022:	90 95       	com	r25
    3024:	9b 01       	movw	r18, r22
    3026:	ac 01       	movw	r20, r24
    3028:	bd 01       	movw	r22, r26
    302a:	cf 01       	movw	r24, r30
    302c:	08 95       	ret

0000302e <__tablejump2__>:
    302e:	ee 0f       	add	r30, r30
    3030:	ff 1f       	adc	r31, r31
    3032:	05 90       	lpm	r0, Z+
    3034:	f4 91       	lpm	r31, Z
    3036:	e0 2d       	mov	r30, r0
    3038:	09 94       	ijmp

0000303a <__udivmodhi4>:
    303a:	aa 1b       	sub	r26, r26
    303c:	bb 1b       	sub	r27, r27
    303e:	51 e1       	ldi	r21, 0x11	; 17
    3040:	07 c0       	rjmp	.+14     	; 0x3050 <__udivmodhi4_ep>

00003042 <__udivmodhi4_loop>:
    3042:	aa 1f       	adc	r26, r26
    3044:	bb 1f       	adc	r27, r27
    3046:	a6 17       	cp	r26, r22
    3048:	b7 07       	cpc	r27, r23
    304a:	10 f0       	brcs	.+4      	; 0x3050 <__udivmodhi4_ep>
    304c:	a6 1b       	sub	r26, r22
    304e:	b7 0b       	sbc	r27, r23

00003050 <__udivmodhi4_ep>:
    3050:	88 1f       	adc	r24, r24
    3052:	99 1f       	adc	r25, r25
    3054:	5a 95       	dec	r21
    3056:	a9 f7       	brne	.-22     	; 0x3042 <__udivmodhi4_loop>
    3058:	80 95       	com	r24
    305a:	90 95       	com	r25
    305c:	bc 01       	movw	r22, r24
    305e:	cd 01       	movw	r24, r26
    3060:	08 95       	ret

00003062 <__fixsfsi>:
    3062:	0e 94 38 18 	call	0x3070	; 0x3070 <__fixunssfsi>
    3066:	68 94       	set
    3068:	b1 11       	cpse	r27, r1
    306a:	0c 94 ef 18 	jmp	0x31de	; 0x31de <__fp_szero>
    306e:	08 95       	ret

00003070 <__fixunssfsi>:
    3070:	0e 94 d4 18 	call	0x31a8	; 0x31a8 <__fp_splitA>
    3074:	88 f0       	brcs	.+34     	; 0x3098 <__fixunssfsi+0x28>
    3076:	9f 57       	subi	r25, 0x7F	; 127
    3078:	98 f0       	brcs	.+38     	; 0x30a0 <__fixunssfsi+0x30>
    307a:	b9 2f       	mov	r27, r25
    307c:	99 27       	eor	r25, r25
    307e:	b7 51       	subi	r27, 0x17	; 23
    3080:	b0 f0       	brcs	.+44     	; 0x30ae <__fixunssfsi+0x3e>
    3082:	e1 f0       	breq	.+56     	; 0x30bc <__fixunssfsi+0x4c>
    3084:	66 0f       	add	r22, r22
    3086:	77 1f       	adc	r23, r23
    3088:	88 1f       	adc	r24, r24
    308a:	99 1f       	adc	r25, r25
    308c:	1a f0       	brmi	.+6      	; 0x3094 <__fixunssfsi+0x24>
    308e:	ba 95       	dec	r27
    3090:	c9 f7       	brne	.-14     	; 0x3084 <__fixunssfsi+0x14>
    3092:	14 c0       	rjmp	.+40     	; 0x30bc <__fixunssfsi+0x4c>
    3094:	b1 30       	cpi	r27, 0x01	; 1
    3096:	91 f0       	breq	.+36     	; 0x30bc <__fixunssfsi+0x4c>
    3098:	0e 94 ee 18 	call	0x31dc	; 0x31dc <__fp_zero>
    309c:	b1 e0       	ldi	r27, 0x01	; 1
    309e:	08 95       	ret
    30a0:	0c 94 ee 18 	jmp	0x31dc	; 0x31dc <__fp_zero>
    30a4:	67 2f       	mov	r22, r23
    30a6:	78 2f       	mov	r23, r24
    30a8:	88 27       	eor	r24, r24
    30aa:	b8 5f       	subi	r27, 0xF8	; 248
    30ac:	39 f0       	breq	.+14     	; 0x30bc <__fixunssfsi+0x4c>
    30ae:	b9 3f       	cpi	r27, 0xF9	; 249
    30b0:	cc f3       	brlt	.-14     	; 0x30a4 <__fixunssfsi+0x34>
    30b2:	86 95       	lsr	r24
    30b4:	77 95       	ror	r23
    30b6:	67 95       	ror	r22
    30b8:	b3 95       	inc	r27
    30ba:	d9 f7       	brne	.-10     	; 0x30b2 <__fixunssfsi+0x42>
    30bc:	3e f4       	brtc	.+14     	; 0x30cc <__fixunssfsi+0x5c>
    30be:	90 95       	com	r25
    30c0:	80 95       	com	r24
    30c2:	70 95       	com	r23
    30c4:	61 95       	neg	r22
    30c6:	7f 4f       	sbci	r23, 0xFF	; 255
    30c8:	8f 4f       	sbci	r24, 0xFF	; 255
    30ca:	9f 4f       	sbci	r25, 0xFF	; 255
    30cc:	08 95       	ret

000030ce <__floatunsisf>:
    30ce:	e8 94       	clt
    30d0:	09 c0       	rjmp	.+18     	; 0x30e4 <__floatsisf+0x12>

000030d2 <__floatsisf>:
    30d2:	97 fb       	bst	r25, 7
    30d4:	3e f4       	brtc	.+14     	; 0x30e4 <__floatsisf+0x12>
    30d6:	90 95       	com	r25
    30d8:	80 95       	com	r24
    30da:	70 95       	com	r23
    30dc:	61 95       	neg	r22
    30de:	7f 4f       	sbci	r23, 0xFF	; 255
    30e0:	8f 4f       	sbci	r24, 0xFF	; 255
    30e2:	9f 4f       	sbci	r25, 0xFF	; 255
    30e4:	99 23       	and	r25, r25
    30e6:	a9 f0       	breq	.+42     	; 0x3112 <__floatsisf+0x40>
    30e8:	f9 2f       	mov	r31, r25
    30ea:	96 e9       	ldi	r25, 0x96	; 150
    30ec:	bb 27       	eor	r27, r27
    30ee:	93 95       	inc	r25
    30f0:	f6 95       	lsr	r31
    30f2:	87 95       	ror	r24
    30f4:	77 95       	ror	r23
    30f6:	67 95       	ror	r22
    30f8:	b7 95       	ror	r27
    30fa:	f1 11       	cpse	r31, r1
    30fc:	f8 cf       	rjmp	.-16     	; 0x30ee <__floatsisf+0x1c>
    30fe:	fa f4       	brpl	.+62     	; 0x313e <__floatsisf+0x6c>
    3100:	bb 0f       	add	r27, r27
    3102:	11 f4       	brne	.+4      	; 0x3108 <__floatsisf+0x36>
    3104:	60 ff       	sbrs	r22, 0
    3106:	1b c0       	rjmp	.+54     	; 0x313e <__floatsisf+0x6c>
    3108:	6f 5f       	subi	r22, 0xFF	; 255
    310a:	7f 4f       	sbci	r23, 0xFF	; 255
    310c:	8f 4f       	sbci	r24, 0xFF	; 255
    310e:	9f 4f       	sbci	r25, 0xFF	; 255
    3110:	16 c0       	rjmp	.+44     	; 0x313e <__floatsisf+0x6c>
    3112:	88 23       	and	r24, r24
    3114:	11 f0       	breq	.+4      	; 0x311a <__floatsisf+0x48>
    3116:	96 e9       	ldi	r25, 0x96	; 150
    3118:	11 c0       	rjmp	.+34     	; 0x313c <__floatsisf+0x6a>
    311a:	77 23       	and	r23, r23
    311c:	21 f0       	breq	.+8      	; 0x3126 <__floatsisf+0x54>
    311e:	9e e8       	ldi	r25, 0x8E	; 142
    3120:	87 2f       	mov	r24, r23
    3122:	76 2f       	mov	r23, r22
    3124:	05 c0       	rjmp	.+10     	; 0x3130 <__floatsisf+0x5e>
    3126:	66 23       	and	r22, r22
    3128:	71 f0       	breq	.+28     	; 0x3146 <__floatsisf+0x74>
    312a:	96 e8       	ldi	r25, 0x86	; 134
    312c:	86 2f       	mov	r24, r22
    312e:	70 e0       	ldi	r23, 0x00	; 0
    3130:	60 e0       	ldi	r22, 0x00	; 0
    3132:	2a f0       	brmi	.+10     	; 0x313e <__floatsisf+0x6c>
    3134:	9a 95       	dec	r25
    3136:	66 0f       	add	r22, r22
    3138:	77 1f       	adc	r23, r23
    313a:	88 1f       	adc	r24, r24
    313c:	da f7       	brpl	.-10     	; 0x3134 <__floatsisf+0x62>
    313e:	88 0f       	add	r24, r24
    3140:	96 95       	lsr	r25
    3142:	87 95       	ror	r24
    3144:	97 f9       	bld	r25, 7
    3146:	08 95       	ret

00003148 <__fp_inf>:
    3148:	97 f9       	bld	r25, 7
    314a:	9f 67       	ori	r25, 0x7F	; 127
    314c:	80 e8       	ldi	r24, 0x80	; 128
    314e:	70 e0       	ldi	r23, 0x00	; 0
    3150:	60 e0       	ldi	r22, 0x00	; 0
    3152:	08 95       	ret

00003154 <__fp_nan>:
    3154:	9f ef       	ldi	r25, 0xFF	; 255
    3156:	80 ec       	ldi	r24, 0xC0	; 192
    3158:	08 95       	ret

0000315a <__fp_pscA>:
    315a:	00 24       	eor	r0, r0
    315c:	0a 94       	dec	r0
    315e:	16 16       	cp	r1, r22
    3160:	17 06       	cpc	r1, r23
    3162:	18 06       	cpc	r1, r24
    3164:	09 06       	cpc	r0, r25
    3166:	08 95       	ret

00003168 <__fp_pscB>:
    3168:	00 24       	eor	r0, r0
    316a:	0a 94       	dec	r0
    316c:	12 16       	cp	r1, r18
    316e:	13 06       	cpc	r1, r19
    3170:	14 06       	cpc	r1, r20
    3172:	05 06       	cpc	r0, r21
    3174:	08 95       	ret

00003176 <__fp_round>:
    3176:	09 2e       	mov	r0, r25
    3178:	03 94       	inc	r0
    317a:	00 0c       	add	r0, r0
    317c:	11 f4       	brne	.+4      	; 0x3182 <__fp_round+0xc>
    317e:	88 23       	and	r24, r24
    3180:	52 f0       	brmi	.+20     	; 0x3196 <__fp_round+0x20>
    3182:	bb 0f       	add	r27, r27
    3184:	40 f4       	brcc	.+16     	; 0x3196 <__fp_round+0x20>
    3186:	bf 2b       	or	r27, r31
    3188:	11 f4       	brne	.+4      	; 0x318e <__fp_round+0x18>
    318a:	60 ff       	sbrs	r22, 0
    318c:	04 c0       	rjmp	.+8      	; 0x3196 <__fp_round+0x20>
    318e:	6f 5f       	subi	r22, 0xFF	; 255
    3190:	7f 4f       	sbci	r23, 0xFF	; 255
    3192:	8f 4f       	sbci	r24, 0xFF	; 255
    3194:	9f 4f       	sbci	r25, 0xFF	; 255
    3196:	08 95       	ret

00003198 <__fp_split3>:
    3198:	57 fd       	sbrc	r21, 7
    319a:	90 58       	subi	r25, 0x80	; 128
    319c:	44 0f       	add	r20, r20
    319e:	55 1f       	adc	r21, r21
    31a0:	59 f0       	breq	.+22     	; 0x31b8 <__fp_splitA+0x10>
    31a2:	5f 3f       	cpi	r21, 0xFF	; 255
    31a4:	71 f0       	breq	.+28     	; 0x31c2 <__fp_splitA+0x1a>
    31a6:	47 95       	ror	r20

000031a8 <__fp_splitA>:
    31a8:	88 0f       	add	r24, r24
    31aa:	97 fb       	bst	r25, 7
    31ac:	99 1f       	adc	r25, r25
    31ae:	61 f0       	breq	.+24     	; 0x31c8 <__fp_splitA+0x20>
    31b0:	9f 3f       	cpi	r25, 0xFF	; 255
    31b2:	79 f0       	breq	.+30     	; 0x31d2 <__fp_splitA+0x2a>
    31b4:	87 95       	ror	r24
    31b6:	08 95       	ret
    31b8:	12 16       	cp	r1, r18
    31ba:	13 06       	cpc	r1, r19
    31bc:	14 06       	cpc	r1, r20
    31be:	55 1f       	adc	r21, r21
    31c0:	f2 cf       	rjmp	.-28     	; 0x31a6 <__fp_split3+0xe>
    31c2:	46 95       	lsr	r20
    31c4:	f1 df       	rcall	.-30     	; 0x31a8 <__fp_splitA>
    31c6:	08 c0       	rjmp	.+16     	; 0x31d8 <__fp_splitA+0x30>
    31c8:	16 16       	cp	r1, r22
    31ca:	17 06       	cpc	r1, r23
    31cc:	18 06       	cpc	r1, r24
    31ce:	99 1f       	adc	r25, r25
    31d0:	f1 cf       	rjmp	.-30     	; 0x31b4 <__fp_splitA+0xc>
    31d2:	86 95       	lsr	r24
    31d4:	71 05       	cpc	r23, r1
    31d6:	61 05       	cpc	r22, r1
    31d8:	08 94       	sec
    31da:	08 95       	ret

000031dc <__fp_zero>:
    31dc:	e8 94       	clt

000031de <__fp_szero>:
    31de:	bb 27       	eor	r27, r27
    31e0:	66 27       	eor	r22, r22
    31e2:	77 27       	eor	r23, r23
    31e4:	cb 01       	movw	r24, r22
    31e6:	97 f9       	bld	r25, 7
    31e8:	08 95       	ret

000031ea <__mulsf3>:
    31ea:	0e 94 08 19 	call	0x3210	; 0x3210 <__mulsf3x>
    31ee:	0c 94 bb 18 	jmp	0x3176	; 0x3176 <__fp_round>
    31f2:	0e 94 ad 18 	call	0x315a	; 0x315a <__fp_pscA>
    31f6:	38 f0       	brcs	.+14     	; 0x3206 <__mulsf3+0x1c>
    31f8:	0e 94 b4 18 	call	0x3168	; 0x3168 <__fp_pscB>
    31fc:	20 f0       	brcs	.+8      	; 0x3206 <__mulsf3+0x1c>
    31fe:	95 23       	and	r25, r21
    3200:	11 f0       	breq	.+4      	; 0x3206 <__mulsf3+0x1c>
    3202:	0c 94 a4 18 	jmp	0x3148	; 0x3148 <__fp_inf>
    3206:	0c 94 aa 18 	jmp	0x3154	; 0x3154 <__fp_nan>
    320a:	11 24       	eor	r1, r1
    320c:	0c 94 ef 18 	jmp	0x31de	; 0x31de <__fp_szero>

00003210 <__mulsf3x>:
    3210:	0e 94 cc 18 	call	0x3198	; 0x3198 <__fp_split3>
    3214:	70 f3       	brcs	.-36     	; 0x31f2 <__mulsf3+0x8>

00003216 <__mulsf3_pse>:
    3216:	95 9f       	mul	r25, r21
    3218:	c1 f3       	breq	.-16     	; 0x320a <__mulsf3+0x20>
    321a:	95 0f       	add	r25, r21
    321c:	50 e0       	ldi	r21, 0x00	; 0
    321e:	55 1f       	adc	r21, r21
    3220:	62 9f       	mul	r22, r18
    3222:	f0 01       	movw	r30, r0
    3224:	72 9f       	mul	r23, r18
    3226:	bb 27       	eor	r27, r27
    3228:	f0 0d       	add	r31, r0
    322a:	b1 1d       	adc	r27, r1
    322c:	63 9f       	mul	r22, r19
    322e:	aa 27       	eor	r26, r26
    3230:	f0 0d       	add	r31, r0
    3232:	b1 1d       	adc	r27, r1
    3234:	aa 1f       	adc	r26, r26
    3236:	64 9f       	mul	r22, r20
    3238:	66 27       	eor	r22, r22
    323a:	b0 0d       	add	r27, r0
    323c:	a1 1d       	adc	r26, r1
    323e:	66 1f       	adc	r22, r22
    3240:	82 9f       	mul	r24, r18
    3242:	22 27       	eor	r18, r18
    3244:	b0 0d       	add	r27, r0
    3246:	a1 1d       	adc	r26, r1
    3248:	62 1f       	adc	r22, r18
    324a:	73 9f       	mul	r23, r19
    324c:	b0 0d       	add	r27, r0
    324e:	a1 1d       	adc	r26, r1
    3250:	62 1f       	adc	r22, r18
    3252:	83 9f       	mul	r24, r19
    3254:	a0 0d       	add	r26, r0
    3256:	61 1d       	adc	r22, r1
    3258:	22 1f       	adc	r18, r18
    325a:	74 9f       	mul	r23, r20
    325c:	33 27       	eor	r19, r19
    325e:	a0 0d       	add	r26, r0
    3260:	61 1d       	adc	r22, r1
    3262:	23 1f       	adc	r18, r19
    3264:	84 9f       	mul	r24, r20
    3266:	60 0d       	add	r22, r0
    3268:	21 1d       	adc	r18, r1
    326a:	82 2f       	mov	r24, r18
    326c:	76 2f       	mov	r23, r22
    326e:	6a 2f       	mov	r22, r26
    3270:	11 24       	eor	r1, r1
    3272:	9f 57       	subi	r25, 0x7F	; 127
    3274:	50 40       	sbci	r21, 0x00	; 0
    3276:	9a f0       	brmi	.+38     	; 0x329e <__mulsf3_pse+0x88>
    3278:	f1 f0       	breq	.+60     	; 0x32b6 <__mulsf3_pse+0xa0>
    327a:	88 23       	and	r24, r24
    327c:	4a f0       	brmi	.+18     	; 0x3290 <__mulsf3_pse+0x7a>
    327e:	ee 0f       	add	r30, r30
    3280:	ff 1f       	adc	r31, r31
    3282:	bb 1f       	adc	r27, r27
    3284:	66 1f       	adc	r22, r22
    3286:	77 1f       	adc	r23, r23
    3288:	88 1f       	adc	r24, r24
    328a:	91 50       	subi	r25, 0x01	; 1
    328c:	50 40       	sbci	r21, 0x00	; 0
    328e:	a9 f7       	brne	.-22     	; 0x327a <__mulsf3_pse+0x64>
    3290:	9e 3f       	cpi	r25, 0xFE	; 254
    3292:	51 05       	cpc	r21, r1
    3294:	80 f0       	brcs	.+32     	; 0x32b6 <__mulsf3_pse+0xa0>
    3296:	0c 94 a4 18 	jmp	0x3148	; 0x3148 <__fp_inf>
    329a:	0c 94 ef 18 	jmp	0x31de	; 0x31de <__fp_szero>
    329e:	5f 3f       	cpi	r21, 0xFF	; 255
    32a0:	e4 f3       	brlt	.-8      	; 0x329a <__mulsf3_pse+0x84>
    32a2:	98 3e       	cpi	r25, 0xE8	; 232
    32a4:	d4 f3       	brlt	.-12     	; 0x329a <__mulsf3_pse+0x84>
    32a6:	86 95       	lsr	r24
    32a8:	77 95       	ror	r23
    32aa:	67 95       	ror	r22
    32ac:	b7 95       	ror	r27
    32ae:	f7 95       	ror	r31
    32b0:	e7 95       	ror	r30
    32b2:	9f 5f       	subi	r25, 0xFF	; 255
    32b4:	c1 f7       	brne	.-16     	; 0x32a6 <__mulsf3_pse+0x90>
    32b6:	fe 2b       	or	r31, r30
    32b8:	88 0f       	add	r24, r24
    32ba:	91 1d       	adc	r25, r1
    32bc:	96 95       	lsr	r25
    32be:	87 95       	ror	r24
    32c0:	97 f9       	bld	r25, 7
    32c2:	08 95       	ret

000032c4 <memcpy>:
    32c4:	fb 01       	movw	r30, r22
    32c6:	dc 01       	movw	r26, r24
    32c8:	02 c0       	rjmp	.+4      	; 0x32ce <memcpy+0xa>
    32ca:	01 90       	ld	r0, Z+
    32cc:	0d 92       	st	X+, r0
    32ce:	41 50       	subi	r20, 0x01	; 1
    32d0:	50 40       	sbci	r21, 0x00	; 0
    32d2:	d8 f7       	brcc	.-10     	; 0x32ca <memcpy+0x6>
    32d4:	08 95       	ret

000032d6 <_exit>:
    32d6:	f8 94       	cli

000032d8 <__stop_program>:
    32d8:	ff cf       	rjmp	.-2      	; 0x32d8 <__stop_program>
